diff --git a/CMakeFilters.cmake b/CMakeFilters.cmake
index fac64a6b..ffc455c6 100644
--- a/CMakeFilters.cmake
+++ b/CMakeFilters.cmake
@@ -18,14 +18,10 @@ if (HDF4_ALLOW_EXTERNAL_SUPPORT MATCHES "GIT" OR HDF4_ALLOW_EXTERNAL_SUPPORT MAT
     set (ZLIB_BRANCH ${ZLIB_GIT_BRANCH})
     set (SZIP_URL ${SZIP_GIT_URL})
     set (SZIP_BRANCH ${SZIP_GIT_BRANCH})
-  elseif (HDF4_ALLOW_EXTERNAL_SUPPORT MATCHES "SVN")
-    set (JPEG_URL ${JPEG_SVN_URL})
-    set (ZLIB_URL ${ZLIB_SVN_URL})
-    set (SZIP_URL ${SZIP_SVN_URL})
   elseif (HDF4_ALLOW_EXTERNAL_SUPPORT MATCHES "TGZ")
     if (NOT TGZPATH)
       set (TGZPATH ${HDF4_SOURCE_DIR})
-    endif (NOT TGZPATH)
+    endif ()
     set (JPEG_URL ${TGZPATH}/${JPEG_TGZ_NAME})
     set (ZLIB_URL ${TGZPATH}/${ZLIB_TGZ_NAME})
     set (SZIP_URL ${TGZPATH}/${SZIP_TGZ_NAME})
@@ -47,8 +43,8 @@ if (HDF4_ENABLE_JPEG_LIB_SUPPORT)
       if (NOT JPEG_FOUND)
         find_package (JPEG) # Legacy find
         if (JPEG_FOUND)
-          set (LINK_LIBS ${LINK_LIBS} ${JPEG_LIBRARIES})
-          set (LINK_SHARED_LIBS ${LINK_SHARED_LIBS} ${JPEG_LIBRARIES})
+          set (LINK_COMP_LIBS ${LINK_COMP_LIBS} ${JPEG_LIBRARIES})
+          set (LINK_COMP_SHARED_LIBS ${LINK_COMP_SHARED_LIBS} ${JPEG_LIBRARIES})
         endif ()
       endif ()
     endif ()
@@ -59,7 +55,7 @@ if (HDF4_ENABLE_JPEG_LIB_SUPPORT)
       set (JPEG_INCLUDE_DIR_GEN ${JPEG_INCLUDE_DIR})
       set (JPEG_INCLUDE_DIRS ${JPEG_INCLUDE_DIRS} ${JPEG_INCLUDE_DIR})
     else ()
-      if (HDF4_ALLOW_EXTERNAL_SUPPORT MATCHES "GIT" OR HDF4_ALLOW_EXTERNAL_SUPPORT MATCHES "SVN" OR HDF4_ALLOW_EXTERNAL_SUPPORT MATCHES "TGZ")
+      if (HDF4_ALLOW_EXTERNAL_SUPPORT MATCHES "GIT" OR HDF4_ALLOW_EXTERNAL_SUPPORT MATCHES "TGZ")
         # May need to build JPEG with PIC on x64 machines with gcc
         # Need to use CMAKE_ANSI_CFLAGS define so that compiler test works
         if (BUILD_JPEG_WITH_PIC)
@@ -86,9 +82,9 @@ if (HDF4_ENABLE_JPEG_LIB_SUPPORT)
     set (H4_HAVE_JPEGLIB_H 1)
   endif ()
   if (BUILD_SHARED_LIBS)
-    set (LINK_SHARED_LIBS ${LINK_SHARED_LIBS} ${JPEG_SHARED_LIBRARY})
+    set (LINK_COMP_SHARED_LIBS ${LINK_COMP_SHARED_LIBS} ${JPEG_SHARED_LIBRARY})
   endif ()
-  set (LINK_LIBS ${LINK_LIBS} ${JPEG_STATIC_LIBRARY})
+  set (LINK_COMP_LIBS ${LINK_COMP_LIBS} ${JPEG_STATIC_LIBRARY})
   INCLUDE_DIRECTORIES (${JPEG_INCLUDE_DIRS})
   message (STATUS "JPEGLIB is ON")
 endif ()
@@ -104,8 +100,8 @@ if (HDF4_ENABLE_Z_LIB_SUPPORT)
       if (NOT ZLIB_FOUND)
         find_package (ZLIB) # Legacy find
         if (ZLIB_FOUND)
-          set (LINK_LIBS ${LINK_LIBS} ${ZLIB_LIBRARIES})
-          set (LINK_SHARED_LIBS ${LINK_SHARED_LIBS} ${ZLIB_LIBRARIES})
+          set (LINK_COMP_LIBS ${LINK_COMP_LIBS} ${ZLIB_LIBRARIES})
+          set (LINK_COMP_SHARED_LIBS ${LINK_COMP_SHARED_LIBS} ${ZLIB_LIBRARIES})
         endif ()
       endif ()
     endif ()
@@ -117,7 +113,7 @@ if (HDF4_ENABLE_Z_LIB_SUPPORT)
       set (ZLIB_INCLUDE_DIR_GEN ${ZLIB_INCLUDE_DIR})
       set (ZLIB_INCLUDE_DIRS ${ZLIB_INCLUDE_DIRS} ${ZLIB_INCLUDE_DIR})
     else ()
-      if (HDF4_ALLOW_EXTERNAL_SUPPORT MATCHES "GIT" OR HDF4_ALLOW_EXTERNAL_SUPPORT MATCHES "SVN" OR HDF4_ALLOW_EXTERNAL_SUPPORT MATCHES "TGZ")
+      if (HDF4_ALLOW_EXTERNAL_SUPPORT MATCHES "GIT" OR HDF4_ALLOW_EXTERNAL_SUPPORT MATCHES "TGZ")
         EXTERNAL_ZLIB_LIBRARY (${HDF4_ALLOW_EXTERNAL_SUPPORT})
         set (H4_HAVE_FILTER_DEFLATE 1)
         set (H4_HAVE_ZLIB_H 1)
@@ -134,9 +130,9 @@ if (HDF4_ENABLE_Z_LIB_SUPPORT)
     set (H4_HAVE_LIBZ 1)
   endif ()
   if (BUILD_SHARED_LIBS)
-    set (LINK_SHARED_LIBS ${LINK_SHARED_LIBS} ${ZLIB_SHARED_LIBRARY})
+    set (LINK_COMP_SHARED_LIBS ${LINK_COMP_SHARED_LIBS} ${ZLIB_SHARED_LIBRARY})
   endif ()
-  set (LINK_LIBS ${LINK_LIBS} ${ZLIB_STATIC_LIBRARY})
+  set (LINK_COMP_LIBS ${LINK_COMP_LIBS} ${ZLIB_STATIC_LIBRARY})
   INCLUDE_DIRECTORIES (${ZLIB_INCLUDE_DIRS})
   message (STATUS "Filter ZLIB is ON")
 endif ()
@@ -153,8 +149,8 @@ if (HDF4_ENABLE_SZIP_SUPPORT)
     if (NOT SZIP_FOUND)
       find_package (SZIP) # Legacy find
       if (SZIP_FOUND)
-        set (LINK_LIBS ${LINK_LIBS} ${SZIP_LIBRARIES})
-        set (LINK_SHARED_LIBS ${LINK_SHARED_LIBS} ${SZIP_LIBRARIES})
+        set (LINK_COMP_LIBS ${LINK_COMP_LIBS} ${SZIP_LIBRARIES})
+        set (LINK_COMP_SHARED_LIBS ${LINK_COMP_SHARED_LIBS} ${SZIP_LIBRARIES})
       endif ()
     endif ()
   endif ()
@@ -165,7 +161,7 @@ if (HDF4_ENABLE_SZIP_SUPPORT)
     set (SZIP_INCLUDE_DIR_GEN ${SZIP_INCLUDE_DIR})
     set (SZIP_INCLUDE_DIRS ${SZIP_INCLUDE_DIRS} ${SZIP_INCLUDE_DIR})
   else ()
-    if (HDF4_ALLOW_EXTERNAL_SUPPORT MATCHES "GIT" OR HDF4_ALLOW_EXTERNAL_SUPPORT MATCHES "GIT" OR HDF4_ALLOW_EXTERNAL_SUPPORT MATCHES "SVN" OR HDF4_ALLOW_EXTERNAL_SUPPORT MATCHES "TGZ")
+    if (HDF4_ALLOW_EXTERNAL_SUPPORT MATCHES "GIT" OR HDF4_ALLOW_EXTERNAL_SUPPORT MATCHES "TGZ")
       EXTERNAL_SZIP_LIBRARY (${HDF4_ALLOW_EXTERNAL_SUPPORT} ${HDF4_ENABLE_SZIP_ENCODING})
       set (H4_HAVE_FILTER_SZIP 1)
       set (H4_HAVE_SZLIB_H 1)
@@ -176,9 +172,9 @@ if (HDF4_ENABLE_SZIP_SUPPORT)
     endif ()
   endif ()
   if (BUILD_SHARED_LIBS)
-    set (LINK_SHARED_LIBS ${LINK_SHARED_LIBS} ${SZIP_SHARED_LIBRARY})
+    set (LINK_COMP_SHARED_LIBS ${LINK_COMP_SHARED_LIBS} ${SZIP_SHARED_LIBRARY})
   endif ()
-  set (LINK_LIBS ${LINK_LIBS} ${SZIP_STATIC_LIBRARY})
+  set (LINK_COMP_LIBS ${LINK_COMP_LIBS} ${SZIP_STATIC_LIBRARY})
   INCLUDE_DIRECTORIES (${SZIP_INCLUDE_DIRS})
   message (STATUS "Filter SZIP is ON")
   if (HDF4_ENABLE_SZIP_ENCODING)
diff --git a/CMakeInstallation.cmake b/CMakeInstallation.cmake
index 37f54e45..9d19d74c 100644
--- a/CMakeInstallation.cmake
+++ b/CMakeInstallation.cmake
@@ -8,7 +8,7 @@ if (WIN32)
   find_program (NSIS_EXECUTABLE NSIS.exe PATHS "$ENV{ProgramFiles}\\NSIS" "$ENV{ProgramFiles${PF_ENV_EXT}}\\NSIS")
   if(NOT CPACK_WIX_ROOT)
     file(TO_CMAKE_PATH "$ENV{WIX}" CPACK_WIX_ROOT)
-  endif()
+  endif ()
   find_program (WIX_EXECUTABLE candle  PATHS "${CPACK_WIX_ROOT}/bin")
 endif ()
 
@@ -29,7 +29,7 @@ endif ()
 if (NOT HDF4_EXTERNALLY_CONFIGURED)
   install (
       EXPORT ${HDF4_EXPORTED_TARGETS}
-      DESTINATION ${HDF4_INSTALL_CMAKE_DIR}
+      DESTINATION ${HDF4_INSTALL_CMAKE_DIR}/hdf4
       FILE ${HDF4_PACKAGE}${HDF_PACKAGE_EXT}-targets.cmake
       NAMESPACE ${HDF4_PACKAGE}::
       COMPONENT configinstall
@@ -45,7 +45,7 @@ if (NOT HDF4_EXTERNALLY_CONFIGURED)
       FILE ${HDF4_PACKAGE}${HDF_PACKAGE_EXT}-targets.cmake
       NAMESPACE ${HDF4_PACKAGE}::
   )
-endif (NOT HDF4_EXTERNALLY_CONFIGURED)
+endif ()
 
 #-----------------------------------------------------------------------------
 # Set includes needed for build
@@ -73,7 +73,7 @@ set (CURRENT_BUILD_DIR "${CMAKE_CURRENT_BINARY_DIR}" )
 configure_package_config_file (
     ${HDF_RESOURCES_DIR}/hdf4-config.cmake.in
     "${HDF4_BINARY_DIR}/${HDF4_PACKAGE}${HDF_PACKAGE_EXT}-config.cmake"
-    INSTALL_DESTINATION "${HDF4_INSTALL_CMAKE_DIR}"
+    INSTALL_DESTINATION "${HDF4_INSTALL_CMAKE_DIR}/hdf4"
     PATH_VARS INCLUDE_INSTALL_DIR SHARE_INSTALL_DIR CURRENT_BUILD_DIR
     INSTALL_PREFIX "${CMAKE_CURRENT_BINARY_DIR}"
 )
@@ -87,13 +87,13 @@ set (CURRENT_BUILD_DIR "${CMAKE_INSTALL_PREFIX}" )
 configure_package_config_file (
     ${HDF_RESOURCES_DIR}/hdf4-config.cmake.in
     "${HDF4_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/${HDF4_PACKAGE}${HDF_PACKAGE_EXT}-config.cmake"
-    INSTALL_DESTINATION "${HDF4_INSTALL_CMAKE_DIR}"
+    INSTALL_DESTINATION "${HDF4_INSTALL_CMAKE_DIR}/hdf4"
     PATH_VARS INCLUDE_INSTALL_DIR SHARE_INSTALL_DIR CURRENT_BUILD_DIR
 )
 if (NOT HDF4_EXTERNALLY_CONFIGURED)
   install (
       FILES ${HDF4_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/${HDF4_PACKAGE}${HDF_PACKAGE_EXT}-config.cmake
-      DESTINATION ${HDF4_INSTALL_CMAKE_DIR}
+      DESTINATION ${HDF4_INSTALL_CMAKE_DIR}/hdf4
       COMPONENT configinstall
   )
 endif ()
@@ -108,7 +108,7 @@ if (NOT HDF4_EXTERNALLY_CONFIGURED)
   )
   install (
       FILES ${HDF4_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/${HDF4_PACKAGE}${HDF_PACKAGE_EXT}-config-version.cmake
-      DESTINATION ${HDF4_INSTALL_CMAKE_DIR}
+      DESTINATION ${HDF4_INSTALL_CMAKE_DIR}/hdf4
       COMPONENT configinstall
   )
 endif ()
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 39960364..5ce8257d 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -200,6 +200,8 @@ set (HDF4_JAVA_LOGGING_JAR         ${HDF4_SOURCE_DIR}/java/lib/slf4j-api-1.7.5.j
 set (HDF4_JAVA_LOGGING_NOP_JAR     ${HDF4_SOURCE_DIR}/java/lib/ext/slf4j-nop-1.7.5.jar)
 set (HDF4_JAVA_LOGGING_SIMPLE_JAR  ${HDF4_SOURCE_DIR}/java/lib/ext/slf4j-simple-1.7.5.jar)
 
+set (CMAKE_MODULE_PATH ${HDF_RESOURCES_DIR} ${HDF_RESOURCES_EXT_DIR} ${CMAKE_MODULE_PATH})
+
 if (APPLE)
   option (HDF4_BUILD_FRAMEWORKS "TRUE to build as frameworks libraries, FALSE to build according to BUILD_SHARED_LIBS" FALSE)
 endif ()
@@ -243,9 +245,9 @@ if (NOT HDF4_INSTALL_DATA_DIR)
   endif ()
 endif ()
 
-if(DEFINED ADDITIONAL_CMAKE_PREFIX_PATH AND EXISTS "${ADDITIONAL_CMAKE_PREFIX_PATH}")
+if (DEFINED ADDITIONAL_CMAKE_PREFIX_PATH AND EXISTS "${ADDITIONAL_CMAKE_PREFIX_PATH}")
   set (CMAKE_PREFIX_PATH ${ADDITIONAL_CMAKE_PREFIX_PATH} ${CMAKE_PREFIX_PATH})
-endif()
+endif ()
 
 #-----------------------------------------------------------------------------
 # parse the full version number from hfile.h and include in H4_VERS_INFO
@@ -285,6 +287,8 @@ include (${HDF_RESOURCES_EXT_DIR}/HDFMacros.cmake)
 include (${HDF_RESOURCES_EXT_DIR}/HDFLibMacros.cmake)
 include (${HDF_RESOURCES_DIR}/HDF4Macros.cmake)
 
+SET_HDF_BUILD_TYPE()
+
 #-----------------------------------------------------------------------------
 # Setup output Directories
 #-----------------------------------------------------------------------------
@@ -302,12 +306,12 @@ if (NOT HDF4_EXTERNALLY_CONFIGURED)
       ${PROJECT_BINARY_DIR}/bin/fortran CACHE PATH "Single Directory for all fortran modules."
   )
   if (WIN32)
-    set (CMAKE_TEST_OUTPUT_DIRECTORY ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CMAKE_BUILD_TYPE})
+    set (CMAKE_TEST_OUTPUT_DIRECTORY ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CTEST_CONFIGURATION_TYPE})
     set (CMAKE_PDB_OUTPUT_DIRECTORY
         ${PROJECT_BINARY_DIR}/bin CACHE PATH "Single Directory for all pdb files."
     )
   else ()
-    set (CMAKE_TEST_OUTPUT_DIRECTORY ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})
+    set (CMAKE_TEST_OUTPUT_DIRECTORY ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CTEST_CONFIGURATION_TYPE})
   endif ()
 else ()
   # if we are externally configured, but the project uses old cmake scripts
@@ -319,7 +323,7 @@ endif ()
 
 #-----------------------------------------------------------------------------
 # Targets built within this project are exported at Install time for use
-# by other projects using FindHDF4.
+# by other projects
 #-----------------------------------------------------------------------------
 if (NOT HDF4_EXPORTED_TARGETS)
   set (HDF4_EXPORTED_TARGETS "hdf4-targets")
@@ -357,7 +361,6 @@ option (BUILD_SHARED_LIBS "Build Shared Libraries" OFF)
 set (H4_ENABLE_SHARED_LIB NO)
 if (BUILD_SHARED_LIBS)
   set (H4_ENABLE_SHARED_LIB YES)
-  set (LINK_SHARED_LIBS ${LINK_LIBS})
 endif ()
 set (H4_ENABLE_STATIC_LIB YES)
 set (CMAKE_POSITION_INDEPENDENT_CODE ON)
@@ -421,11 +424,9 @@ INCLUDE_DIRECTORIES (${HDF4_INCLUDE_DIRECTORIES} )
 set (EXE_EXT "")
 if (WIN32)
   set (EXE_EXT ".exe")
-  if (NOT CYGWIN)
-    add_definitions (-D_BIND_TO_CURRENT_VCLIBS_VERSION=1)
-    add_definitions (-D_CRT_SECURE_NO_WARNINGS)
-    add_definitions (-D_CONSOLE)
-  endif ()
+  add_definitions (-D_BIND_TO_CURRENT_VCLIBS_VERSION=1)
+  add_definitions (-D_CRT_SECURE_NO_WARNINGS)
+  add_definitions (-D_CONSOLE)
 endif ()
 
 if (MSVC)
@@ -447,7 +448,7 @@ endif ()
 #-----------------------------------------------------------------------------
 # Add some definitions for Debug Builds
 #-----------------------------------------------------------------------------
-if (CMAKE_BUILD_TYPE MATCHES Debug)
+if (${HDF_CFG_NAME} MATCHES Debug)
   #-- NMake Makefiles will overwhelm the console with warnings if -Wall is used.
   if (NOT WIN32)
     add_definitions (-Wall)
@@ -458,14 +459,14 @@ endif ()
 # Compiler specific flags : Shouldn't there be compiler tests for these
 #-----------------------------------------------------------------------------
 if (CMAKE_COMPILER_IS_GNUCC)
-  if (CMAKE_BUILD_TYPE MATCHES Debug)
+  if (${HDF_CFG_NAME} MATCHES Debug)
     set (CMAKE_C_FLAGS "${CMAKE_ANSI_CFLAGS} ${CMAKE_C_FLAGS} -std=c99 -finline-functions -fno-common")
   else ()
     set (CMAKE_C_FLAGS "${CMAKE_ANSI_CFLAGS} ${CMAKE_C_FLAGS} -std=c99 -fomit-frame-pointer -finline-functions -fno-common")
   endif ()
 endif ()
 if (CMAKE_COMPILER_IS_GNUCXX)
-  if (CMAKE_BUILD_TYPE MATCHES Debug)
+  if (${HDF_CFG_NAME} MATCHES Debug)
     set (CMAKE_CXX_FLAGS "${CMAKE_ANSI_CFLAGS} ${CMAKE_CXX_FLAGS} -finline-functions -fno-common")
   else ()
     set (CMAKE_CXX_FLAGS "${CMAKE_ANSI_CFLAGS} ${CMAKE_CXX_FLAGS} -fomit-frame-pointer -finline-functions -fno-common")
@@ -482,9 +483,9 @@ if (HDF4_DISABLE_COMPILER_WARNINGS)
   if (MSVC)
     set (HDF4_WARNINGS_BLOCKED 1)
     string (REGEX REPLACE "(^| )([/-])W[0-9]( |$)" " " CMAKE_C_FLAGS "${CMAKE_C_FLAGS}")
-    set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /w")
+    set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /W0")
     string (REGEX REPLACE "(^| )([/-])W[0-9]( |$)" " " CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
-    set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w")
+    set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W0")
   endif ()
   if (WIN32)
     add_definitions (-D_CRT_SECURE_NO_WARNINGS)
@@ -513,36 +514,6 @@ if (CMAKE_COMPILER_IS_GNUCXX)
   set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fmessage-length=0")
 endif ()
 
-#-----------------------------------------------------------------------------
-# Option to Enable MPI Parallel
-#-----------------------------------------------------------------------------
-set (CMAKE_MODULE_PATH ${HDF_RESOURCES_DIR} ${HDF_RESOURCES_EXT_DIR} ${CMAKE_MODULE_PATH})
-option (HDF4_ENABLE_PARALLEL "Enable parallel build (requires MPI)" OFF)
-if (HDF4_ENABLE_PARALLEL)
-  include (FindMPI)
-  INCLUDE_DIRECTORIES (${MPI_C_INCLUDE_PATH})
-  if (MPI_C_FOUND)
-    set (H4_HAVE_PARALLEL 1)
-    # MPI checks, only do these if MPI_C_FOUND is true, otherwise they always fail
-    # and once set, they are cached as false and not regenerated
-    set (CMAKE_REQUIRED_LIBRARIES "${MPI_C_LIBRARIES}" )
-    CHECK_FUNCTION_EXISTS (MPI_File_get_size H4_HAVE_MPI_GET_SIZE)
-    # Used by Fortran + MPI
-    CHECK_SYMBOL_EXISTS (MPI_Comm_c2f "${MPI_C_INCLUDE_PATH}/mpi.h"  H4_HAVE_MPI_MULTI_LANG_Comm)
-    CHECK_SYMBOL_EXISTS (MPI_Info_c2f "${MPI_C_INCLUDE_PATH}/mpi.h"  H4_HAVE_MPI_MULTI_LANG_Info)
-  else ()
-    message (STATUS "Parallel libraries not found")
-  endif ()
-endif ()
-
-# Parallel IO usage requires MPI to be Linked and Included
-if (H4_HAVE_PARALLEL)
-  set (LINK_LIBS ${LINK_LIBS} ${MPI_C_LIBRARIES})
-  if (MPI_C_LINK_FLAGS)
-    set (CMAKE_EXE_LINKER_FLAGS "${MPI_C_LINK_FLAGS} ${CMAKE_EXE_LINKER_FLAGS}")
-  endif ()
-endif ()
-
 #-----------------------------------------------------------------------------
 # Include user macros
 #-----------------------------------------------------------------------------
@@ -595,16 +566,16 @@ else ()
 endif ()
 
 if (HDF4_BUILD_XDR_LIB)
-  add_subdirectory (${HDF4_SOURCE_DIR}/mfhdf/xdr ${PROJECT_BINARY_DIR}/xdr)
+  add_subdirectory (mfhdf/xdr)
 endif ()
 
 #-----------------------------------------------------------------------------
 # Add the HDF4 Library Target to the build
 #-----------------------------------------------------------------------------
-add_subdirectory (${HDF4_SOURCE_DIR}/hdf/src    ${PROJECT_BINARY_DIR}/hdf/src )
-add_subdirectory (${HDF4_SOURCE_DIR}/mfhdf/libsrc   ${PROJECT_BINARY_DIR}/mfhdf/libsrc)
+add_subdirectory (hdf/src )
+add_subdirectory (mfhdf/libsrc)
 
-if (HDF4_ALLOW_EXTERNAL_SUPPORT MATCHES "GIT" OR HDF4_ALLOW_EXTERNAL_SUPPORT MATCHES "SVN" OR HDF4_ALLOW_EXTERNAL_SUPPORT MATCHES "TGZ")
+if (HDF4_ALLOW_EXTERNAL_SUPPORT MATCHES "GIT" OR HDF4_ALLOW_EXTERNAL_SUPPORT MATCHES "TGZ")
   if (JPEG_FOUND AND JPEG_USE_EXTERNAL)
     add_dependencies (${HDF4_SRC_LIB_TARGET} JPEG)
     if (BUILD_SHARED_LIBS)
@@ -649,10 +620,10 @@ if (BUILD_TESTING)
 
   if (NOT HDF4_EXTERNALLY_CONFIGURED)
     if (EXISTS "${HDF4_SOURCE_DIR}/hdf/test" AND IS_DIRECTORY "${HDF4_SOURCE_DIR}/hdf/test")
-      add_subdirectory (${HDF4_SOURCE_DIR}/hdf/test   ${PROJECT_BINARY_DIR}/hdf/test)
+      add_subdirectory (hdf/test)
     endif ()
     if (EXISTS "${HDF4_SOURCE_DIR}/mfhdf/test" AND IS_DIRECTORY "${HDF4_SOURCE_DIR}/mfhdf/test")
-      add_subdirectory (${HDF4_SOURCE_DIR}/mfhdf/test ${PROJECT_BINARY_DIR}/mfhdf/test)
+      add_subdirectory (mfhdf/test)
     endif ()
   endif ()
 endif ()
@@ -673,8 +644,8 @@ if (EXISTS "${HDF4_SOURCE_DIR}/mfhdf/fortran" AND IS_DIRECTORY "${HDF4_SOURCE_DI
       set (H4_F77_FUNC_ "H4_F77_FUNC_(name,NAME) NAME")
     endif ()
     include (${HDF_RESOURCES_DIR}/HDF4UseFortran.cmake)
-    add_subdirectory (${HDF4_SOURCE_DIR}/mfhdf/fortran ${PROJECT_BINARY_DIR}/mfhdf/fortran)
-    add_subdirectory (${HDF4_SOURCE_DIR}/hdf/fortran ${PROJECT_BINARY_DIR}/hdf/fortran)
+    add_subdirectory (mfhdf/fortran)
+    add_subdirectory (hdf/fortran)
   endif ()
 endif ()
 
@@ -687,8 +658,8 @@ endif ()
 #-----------------------------------------------------------------------------
 # Library utilities
 #-----------------------------------------------------------------------------
-add_subdirectory (${HDF4_SOURCE_DIR}/hdf   ${PROJECT_BINARY_DIR}/hdf)
-add_subdirectory (${HDF4_SOURCE_DIR}/mfhdf ${PROJECT_BINARY_DIR}/mfhdf)
+add_subdirectory (hdf)
+add_subdirectory (mfhdf)
 
 #-----------------------------------------------------------------------------
 # Option to build HDF4 Examples
@@ -698,15 +669,15 @@ if (EXISTS "${HDF4_SOURCE_DIR}/mfhdf/examples" AND IS_DIRECTORY "${HDF4_SOURCE_D
   if (HDF4_BUILD_EXAMPLES)
     if (HDF4_BUILD_FORTRAN)
       if (EXISTS "${HDF4_SOURCE_DIR}/hdf/fortran/examples" AND IS_DIRECTORY "${HDF4_SOURCE_DIR}/hdf/fortran/examples")
-        add_subdirectory (${HDF4_SOURCE_DIR}/hdf/fortran/examples     ${PROJECT_BINARY_DIR}/hdf/fortran/examples)
+        add_subdirectory (hdf/fortran/examples)
       endif ()
       if (EXISTS "${HDF4_SOURCE_DIR}/mfhdf/fortran/examples" AND IS_DIRECTORY "${HDF4_SOURCE_DIR}/mfhdf/fortran/examples")
-        add_subdirectory (${HDF4_SOURCE_DIR}/mfhdf/fortran/examples     ${PROJECT_BINARY_DIR}/mfhdf/fortran/examples)
+        add_subdirectory (mfhdf/fortran/examples)
       endif ()
     endif ()
 
-    add_subdirectory (${HDF4_SOURCE_DIR}/hdf/examples    ${PROJECT_BINARY_DIR}/hdf/examples)
-    add_subdirectory (${HDF4_SOURCE_DIR}/mfhdf/examples    ${PROJECT_BINARY_DIR}/mfhdf/examples)
+    add_subdirectory (hdf/examples)
+    add_subdirectory (mfhdf/examples)
   endif ()
 endif ()
 
@@ -716,7 +687,7 @@ endif ()
 if (EXISTS "${HDF4_SOURCE_DIR}/java" AND IS_DIRECTORY "${HDF4_SOURCE_DIR}/java")
   option (HDF4_BUILD_JAVA  "Build Java HDF Library" OFF)
   if (HDF4_BUILD_JAVA)
-    add_subdirectory (${HDF4_SOURCE_DIR}/java ${PROJECT_BINARY_DIR}/java)
+    add_subdirectory (java)
   endif ()
 endif ()
 
diff --git a/MANIFEST b/MANIFEST
index a280ed11..6dd58744 100644
--- a/MANIFEST
+++ b/MANIFEST
@@ -1167,10 +1167,8 @@
 ./config/cmake/UseJavaClassFilelist.cmake
 ./config/cmake/UseJavaSymlinks.cmake
 
-./config/cmake_ext_mod/CheckTypeSize.cmake
 ./config/cmake_ext_mod/ConfigureChecks.cmake
 ./config/cmake_ext_mod/CTestCustom.cmake
-./config/cmake_ext_mod/FindMPI.cmake      _DO_NOT_DISTRIBUTE_
 ./config/cmake_ext_mod/FindSZIP.cmake
 ./config/cmake_ext_mod/GetTimeOfDayTest.cpp
 ./config/cmake_ext_mod/grepTest.cmake
diff --git a/README.txt b/README.txt
index a8943c5c..e0046971 100644
--- a/README.txt
+++ b/README.txt
@@ -1,4 +1,4 @@
-HDF version 4.2.13 released on 2017-06-24
+HDF version 4.2.13-post0 currently under development
 ===================================================
 
 Information about HDF
diff --git a/UserMacros.cmake b/UserMacros.cmake
index 45937533..01e76eda 100644
--- a/UserMacros.cmake
+++ b/UserMacros.cmake
@@ -7,9 +7,9 @@
 #-----------------------------------------------------------------------------
 # Option to Build with User Defined Values
 #-----------------------------------------------------------------------------
-MACRO (MACRO_USER_DEFINED_LIBS)
+macro (MACRO_USER_DEFINED_LIBS)
   set (USER_DEFINED_VALUE "FALSE")
-ENDMACRO ()
+endmacro ()
 
 #-------------------------------------------------------------------------------
 option (BUILD_USER_DEFINED_LIBS "Build With User Defined Values" OFF)
diff --git a/bin/h4vers b/bin/h4vers
index 56d2fe10..73ec9624 100755
--- a/bin/h4vers
+++ b/bin/h4vers
@@ -64,11 +64,11 @@ use strict;
 # ./hfile.h or ./hdf/src/hfile.h.
 #
 # If the version number is changed (either `-s' or `-i' was used on
-# the command line) then the first line of the README.txt and 
-# release_notes/RELEASE.txt two levels above the hfile.h file are also 
-# modified so it looks something like: This is hdf4-1.2.3-pre1 currently 
-# under development. The AC_INIT macro in configure.in will also change 
-# in this case to be something like: AC_INIT([HDF4], [hdf4-1.2.3-pre1], 
+# the command line) then the first line of the README.txt and
+# release_notes/RELEASE.txt two levels above the hfile.h file are also
+# modified so it looks something like: This is hdf4-1.2.3-pre1 currently
+# under development. The AC_INIT macro in configure.in will also change
+# in this case to be something like: AC_INIT([HDF4], [hdf4-1.2.3-pre1],
 # [help@hdfgroup.org]).
 #
 #Following paragraph from h5vers does not apply for HDF4?
@@ -105,11 +105,11 @@ sub setvers {
   $_[0] =~ s/^(\#\s*define\s+LIBVER_SUBRELEASE\s+\")[^\"]*/$1$vers[3]/m;
   $_[0] =~ s/^(\#\s*define\s+LIBVER_STRING\s+\")[^\"]*/
             sprintf("%sHDF Version %d.%d Release %d%s%s, %s %d, %d", $1, @vers[0,1,2],
-	    $vers[3]?"-":"", $vers[3], $months[@date[4]], @date[3], 1900+@date[5])/me;
+        $vers[3]?"-":"", $vers[3], $months[@date[4]], @date[3], 1900+@date[5])/me;
   my $stringlength = 25 + 32 + length $months[@date[4]] + 2 + 6;
   die "Version string too long:  $stringlength characters." unless $stringlength < 81;
   #printf("HDF Version %d.%d Release %d%s%s, %s %d, %d\n", @vers[0,1,2],
-  #	    $vers[3]?"-":"", $vers[3], $months[@date[4]], @date[3], 1900+@date[5]);
+  #        $vers[3]?"-":"", $vers[3], $months[@date[4]], @date[3], 1900+@date[5]);
   return $_[0];
 }
 
@@ -129,7 +129,7 @@ Usage: $prog [OPTS] [FILE]
         as \"version 1.1 release 0 (pre1)\" will be printed.
     FILE
         The name of the file that contains version information.  This is
-        seldom necessary since files hfile.h, hdf/src/hfile.h, 
+        seldom necessary since files hfile.h, hdf/src/hfile.h,
         src/hfile.h, and ../hdf/src/hfile.h are automatically checked.
 EOF
   exit 1;
@@ -172,7 +172,7 @@ die "mutually exclusive options given\n" if $set && $inc;
 # Determine file to use as hfile.h, README.txt,
 # release_notes/RELEASE.txt, configure.in,
 # and config/cmake/scripts/HDF4config.cmake.
-# The paths to README.txt, release_notes/RELEASE.txt, configure.ac, 
+# The paths to README.txt, release_notes/RELEASE.txt, configure.ac,
 # and config/cmake/scripts/HDF4config.cmake
 # files are always from the directory two levels above hfile.h.
 unless ($file) {
@@ -188,7 +188,7 @@ die "unable to read file: $file\n" unless -r $file;
 #my $LT_VERS = $file;
 #$LT_VERS =~ s/[^\/]*$/..\/config\/lt_vers.am/;
 #die "unable to read file: $LT_VERS\n" unless -r $file;
-# config/cmake/scripts/HDF5config.cmake
+# config/cmake/scripts/HDF4config.cmake
 my $HDF4CONFIGCMAKE = $file;
 $HDF4CONFIGCMAKE =~ s/[^\/]*$/..\/..\/config\/cmake\/scripts\/HDF4config.cmake/;
 die "unable to read file: $HDF4CONFIGCMAKE\n" unless -r $file;
@@ -346,9 +346,9 @@ if ($README) {
   my @contents = <FILE>;
   close FILE;
   $contents[0] = sprintf("HDF version %d.%d.%d%s %s",
-			 @newver[0,1,2],
-			 $newver[3] eq "" ? "" : "-".$newver[3],
-			 "currently under development\n");
+            @newver[0,1,2],
+            $newver[3] eq "" ? "" : "-".$newver[3],
+            "currently under development\n");
   open FILE, ">$README" or die "$README: $!\n";
   print FILE @contents;
   close FILE;
@@ -360,9 +360,9 @@ if ($RELEASE) {
   my @contents = <FILE>;
   close FILE;
   $contents[0] = sprintf("HDF version %d.%d.%d%s %s",
-			 @newver[0,1,2],
-			 $newver[3] eq "" ? "" : "-".$newver[3],
-			 "currently under development\n");
+            @newver[0,1,2],
+            $newver[3] eq "" ? "" : "-".$newver[3],
+            "currently under development\n");
   open FILE, ">$RELEASE" or die "$RELEASE: $!\n";
   print FILE @contents;
   close FILE;
@@ -372,10 +372,10 @@ if ($RELEASE) {
 # There are currently 2 occurrences of the version string in the man/hdf.1 file.
 # Since they aren't the top line of the file we search rewrite the file line by
 # line, searching for the current major.minor.release version string, and replacing
-# it with the new one.  In case someone changes the version string manually or it 
-# otherwise gets out of sync, or another match is found that should not be updated, 
+# it with the new one.  In case someone changes the version string manually or it
+# otherwise gets out of sync, or another match is found that should not be updated,
 # we will track the changes in this file, issue an error message and exit at if
-# the number of changes is different than the 2 expected. 
+# the number of changes is different than the 2 expected.
 
 if ($MANHDF1) {
   my $expected_updates = 2;
@@ -406,16 +406,16 @@ if ($MANHDF1) {
       $man_hdf1_updates += 1;
     } elsif ($line =~ m/^$verstr\s*$/ || $line =~ m/^$verstr-[a-z]{1,5}\d{1,8}\s*$/ || $line =~ m/^$verstr\scurrently under development\s*$/  || $line =~ m/^$verstr-[a-z]{1,5}\d{1,8}\scurrently under development$\s*/) {
       # match the line further down that has just the version string, and replace it with the updated version string.
-      # this will match "major.minor.release" or "major.minor.release-subrelease" or  "major.minor.release currently 
-      # under development" or "major.minor.release-subrelease currently under development" (all followed by 
+      # this will match "major.minor.release" or "major.minor.release-subrelease" or  "major.minor.release currently
+      # under development" or "major.minor.release-subrelease currently under development" (all followed by
       # any number of spaces), provided that the subrelease
       # string is 2-5 letters and 1-3 digits.  This should not match any line with text before or after the version.
       print FILE $newverstr, "\n";
       $man_hdf1_updates += 1;
     } else {
       print FILE $line;
-    }   
-  }  
+    }
+  }
   close FILE;
   if ($man_hdf1_updates != $expected_updates) {
     printf "ERROR: $expected_updates version updates were expected in $MANHDF1, but $man_hdf1_updates occurred.  Please check the changes to the $MANHDF1 file and correct the problem.\n";
@@ -424,7 +424,7 @@ if ($MANHDF1) {
 }
 
 # helper function to read the file for updating
-# config/cmake/scripts/HDF4Config.cmake and 
+# config/cmake/scripts/HDF4Config.cmake and
 # java/src/hdf/hdf5lib/HDFLibrary.java files.
 # The version string in those files is not at the top, so the string replacement
 # is not for the first line, and reading/writing the entire file as one string
@@ -440,8 +440,8 @@ sub read_file {
     return $all;
 }
 
-# helper function to write the file for updating 
-# config/cmake/scripts/HDF4config.cmake and 
+# helper function to write the file for updating
+# config/cmake/scripts/HDF4config.cmake and
 # java/src/hdf/hdf5lib/HDFLibrary.java files.
 sub write_file {
     my ($filename, $content) = @_;
@@ -489,7 +489,7 @@ sub gen_configure {
 
 # Update the configure.ac files and regenerate them
 gen_configure("HDF", $CONFIGURE) if $CONFIGURE;
-    
+
 sub gen_h5pubconf {
     my ($name, $pubconf, @vers) = @_;
 
@@ -530,11 +530,11 @@ sub gen_h5pubconf {
 # Print the new version number
 if ($verbose) {
   #printf("Version %d.%d Release %d%s\n", @newver[0,1,2],
-  #	 $newver[3] eq "" ? "" : " (".$newver[3].")");
+  #     $newver[3] eq "" ? "" : " (".$newver[3].")");
   printf("%s\n", $newver[4]);
 } else {
   printf("%d.%d.%d%s\n", @newver[0,1,2],
-	 $newver[3] eq "" ? "" : "-".$newver[3]);
+    $newver[3] eq "" ? "" : "-".$newver[3]);
 }
 
 exit 0;
diff --git a/bin/release b/bin/release
index bab3f289..561f51e3 100755
--- a/bin/release
+++ b/bin/release
@@ -44,26 +44,26 @@ USAGE()
 {
 cat << EOF
 Usage: $0 -d <dir> [-h] [--nocheck] [--private] <methods> ...
-   -d <dir>	The name of the directory where the releas(es) should be
+   -d <dir>    The name of the directory where the releas(es) should be
                 placed.
    -h           print the help page.
-   --nocheck	Ignore errors in MANIFEST file.
-   --private	Make a private release with today's date in version information.
-         
+   --nocheck    Ignore errors in MANIFEST file.
+   --private    Make a private release with today's date in version information.
+
 This must be run at the top level of the source directory.
 The other command-line options are the names of the programs to use
 for compressing the resulting tar archive (if none are given then
 "tar md5" is assumed):
-    tar		-- use tar and don't do any compressing.
-    gzip	-- use gzip with "-9" and append ".gz" to the output name.
-    cmake-tgz   -- create a tar file using the gzip default level with a 
-                   build-unix.sh command file and all other CMake files needed 
+    tar        -- use tar and don't do any compressing.
+    gzip    -- use gzip with "-9" and append ".gz" to the output name.
+    cmake-tgz   -- create a tar file using the gzip default level with a
+                   build-unix.sh command file and all other CMake files needed
                    to build HDF4 source using CMake on unix machines.
     bzip2       -- use bzip2 with "-9" and append ".bz2" to the output name.
-    zip		-- convert all text files to DOS style and form a zip file for 
+    zip        -- convert all text files to DOS style and form a zip file for
                    Windows use.
-    cmake-zip   -- convert all text files to DOS style and create a zip file 
-                   including cmake scripts and .bat files to build HDF4 source 
+    cmake-zip   -- convert all text files to DOS style and create a zip file
+                   including cmake scripts and .bat files to build HDF4 source
                    using CMake on Windows.
 
 An md5 checksum is produced for each archive created and stored in the md5 file.
@@ -116,8 +116,8 @@ EOF
 tar2zip()
 {
     if [ $# -ne 3 ]; then
-	echo "usage: tar2zip <tarfilename> <zipfilename>"
-	return 1
+    echo "usage: tar2zip <tarfilename> <zipfilename>"
+    return 1
     fi
     ztmpdir=/tmp/tmpdir$$
     mkdir -p $ztmpdir
@@ -129,23 +129,23 @@ tar2zip()
     (cd $ztmpdir; tar xf -) < $tarfile
     # sanity check
     if [ ! -d $ztmpdir/$version ]; then
-	echo "untar did not create $ztmpdir/$version source dir"
-	# cleanup
-	rm -rf $ztmpdir
-	return 1
+    echo "untar did not create $ztmpdir/$version source dir"
+    # cleanup
+    rm -rf $ztmpdir
+    return 1
     fi
     # step 2: convert text files
     # There maybe a simpler way to do this.
     # options used in unix2dos:
-    # -k   Keep the date stamp 
+    # -k   Keep the date stamp
     # -q   quiet mode
     # grep redirect output to /dev/null because -q or -s are not portable.
     find $ztmpdir/$version | \
-	while read inf; do \
-	    if file $inf | grep "$inf\: .*text" > /dev/null 2>&1 ; then \
-		unix2dos -q -k $inf; \
-	    fi\
-	done
+    while read inf; do \
+        if file $inf | grep "$inf\: .*text" > /dev/null 2>&1 ; then \
+        unix2dos -q -k $inf; \
+        fi\
+    done
     # step 3: make zipball
     # -9 maximum compression
     # -y Store symbolic links as such in the zip archive
@@ -215,12 +215,12 @@ tar2cmakezip()
     fi
 
     # step 2: add batch file for building CMake on window
-    (cd $cmziptmpsubdir; echo "ctest -S HDF4config.cmake,BUILD_GENERATOR=VS2012 -C Release -V -O hdf4.log" > build-VS2012-32.bat; chmod 755 build-VS2012-32.bat)
-    (cd $cmziptmpsubdir; echo "ctest -S HDF4config.cmake,BUILD_GENERATOR=VS201264 -C Release -V -O hdf4.log" > build-VS2012-64.bat; chmod 755 build-VS2012-64.bat)
     (cd $cmziptmpsubdir; echo "ctest -S HDF4config.cmake,BUILD_GENERATOR=VS2013 -C Release -V -O hdf4.log" > build-VS2013-32.bat; chmod 755 build-VS2013-32.bat)
     (cd $cmziptmpsubdir; echo "ctest -S HDF4config.cmake,BUILD_GENERATOR=VS201364 -C Release -V -O hdf4.log" > build-VS2013-64.bat; chmod 755 build-VS2013-64.bat)
     (cd $cmziptmpsubdir; echo "ctest -S HDF4config.cmake,BUILD_GENERATOR=VS2015 -C Release -V -O hdf4.log" > build-VS2015-32.bat; chmod 755 build-VS2015-32.bat)
     (cd $cmziptmpsubdir; echo "ctest -S HDF4config.cmake,BUILD_GENERATOR=VS201564 -C Release -V -O hdf4.log" > build-VS2015-64.bat; chmod 755 build-VS2015-32.bat)
+    (cd $cmziptmpsubdir; echo "ctest -S HDF4config.cmake,BUILD_GENERATOR=VS2017 -C Release -V -O hdf4.log" > build-VS2017-32.bat; chmod 755 build-VS2017-32.bat)
+    (cd $cmziptmpsubdir; echo "ctest -S HDF4config.cmake,BUILD_GENERATOR=VS201764 -C Release -V -O hdf4.log" > build-VS2017-64.bat; chmod 755 build-VS2017-64.bat)
 
     # step 3: add SZIP.tar.gz, ZLib.tar.gz and cmake files
     cp /mnt/scr1/pre-release/hdf4/CMake/SZip.tar.gz $cmziptmpsubdir
@@ -345,15 +345,15 @@ check=yes
 release_date=`date +%F`
 today=`date +%Y%m%d`
 pmode='no'
-tmpdir="../#release_tmp.$$"	# tmp work directory
+tmpdir="../#release_tmp.$$"    # tmp work directory
 
 # Restore previous Version information
 RESTORE_VERSION()
 {
     if [ X-${VERS_OLD} != X- ]; then
-	echo restoring version information back to $VERS_OLD
-	bin/h4vers -s $VERS_OLD
-	VERS_OLD=
+    echo restoring version information back to $VERS_OLD
+    bin/h4vers -s $VERS_OLD
+    VERS_OLD=
     fi
 }
 
@@ -363,28 +363,28 @@ while [ -n "$1" ]; do
     arg=$1
     shift
     case "$arg" in
-	-d)
-	    DEST=$1
-	    shift
-	    ;;
-	--nocheck)
-	    check=no
-	    ;;
-	-h)
-	    USAGE
-	    exit 0
-	    ;;
-	--private)
-	    pmode=yes
-	    ;;
-	-*)
-	    echo "Unknown switch: $arg" 1>&2
-	    USAGE
-	    exit 1
-	    ;;
-	*)
-	    methods="$methods $arg"
-	    ;;
+    -d)
+        DEST=$1
+        shift
+        ;;
+    --nocheck)
+        check=no
+        ;;
+    -h)
+        USAGE
+        exit 0
+        ;;
+    --private)
+        pmode=yes
+        ;;
+    -*)
+        echo "Unknown switch: $arg" 1>&2
+        USAGE
+        exit 1
+        ;;
+    *)
+        methods="$methods $arg"
+        ;;
     esac
 done
 
@@ -429,7 +429,7 @@ if [ "X$fail" = "Xyes" ]; then
     if [ $check = yes ]; then
         exit 1
     else
-	echo "Continuing anyway..."
+    echo "Continuing anyway..."
     fi
 fi
 
@@ -458,7 +458,7 @@ test "$verbose" && echo "   Running tar..." 1>&2
 ( \
     cd $tmpdir; \
     tar cf $HDF4_VERS.tar $HDF4_VERS/Makefile \
-	`sed 's/^\.\//hdf-'$VERS'\//' $MANIFEST` || exit 1 \
+    `sed 's/^\.\//hdf-'$VERS'\//' $MANIFEST` || exit 1 \
 )
 
 # Compress
@@ -466,39 +466,39 @@ MD5file=$HDF4_VERS.md5
 cp /dev/null $DEST/$MD5file
 for comp in $methods; do
     case $comp in
-	tar)
-	    cp -p $tmpdir/$HDF4_VERS.tar $DEST/$HDF4_VERS.tar
+    tar)
+        cp -p $tmpdir/$HDF4_VERS.tar $DEST/$HDF4_VERS.tar
             (cd $DEST; md5sum $HDF4_VERS.tar >> $MD5file)
-	    ;;
-	gzip)
-	    test "$verbose" && echo "   Running gzip..." 1>&2
-	    gzip -9 <$tmpdir/$HDF4_VERS.tar >$DEST/$HDF4_VERS.tar.gz
+        ;;
+    gzip)
+        test "$verbose" && echo "   Running gzip..." 1>&2
+        gzip -9 <$tmpdir/$HDF4_VERS.tar >$DEST/$HDF4_VERS.tar.gz
             (cd $DEST; md5sum $HDF4_VERS.tar.gz >> $MD5file)
-	    ;;
+        ;;
         cmake-tgz)
             test "$verbose" && echo "   Creating CMake tar.gz file..." 1>&2
             tar2cmaketgz $HDF4_VERS $tmpdir/$HDF4_VERS.tar $DEST/CMake-$HDF4_VERS.tar.gz 1>&2
             (cd $DEST; md5sum CMake-$HDF4_VERS.tar.gz >> $MD5file)
             ;;
-	bzip2)
-	    test "$verbose" && echo "   Running bzip2..." 1>&2
-	    bzip2 -9 <$tmpdir/$HDF4_VERS.tar >$DEST/$HDF4_VERS.tar.bz2
+    bzip2)
+        test "$verbose" && echo "   Running bzip2..." 1>&2
+        bzip2 -9 <$tmpdir/$HDF4_VERS.tar >$DEST/$HDF4_VERS.tar.bz2
             (cd $DEST; md5sum $HDF4_VERS.tar.bz2 >> $MD5file)
-	    ;;
-	zip)
-	    test "$verbose" && echo "   Creating zip ball..." 1>&2
-	    tar2zip $HDF4_VERS $tmpdir/$HDF4_VERS.tar $DEST/$HDF4_VERS.zip 1>&2
+        ;;
+    zip)
+        test "$verbose" && echo "   Creating zip ball..." 1>&2
+        tar2zip $HDF4_VERS $tmpdir/$HDF4_VERS.tar $DEST/$HDF4_VERS.zip 1>&2
             (cd $DEST; md5sum $HDF4_VERS.zip >> $MD5file)
-	    ;;
+        ;;
         cmake-zip)
             test "$verbose" && echo "   Creating CMake-zip ball..." 1>&2
             tar2cmakezip $HDF4_VERS $tmpdir/$HDF4_VERS.tar $DEST/CMake-$HDF4_VERS.zip 1>&2
             (cd $DEST; md5sum CMake-$HDF4_VERS.zip >> $MD5file)
             ;;
-	*)
-	    echo "***Error*** Unknown method $comp"
-	    exit 1
-	    ;;
+    *)
+        echo "***Error*** Unknown method $comp"
+        exit 1
+        ;;
     esac
 done
 
diff --git a/config/cmake/CTestScript.cmake b/config/cmake/CTestScript.cmake
index e5d8042c..f140e6c8 100755
--- a/config/cmake/CTestScript.cmake
+++ b/config/cmake/CTestScript.cmake
@@ -56,7 +56,7 @@ if (APPLE)
     # Shared fortran is not supported, build static
     set (BUILD_OPTIONS "${BUILD_OPTIONS} -DBUILD_SHARED_LIBS:BOOL=OFF -DCMAKE_ANSI_CFLAGS:STRING=-fPIC")
   else ()
-    set (BUILD_OPTIONS "${BUILD_OPTIONS} -DHDF5_BUILD_FORTRAN:BOOL=OFF")
+    set (BUILD_OPTIONS "${BUILD_OPTIONS} -DHDF4_BUILD_FORTRAN:BOOL=OFF")
   endif ()
 
   set (BUILD_OPTIONS "${BUILD_OPTIONS} -DCTEST_USE_LAUNCHERS:BOOL=ON -DCMAKE_BUILD_WITH_INSTALL_RPATH:BOOL=OFF")
diff --git a/config/cmake/HDF4_Examples.cmake.in b/config/cmake/HDF4_Examples.cmake.in
index fbae0f01..779b11a0 100644
--- a/config/cmake/HDF4_Examples.cmake.in
+++ b/config/cmake/HDF4_Examples.cmake.in
@@ -79,7 +79,7 @@ endif()
 if(${CDASH_LOCAL})
   set(ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DCDASH_LOCAL:BOOL=ON")
 endif()
-set(ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DHDF5_PACKAGE_NAME:STRING=@HDF4_PACKAGE@@HDF_PACKAGE_EXT@")
+set(ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DHDF4_PACKAGE_NAME:STRING=@HDF4_PACKAGE@@HDF_PACKAGE_EXT@")
 
 ###############################################################################################################
 # For any comments please contact cdashhelp@hdfgroup.org
diff --git a/config/cmake/UseJava.cmake b/config/cmake/UseJava.cmake
index 9b3bf023..c70f52ee 100644
--- a/config/cmake/UseJava.cmake
+++ b/config/cmake/UseJava.cmake
@@ -285,7 +285,7 @@
 #
 #    Example:
 #    create_javadoc(my_example_doc
-#      PACKAGES com.exmaple.foo com.example.bar
+#      PACKAGES com.example.foo com.example.bar
 #      SOURCEPATH "${CMAKE_CURRENT_SOURCE_DIR}"
 #      CLASSPATH ${CMAKE_JAVA_INCLUDE_PATH}
 #      WINDOWTITLE "My example"
@@ -482,6 +482,8 @@ function(add_jar _TARGET_NAME)
     else()
         get_filename_component(_add_jar_OUTPUT_DIR ${_add_jar_OUTPUT_DIR} ABSOLUTE)
     endif()
+    # ensure output directory exists
+    file (MAKE_DIRECTORY "${_add_jar_OUTPUT_DIR}")
 
     if (_add_jar_ENTRY_POINT)
         set(_ENTRY_POINT_OPTION e)
@@ -516,7 +518,7 @@ function(add_jar _TARGET_NAME)
        set(CMAKE_JAVA_INCLUDE_PATH_FINAL "${CMAKE_JAVA_INCLUDE_PATH_FINAL}${CMAKE_JAVA_INCLUDE_FLAG_SEP}${JAVA_INCLUDE_DIR}")
     endforeach()
 
-    set(CMAKE_JAVA_CLASS_OUTPUT_PATH "${_add_jar_OUTPUT_DIR}${CMAKE_FILES_DIRECTORY}/${_TARGET_NAME}.dir")
+    set(CMAKE_JAVA_CLASS_OUTPUT_PATH "${CMAKE_CURRENT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/${_TARGET_NAME}.dir")
 
     set(_JAVA_TARGET_OUTPUT_NAME "${_TARGET_NAME}.jar")
     if (_add_jar_OUTPUT_NAME AND _add_jar_VERSION)
@@ -547,7 +549,7 @@ function(add_jar _TARGET_NAME)
             list(APPEND _JAVA_COMPILE_FILELISTS ${_JAVA_FULL})
 
         elseif (_JAVA_EXT MATCHES ".java")
-            file(RELATIVE_PATH _JAVA_REL_BINARY_PATH ${_add_jar_OUTPUT_DIR} ${_JAVA_FULL})
+            file(RELATIVE_PATH _JAVA_REL_BINARY_PATH ${CMAKE_CURRENT_BINARY_DIR} ${_JAVA_FULL})
             file(RELATIVE_PATH _JAVA_REL_SOURCE_PATH ${CMAKE_CURRENT_SOURCE_DIR} ${_JAVA_FULL})
             string(LENGTH ${_JAVA_REL_BINARY_PATH} _BIN_LEN)
             string(LENGTH ${_JAVA_REL_SOURCE_PATH} _SRC_LEN)
diff --git a/config/cmake/cacheinit.cmake b/config/cmake/cacheinit.cmake
index 6db131b5..5c6d3edf 100644
--- a/config/cmake/cacheinit.cmake
+++ b/config/cmake/cacheinit.cmake
@@ -26,10 +26,6 @@ set (HDF4_ENABLE_NETCDF ON CACHE BOOL "Build HDF4 versions of NetCDF-3 APIS" FOR
 
 set (HDF4_BUILD_XDR_LIB OFF CACHE BOOL "Build HDF4 XDR Library" FORCE)
 
-set (HDF4_ENABLE_PARALLEL OFF CACHE BOOL "Enable parallel build (requires MPI)" FORCE)
-
-set (MPIEXEC_MAX_NUMPROCS "3" CACHE STRING "Minimum number of processes for HDF parallel tests" FORCE)
-
 set (HDF4_ENABLE_JPEG_LIB_SUPPORT ON CACHE BOOL "Enable Jpeg library" FORCE)
 
 set (HDF4_ENABLE_Z_LIB_SUPPORT ON CACHE BOOL "Enable Zlib Filters" FORCE)
diff --git a/config/cmake/hdf4-config.cmake.in b/config/cmake/hdf4-config.cmake.in
index 51df8775..e214abba 100644
--- a/config/cmake/hdf4-config.cmake.in
+++ b/config/cmake/hdf4-config.cmake.in
@@ -16,7 +16,6 @@ set (${HDF4_PACKAGE_NAME}_VALID_COMPONENTS
 #-----------------------------------------------------------------------------
 # User Options
 #-----------------------------------------------------------------------------
-set (${HDF4_PACKAGE_NAME}_ENABLE_PARALLEL @HDF4_ENABLE_PARALLEL@)
 set (${HDF4_PACKAGE_NAME}_BUILD_FORTRAN   @HDF4_BUILD_FORTRAN@)
 set (${HDF4_PACKAGE_NAME}_BUILD_JAVA      @HDF4_BUILD_JAVA@)
 set (${HDF4_PACKAGE_NAME}_BUILD_XDR_LIB   @HDF4_BUILD_XDR_LIB@)
@@ -70,9 +69,9 @@ endif ()
 #-----------------------------------------------------------------------------
 # Version Strings
 #-----------------------------------------------------------------------------
-set (HDF4_VERSION_STRING @HDF4_VERSION_STRING@)
-set (HDF4_VERSION_MAJOR  @HDF4_VERSION_MAJOR@)
-set (HDF4_VERSION_MINOR  @HDF4_VERSION_MINOR@)
+set (${HDF4_PACKAGE_NAME}_VERSION_STRING @HDF4_VERSION_STRING@)
+set (${HDF4_PACKAGE_NAME}_VERSION_MAJOR  @HDF4_VERSION_MAJOR@)
+set (${HDF4_PACKAGE_NAME}_VERSION_MINOR  @HDF4_VERSION_MINOR@)
 
 #-----------------------------------------------------------------------------
 # Don't include targets if this file is being picked up by another
@@ -80,15 +79,15 @@ set (HDF4_VERSION_MINOR  @HDF4_VERSION_MINOR@)
 #-----------------------------------------------------------------------------
 if (NOT TARGET "@HDF4_PACKAGE@")
   if (${HDF4_PACKAGE_NAME}_ENABLE_JPEG_LIB_SUPPORT AND ${HDF4_PACKAGE_NAME}_PACKAGE_EXTLIBS AND NOT TARGET "jpeg")
-    include (@PACKAGE_SHARE_INSTALL_DIR@/@JPEG_PACKAGE_NAME@@HDF_PACKAGE_EXT@-targets.cmake)
+    include (@PACKAGE_SHARE_INSTALL_DIR@/@JPEG_PACKAGE_NAME@/@JPEG_PACKAGE_NAME@@HDF_PACKAGE_EXT@-targets.cmake)
   endif ()
   if (${HDF4_PACKAGE_NAME}_ENABLE_Z_LIB_SUPPORT AND ${HDF4_PACKAGE_NAME}_PACKAGE_EXTLIBS AND NOT TARGET "zlib")
-    include (@PACKAGE_SHARE_INSTALL_DIR@/@ZLIB_PACKAGE_NAME@@HDF_PACKAGE_EXT@-targets.cmake)
+    include (@PACKAGE_SHARE_INSTALL_DIR@/@ZLIB_PACKAGE_NAME@/@ZLIB_PACKAGE_NAME@@HDF_PACKAGE_EXT@-targets.cmake)
   endif ()
   if (${HDF4_PACKAGE_NAME}_ENABLE_SZIP_SUPPORT AND ${HDF4_PACKAGE_NAME}_PACKAGE_EXTLIBS AND NOT TARGET "szip")
-    include (@PACKAGE_SHARE_INSTALL_DIR@/@SZIP_PACKAGE_NAME@@HDF_PACKAGE_EXT@-targets.cmake)
+    include (@PACKAGE_SHARE_INSTALL_DIR@/@SZIP_PACKAGE_NAME@/@SZIP_PACKAGE_NAME@@HDF_PACKAGE_EXT@-targets.cmake)
   endif ()
-  include (@PACKAGE_SHARE_INSTALL_DIR@/@HDF4_PACKAGE@@HDF_PACKAGE_EXT@-targets.cmake)
+  include (@PACKAGE_SHARE_INSTALL_DIR@/@HDF4_PACKAGE@/@HDF4_PACKAGE@@HDF_PACKAGE_EXT@-targets.cmake)
 endif ()
 
 # Handle default component(static) :
diff --git a/config/cmake/jrunTest.cmake b/config/cmake/jrunTest.cmake
index 6013db44..c0984f67 100644
--- a/config/cmake/jrunTest.cmake
+++ b/config/cmake/jrunTest.cmake
@@ -109,7 +109,7 @@ if (TEST_MASK_ERROR)
 endif ()
 
 # if the return value is !=0 bail out
-if (NOT ${TEST_RESULT} STREQUAL ${TEST_EXPECT})
+if (NOT "${TEST_RESULT}" STREQUAL "${TEST_EXPECT}")
   message (STATUS "ERROR OUTPUT: ${TEST_STREAM}")
   message (FATAL_ERROR "Failed: Test program ${TEST_PROGRAM} exited != 0.\n${TEST_ERROR}")
 endif ()
@@ -128,13 +128,13 @@ if (NOT TEST_SKIP_COMPARE)
       COMMAND ${CMAKE_COMMAND} -E compare_files ${TEST_FOLDER}/${TEST_OUTPUT} ${TEST_FOLDER}/${TEST_REFERENCE}
       RESULT_VARIABLE TEST_RESULT
   )
-  if (NOT ${TEST_RESULT} STREQUAL 0)
+  if (NOT "${TEST_RESULT}" STREQUAL "0")
     set (TEST_RESULT 0)
     file (STRINGS ${TEST_FOLDER}/${TEST_OUTPUT} test_act)
     list (LENGTH test_act len_act)
     file (STRINGS ${TEST_FOLDER}/${TEST_REFERENCE} test_ref)
     list (LENGTH test_ref len_ref)
-    if (NOT ${len_act} STREQUAL "0" AND NOT ${len_ref} STREQUAL "0")
+    if (NOT "${len_act}" STREQUAL "0" AND NOT "${len_ref}" STREQUAL "0")
       math (EXPR _FP_LEN "${len_ref} - 1")
       foreach (line RANGE 0 ${_FP_LEN})
         list (GET test_act ${line} str_act)
@@ -147,14 +147,14 @@ if (NOT TEST_SKIP_COMPARE)
         endif ()
       endforeach ()
     else ()
-      if (${len_act} STREQUAL "0")
+      if ("${len_act}" STREQUAL "0")
         message (STATUS "COMPARE Failed: ${TEST_FOLDER}/${TEST_OUTPUT} is empty")
       endif ()
-      if (${len_ref} STREQUAL "0")
+      if ("${len_ref}" STREQUAL "0")
         message (STATUS "COMPARE Failed: ${TEST_FOLDER}/${TEST_REFERENCE} is empty")
       endif ()
     endif ()
-    if (NOT ${len_act} STREQUAL ${len_ref})
+    if (NOT "${len_act}" STREQUAL "${len_ref}")
       set (TEST_RESULT 1)
     endif ()
   endif ()
@@ -162,7 +162,7 @@ if (NOT TEST_SKIP_COMPARE)
   message (STATUS "COMPARE Result: ${TEST_RESULT}")
 
   # again, if return value is !=0 scream and shout
-  if (NOT ${TEST_RESULT} STREQUAL 0)
+  if (NOT "${TEST_RESULT}" STREQUAL "0")
     message (FATAL_ERROR "Failed: The output of ${TEST_OUTPUT} did not match ${TEST_REFERENCE}")
   endif ()
 
@@ -178,14 +178,14 @@ if (NOT TEST_SKIP_COMPARE)
         COMMAND ${CMAKE_COMMAND} -E compare_files ${TEST_FOLDER}/${TEST_OUTPUT}.err ${TEST_FOLDER}/${TEST_ERRREF}
         RESULT_VARIABLE TEST_RESULT
     )
-    if (NOT ${TEST_RESULT} STREQUAL 0)
+    if (NOT "${TEST_RESULT}" STREQUAL "0")
       set (TEST_RESULT 0)
       file (STRINGS ${TEST_FOLDER}/${TEST_OUTPUT}.err test_act)
       list (LENGTH test_act len_act)
       file (STRINGS ${TEST_FOLDER}/${TEST_ERRREF} test_ref)
       list (LENGTH test_ref len_ref)
       math (EXPR _FP_LEN "${len_ref} - 1")
-      if (NOT ${len_act} STREQUAL "0" AND NOT ${len_ref} STREQUAL "0")
+      if (NOT "${len_act}" STREQUAL "0" AND NOT "${len_ref}" STREQUAL "0")
         math (EXPR _FP_LEN "${len_ref} - 1")
         foreach (line RANGE 0 ${_FP_LEN})
           list (GET test_act ${line} str_act)
@@ -198,14 +198,14 @@ if (NOT TEST_SKIP_COMPARE)
           endif ()
         endforeach ()
       else ()
-        if (${len_act} STREQUAL "0")
+        if ("${len_act}" STREQUAL "0")
           message (STATUS "COMPARE Failed: ${TEST_FOLDER}/${TEST_OUTPUT}.err is empty")
         endif ()
-        if (${len_ref} STREQUAL "0")
+        if ("${len_ref}" STREQUAL "0")
           message (STATUS "COMPARE Failed: ${TEST_FOLDER}/${TEST_ERRREF} is empty")
         endif ()
       endif()
-      if (NOT ${len_act} STREQUAL ${len_ref})
+      if (NOT "${len_act}" STREQUAL "${len_ref}")
         set (TEST_RESULT 1)
       endif ()
     endif ()
@@ -226,15 +226,15 @@ if (TEST_GREP_COMPARE)
   # TEST_REFERENCE should always be matched
   string (REGEX MATCH "${TEST_REFERENCE}" TEST_MATCH ${TEST_STREAM})
   string (COMPARE EQUAL "${TEST_REFERENCE}" "${TEST_MATCH}" TEST_RESULT)
-  if (${TEST_RESULT} STREQUAL "0")
+  if ("${TEST_RESULT}" STREQUAL "0")
     message (FATAL_ERROR "Failed: The output of ${TEST_PROGRAM} did not contain ${TEST_REFERENCE}")
   endif ()
 
   string (REGEX MATCH "${TEST_FILTER}" TEST_MATCH ${TEST_STREAM})
-  if (${TEST_EXPECT} STREQUAL "1")
+  if ("${TEST_EXPECT}" STREQUAL "1")
     # TEST_EXPECT (1) interperts TEST_FILTER as NOT to match
     string (LENGTH "${TEST_MATCH}" TEST_RESULT)
-    if (NOT ${TEST_RESULT} STREQUAL "0")
+    if (NOT "${TEST_RESULT}" STREQUAL "0")
       message (FATAL_ERROR "Failed: The output of ${TEST_PROGRAM} did contain ${TEST_FILTER}")
     endif ()
   endif ()
diff --git a/config/cmake/mccacheinit.cmake b/config/cmake/mccacheinit.cmake
index 5d9028c9..3a29e1f9 100644
--- a/config/cmake/mccacheinit.cmake
+++ b/config/cmake/mccacheinit.cmake
@@ -24,10 +24,6 @@ set (HDF4_ENABLE_NETCDF ON CACHE BOOL "Build HDF4 versions of NetCDF-3 APIS" FOR
 
 set (HDF4_BUILD_XDR_LIB OFF CACHE BOOL "Build HDF4 XDR Library" FORCE)
 
-set (HDF4_ENABLE_PARALLEL OFF CACHE BOOL "Enable parallel build (requires MPI)" FORCE)
-
-set (MPIEXEC_MAX_NUMPROCS "3" CACHE STRING "Minimum number of processes for HDF parallel tests" FORCE)
-
 set (HDF4_ENABLE_JPEG_LIB_SUPPORT ON CACHE BOOL "Enable Jpeg library" FORCE)
 
 set (HDF4_ENABLE_Z_LIB_SUPPORT ON CACHE BOOL "Enable Zlib Filters" FORCE)
diff --git a/config/cmake/scripts/CTestScript.cmake b/config/cmake/scripts/CTestScript.cmake
index d376e59a..2594df59 100755
--- a/config/cmake/scripts/CTestScript.cmake
+++ b/config/cmake/scripts/CTestScript.cmake
@@ -57,7 +57,7 @@ if (APPLE)
     # Shared fortran is not supported, build static
     set (BUILD_OPTIONS "${BUILD_OPTIONS} -DBUILD_SHARED_LIBS:BOOL=OFF -DCMAKE_ANSI_CFLAGS:STRING=-fPIC")
   else ()
-    set (BUILD_OPTIONS "${BUILD_OPTIONS} -DHDF5_BUILD_FORTRAN:BOOL=OFF")
+    set (BUILD_OPTIONS "${BUILD_OPTIONS} -DHDF4_BUILD_FORTRAN:BOOL=OFF")
   endif ()
 
   set (BUILD_OPTIONS "${BUILD_OPTIONS} -DCTEST_USE_LAUNCHERS:BOOL=ON -DCMAKE_BUILD_WITH_INSTALL_RPATH:BOOL=OFF")
diff --git a/config/cmake/scripts/HDF4config.cmake b/config/cmake/scripts/HDF4config.cmake
index 17e57e6b..2acca41e 100755
--- a/config/cmake/scripts/HDF4config.cmake
+++ b/config/cmake/scripts/HDF4config.cmake
@@ -1,7 +1,7 @@
 #############################################################################################
 ### ${CTEST_SCRIPT_ARG} is of the form OPTION=VALUE                                       ###
-### BUILD_GENERATOR required [Unix, VS2015, VS201564, VS2013, VS201364, VS2012, VS201264] ###
-### ctest -S HDFconfig.cmake,BUILD_GENERATOR=VS201264 -C Release -VV -O hdf.log           ###
+### BUILD_GENERATOR required [Unix, VS2017, VS201764, VS2015, VS201564, VS2013, VS201364] ###
+### ctest -S HDFconfig.cmake,BUILD_GENERATOR=VS201764 -C Release -VV -O hdf.log           ###
 #############################################################################################
 
 cmake_minimum_required (VERSION 3.2.2 FATAL_ERROR)
@@ -11,12 +11,12 @@ cmake_minimum_required (VERSION 3.2.2 FATAL_ERROR)
 # where valid options for OPTION are:
 #     BUILD_GENERATOR - The cmake build generator:
 #            Unix    * Unix Makefiles
+#            VS2017    * Visual Studio 15 2017
+#            VS201764 * Visual Studio 15 2017 Win64
 #            VS2015    * Visual Studio 14 2015
 #            VS201564 * Visual Studio 14 2015 Win64
 #            VS2013    * Visual Studio 12 2013
 #            VS201364 * Visual Studio 12 2013 Win64
-#            VS2012    * Visual Studio 11 2012
-#            VS201264 * Visual Studio 11 2012 Win64
 #
 #     INSTALLDIR  -  root folder where hdf is installed
 #                 -  windowsdefault: C:/Program Files/HDF_Group/HDF/4.2.13
@@ -29,7 +29,7 @@ cmake_minimum_required (VERSION 3.2.2 FATAL_ERROR)
 ##############################################################################
 
 set (CTEST_SOURCE_VERSION "4.2.13")
-set (CTEST_SOURCE_VERSEXT "")
+set (CTEST_SOURCE_VERSEXT "-post0, currently under development")
 
 ##############################################################################
 # handle input parameters to script.
@@ -54,25 +54,7 @@ endif ()
 
 # build generator must be defined
 if (NOT DEFINED BUILD_GENERATOR)
-  message (FATAL_ERROR "BUILD_GENERATOR must be defined - Unix, VS2015, VS201564, VS2013, VS201364, VS2012, or VS201264")
-else ()
-  if (${BUILD_GENERATOR} STREQUAL "Unix")
-    set (CTEST_CMAKE_GENERATOR "Unix Makefiles")
-  elseif (${BUILD_GENERATOR} STREQUAL "VS2015")
-    set (CTEST_CMAKE_GENERATOR "Visual Studio 14 2015")
-  elseif (${BUILD_GENERATOR} STREQUAL "VS201564")
-    set (CTEST_CMAKE_GENERATOR "Visual Studio 14 2015 Win64")
-  elseif (${BUILD_GENERATOR} STREQUAL "VS2013")
-    set (CTEST_CMAKE_GENERATOR "Visual Studio 12 2013")
-  elseif (${BUILD_GENERATOR} STREQUAL "VS201364")
-    set (CTEST_CMAKE_GENERATOR "Visual Studio 12 2013 Win64")
-  elseif (${BUILD_GENERATOR} STREQUAL "VS2012")
-    set (CTEST_CMAKE_GENERATOR "Visual Studio 11 2012")
-  elseif (${BUILD_GENERATOR} STREQUAL "VS201264")
-    set (CTEST_CMAKE_GENERATOR "Visual Studio 11 2012 Win64")
-  else ()
-    message (FATAL_ERROR "Invalid BUILD_GENERATOR must be - Unix, VS2015, VS201564, VS2013, VS201364, VS2012, or VS201264")
-  endif ()
+  message (FATAL_ERROR "BUILD_GENERATOR must be defined - Unix, VS2017, or VS201764, VS2015, VS201564, VS2013, VS201364")
 endif ()
 
 ###################################################################
@@ -121,30 +103,48 @@ endif ()
 if (WIN32)
   set (SITE_OS_NAME "Windows")
   set (SITE_OS_VERSION "WIN7")
-  if (${BUILD_GENERATOR} STREQUAL "VS201564")
+  if (${BUILD_GENERATOR} STREQUAL "VS201764")
+    set (CTEST_CMAKE_GENERATOR "Visual Studio 15 2017 Win64")
+    set (SITE_OS_BITS "64")
+    set (SITE_COMPILER_NAME "vs2017")
+    set (SITE_COMPILER_VERSION "15")
+  elseif (${BUILD_GENERATOR} STREQUAL "VS2017")
+    set (CTEST_CMAKE_GENERATOR "Visual Studio 15 2017")
+    set (SITE_OS_BITS "32")
+    set (SITE_COMPILER_NAME "vs2017")
+    set (SITE_COMPILER_VERSION "15")
+  elseif (${BUILD_GENERATOR} STREQUAL "VS201564")
+    set (CTEST_CMAKE_GENERATOR "Visual Studio 14 2015 Win64")
     set (SITE_OS_BITS "64")
     set (SITE_COMPILER_NAME "vs2015")
     set (SITE_COMPILER_VERSION "14")
   elseif (${BUILD_GENERATOR} STREQUAL "VS2015")
+    set (CTEST_CMAKE_GENERATOR "Visual Studio 14 2015")
     set (SITE_OS_BITS "32")
     set (SITE_COMPILER_NAME "vs2015")
     set (SITE_COMPILER_VERSION "14")
   elseif (${BUILD_GENERATOR} STREQUAL "VS201364")
+    set (CTEST_CMAKE_GENERATOR "Visual Studio 12 2013 Win64")
     set (SITE_OS_BITS "64")
     set (SITE_COMPILER_NAME "vs2013")
     set (SITE_COMPILER_VERSION "12")
   elseif (${BUILD_GENERATOR} STREQUAL "VS2013")
+    set (CTEST_CMAKE_GENERATOR "Visual Studio 12 2013")
     set (SITE_OS_BITS "32")
     set (SITE_COMPILER_NAME "vs2013")
     set (SITE_COMPILER_VERSION "12")
   elseif (${BUILD_GENERATOR} STREQUAL "VS201264")
+    set (CTEST_CMAKE_GENERATOR "Visual Studio 11 2012 Win64")
     set (SITE_OS_BITS "64")
     set (SITE_COMPILER_NAME "vs2012")
     set (SITE_COMPILER_VERSION "11")
   elseif (${BUILD_GENERATOR} STREQUAL "VS2012")
+    set (CTEST_CMAKE_GENERATOR "Visual Studio 11 2012")
     set (SITE_OS_BITS "32")
     set (SITE_COMPILER_NAME "vs2012")
     set (SITE_COMPILER_VERSION "11")
+  else ()
+    message (FATAL_ERROR "Invalid BUILD_GENERATOR must be - Unix, VS2017, or VS201764, VS2015, VS201564, VS2013, VS201364")
   endif ()
 ##  Set the following to unique id your computer  ##
   set (CTEST_SITE "WIN7${BUILD_GENERATOR}.XXXX")
diff --git a/config/cmake_ext_mod/CheckTypeSize.cmake b/config/cmake_ext_mod/CheckTypeSize.cmake
deleted file mode 100644
index d217ac55..00000000
--- a/config/cmake_ext_mod/CheckTypeSize.cmake
+++ /dev/null
@@ -1,50 +0,0 @@
-#
-# Check if the type exists and determine size of type.  if the type
-# exists, the size will be stored to the variable.
-#
-# CHECK_TYPE_SIZE - macro which checks the size of type
-# VARIABLE - variable to store size if the type exists.
-# HAVE_${VARIABLE} - does the variable exists or not
-#
-
-macro (HDF_CHECK_TYPE_SIZE TYPE VARIABLE)
-  set (CMAKE_ALLOW_UNKNOWN_VARIABLE_READ_ACCESS 1)
-  if ("HAVE_${VARIABLE}" MATCHES "^HAVE_${VARIABLE}$")
-    set (MACRO_CHECK_TYPE_SIZE_FLAGS
-        "-DCHECK_TYPE_SIZE_TYPE=\"${TYPE}\" ${CMAKE_REQUIRED_FLAGS}"
-    )
-    foreach (def HAVE_SYS_TYPES_H HAVE_STDINT_H HAVE_STDDEF_H HAVE_INTTYPES_H)
-      if ("${def}")
-        set (MACRO_CHECK_TYPE_SIZE_FLAGS "${MACRO_CHECK_TYPE_SIZE_FLAGS} -D${def}")
-      endif ()
-    endforeach ()
-
-    message (STATUS "Check size of ${TYPE}")
-    if (CMAKE_REQUIRED_LIBRARIES)
-      set (CHECK_TYPE_SIZE_ADD_LIBRARIES
-          "-DLINK_LIBRARIES:STRING=${CMAKE_REQUIRED_LIBRARIES}"
-      )
-    endif ()
-    try_run (${VARIABLE} HAVE_${VARIABLE}
-        ${CMAKE_BINARY_DIR}
-        ${HDF_RESOURCES_EXT_DIR}/CheckTypeSize.c
-        CMAKE_FLAGS -DCOMPILE_DEFINITIONS:STRING=${MACRO_CHECK_TYPE_SIZE_FLAGS}
-        "${CHECK_TYPE_SIZE_ADD_LIBRARIES}"
-        OUTPUT_VARIABLE OUTPUT
-    )
-    if (HAVE_${VARIABLE})
-      message (STATUS "Check size of ${TYPE} - done")
-      file (APPEND
-          ${CMAKE_BINARY_DIR}/CMakeFiles/CMakeOutput.log
-          "Determining size of ${TYPE} passed with the following output:\n${OUTPUT}\n\n"
-      )
-    else ()
-      message (STATUS "Check size of ${TYPE} - failed")
-      file (APPEND
-          ${CMAKE_BINARY_DIR}/CMakeFiles/CMakeError.log
-          "Determining size of ${TYPE} failed with the following output:\n${OUTPUT}\n\n"
-      )
-    endif ()
-  endif ()
-  set (CMAKE_ALLOW_UNKNOWN_VARIABLE_READ_ACCESS)
-endmacro ()
diff --git a/config/cmake_ext_mod/ConfigureChecks.cmake b/config/cmake_ext_mod/ConfigureChecks.cmake
index 5d2bef87..87f3d8fc 100644
--- a/config/cmake_ext_mod/ConfigureChecks.cmake
+++ b/config/cmake_ext_mod/ConfigureChecks.cmake
@@ -1,18 +1,18 @@
 #-----------------------------------------------------------------------------
 # Include all the necessary files for macros
 #-----------------------------------------------------------------------------
-include (${CMAKE_ROOT}/Modules/CheckFunctionExists.cmake)
-include (${CMAKE_ROOT}/Modules/CheckIncludeFile.cmake)
-include (${CMAKE_ROOT}/Modules/CheckIncludeFileCXX.cmake)
-include (${CMAKE_ROOT}/Modules/CheckIncludeFiles.cmake)
-include (${CMAKE_ROOT}/Modules/CheckLibraryExists.cmake)
-include (${CMAKE_ROOT}/Modules/CheckSymbolExists.cmake)
-include (${CMAKE_ROOT}/Modules/CheckTypeSize.cmake)
-include (${CMAKE_ROOT}/Modules/CheckVariableExists.cmake)
-include (${CMAKE_ROOT}/Modules/CheckFortranFunctionExists.cmake)
-include (${CMAKE_ROOT}/Modules/TestBigEndian.cmake)
+include (CheckFunctionExists)
+include (CheckIncludeFile)
+include (CheckIncludeFileCXX)
+include (CheckIncludeFiles)
+include (CheckLibraryExists)
+include (CheckSymbolExists)
+include (CheckTypeSize)
+include (CheckVariableExists)
+include (CheckFortranFunctionExists)
+include (TestBigEndian)
 if (CMAKE_CXX_COMPILER AND CMAKE_CXX_COMPILER_LOADED)
-  include (${CMAKE_ROOT}/Modules/TestForSTDNamespace.cmake)
+  include (TestForSTDNamespace)
 endif ()
 
 #-----------------------------------------------------------------------------
@@ -22,7 +22,7 @@ if (APPLE)
   list (LENGTH CMAKE_OSX_ARCHITECTURES ARCH_LENGTH)
   if (ARCH_LENGTH GREATER 1)
     set (CMAKE_OSX_ARCHITECTURES "" CACHE STRING "" FORCE)
-    message(FATAL_ERROR "Building Universal Binaries on OS X is NOT supported by the HDF5 project. This is"
+    message(FATAL_ERROR "Building Universal Binaries on OS X is NOT supported by the HDF project. This is"
     "due to technical reasons. The best approach would be build each architecture in separate directories"
     "and use the 'lipo' tool to combine them into a single executable or library. The 'CMAKE_OSX_ARCHITECTURES'"
     "variable has been set to a blank value which will build the default architecture for this system.")
@@ -130,7 +130,7 @@ endif ()
 
 # For other specific tests, use this MACRO.
 macro (HDF_FUNCTION_TEST OTHER_TEST)
-  if ("${HDF_PREFIX}_${OTHER_TEST}" MATCHES "^${HDF_PREFIX}_${OTHER_TEST}$")
+  if (NOT DEFINED ${HDF_PREFIX}_${OTHER_TEST})
     set (MACRO_CHECK_FUNCTION_DEFINITIONS "-D${OTHER_TEST} ${CMAKE_REQUIRED_FLAGS}")
     set (OTHER_TEST_ADD_LIBRARIES)
     if (CMAKE_REQUIRED_LIBRARIES)
diff --git a/config/cmake_ext_mod/HDFLibMacros.cmake b/config/cmake_ext_mod/HDFLibMacros.cmake
index 9d50f506..a0fee0c3 100644
--- a/config/cmake_ext_mod/HDFLibMacros.cmake
+++ b/config/cmake_ext_mod/HDFLibMacros.cmake
@@ -63,14 +63,14 @@ macro (EXTERNAL_JPEG_LIBRARY compress_type jpeg_pic)
   HDF_IMPORT_SET_LIB_OPTIONS (jpeg-static "jpeg" STATIC "")
   add_dependencies (JPEG jpeg-static)
   set (JPEG_STATIC_LIBRARY "jpeg-static")
-  set (JPEG_LIBRARIES ${JPEG_static_LIBRARY})
+  set (JPEG_LIBRARIES ${JPEG_STATIC_LIBRARY})
   if (BUILD_SHARED_LIBS)
     # Create imported target jpeg-shared
     add_library(jpeg-shared SHARED IMPORTED)
     HDF_IMPORT_SET_LIB_OPTIONS (jpeg-shared "jpeg" SHARED "")
     add_dependencies (JPEG jpeg-shared)
     set (JPEG_SHARED_LIBRARY "jpeg-shared")
-    set (JPEG_LIBRARIES ${JPEG_LIBRARIES} ${JPEG_shared_LIBRARY})
+    set (JPEG_LIBRARIES ${JPEG_LIBRARIES} ${JPEG_SHARED_LIBRARY})
   endif ()
 
   set (JPEG_INCLUDE_DIR_GEN "${BINARY_DIR}")
@@ -156,14 +156,14 @@ macro (EXTERNAL_SZIP_LIBRARY compress_type encoding)
   HDF_IMPORT_SET_LIB_OPTIONS (szip-static "szip" STATIC "")
   add_dependencies (SZIP szip-static)
   set (SZIP_STATIC_LIBRARY "szip-static")
-  set (SZIP_LIBRARIES ${SZIP_static_LIBRARY})
+  set (SZIP_LIBRARIES ${SZIP_STATIC_LIBRARY})
   if (BUILD_SHARED_LIBS)
     # Create imported target szip-shared
     add_library(szip-shared SHARED IMPORTED)
     HDF_IMPORT_SET_LIB_OPTIONS (szip-shared "szip" SHARED "")
     add_dependencies (SZIP szip-shared)
     set (SZIP_SHARED_LIBRARY "szip-shared")
-    set (SZIP_LIBRARIES ${SZIP_LIBRARIES} ${SZIP_shared_LIBRARY})
+    set (SZIP_LIBRARIES ${SZIP_LIBRARIES} ${SZIP_SHARED_LIBRARY})
   endif ()
 
   set (SZIP_INCLUDE_DIR_GEN "${BINARY_DIR}")
@@ -251,7 +251,7 @@ macro (EXTERNAL_ZLIB_LIBRARY compress_type)
   HDF_IMPORT_SET_LIB_OPTIONS (zlib-static ${ZLIB_LIB_NAME} STATIC "")
   add_dependencies (ZLIB zlib-static)
   set (ZLIB_STATIC_LIBRARY "zlib-static")
-  set (ZLIB_LIBRARIES ${ZLIB_static_LIBRARY})
+  set (ZLIB_LIBRARIES ${ZLIB_STATIC_LIBRARY})
   if (BUILD_SHARED_LIBS)
     # Create imported target zlib-shared
     add_library(zlib-shared SHARED IMPORTED)
diff --git a/config/cmake_ext_mod/HDFMacros.cmake b/config/cmake_ext_mod/HDFMacros.cmake
index 42eb1a46..5958a358 100644
--- a/config/cmake_ext_mod/HDFMacros.cmake
+++ b/config/cmake_ext_mod/HDFMacros.cmake
@@ -1,3 +1,25 @@
+#-------------------------------------------------------------------------------
+macro (SET_HDF_BUILD_TYPE)
+  get_property(_isMultiConfig GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG)
+  if(_isMultiConfig)
+    set(HDF_CFG_NAME ${CTEST_CONFIGURATION_TYPE})
+    set(HDF_BUILD_TYPE ${CMAKE_CFG_INTDIR})
+    set(HDF_CFG_BUILD_TYPE \${CMAKE_INSTALL_CONFIG_NAME})
+  else()
+    set(HDF_CFG_BUILD_TYPE ".")
+    if(CMAKE_BUILD_TYPE)
+      set(HDF_CFG_NAME ${CMAKE_BUILD_TYPE})
+      set(HDF_BUILD_TYPE ${CMAKE_BUILD_TYPE})
+    else()
+      set(HDF_CFG_NAME "Release")
+      set(HDF_BUILD_TYPE "Release")
+    endif()
+  endif()
+  if(NOT CMAKE_BUILD_TYPE)
+    set(CMAKE_BUILD_TYPE "Release")
+  endif()
+endmacro ()
+
 #-------------------------------------------------------------------------------
 macro (SET_GLOBAL_VARIABLE name value)
   set (${name} ${value} CACHE INTERNAL "Used to pass variables between directories" FORCE)
@@ -33,13 +55,6 @@ macro (IDE_SOURCE_PROPERTIES SOURCE_PATH HEADERS SOURCES)
   #)
 endmacro ()
 
-#-------------------------------------------------------------------------------
-macro (TARGET_NAMING libtarget libtype)
-  if (${libtype} MATCHES "SHARED")
-    set_target_properties (${libtarget} PROPERTIES OUTPUT_NAME "${libtarget}${ARGN}")
-  endif ()
-endmacro ()
-
 #-------------------------------------------------------------------------------
 macro (INSTALL_TARGET_PDB libtarget targetdestination targetcomponent)
   if (WIN32 AND MSVC)
@@ -77,30 +92,36 @@ endmacro ()
 
 #-------------------------------------------------------------------------------
 macro (HDF_SET_LIB_OPTIONS libtarget libname libtype)
+  if (WIN32)
+    set (LIB_DEBUG_SUFFIX "_D")
+  else ()
+    set (LIB_DEBUG_SUFFIX "_debug")
+  endif ()
   if (${libtype} MATCHES "SHARED")
-    if (WIN32)
-      set (LIB_RELEASE_NAME "${libname}")
-      set (LIB_DEBUG_NAME "${libname}_D")
-    else ()
-      set (LIB_RELEASE_NAME "${libname}")
-      set (LIB_DEBUG_NAME "${libname}_debug")
-    endif ()
+    set (LIB_RELEASE_NAME "${libname}")
+    set (LIB_DEBUG_NAME "${libname}${LIB_DEBUG_SUFFIX}")
   else ()
     if (WIN32)
       set (LIB_RELEASE_NAME "lib${libname}")
-      set (LIB_DEBUG_NAME "lib${libname}_D")
+      set (LIB_DEBUG_NAME "lib${libname}${LIB_DEBUG_SUFFIX}")
     else ()
       set (LIB_RELEASE_NAME "${libname}")
-      set (LIB_DEBUG_NAME "${libname}_debug")
+      set (LIB_DEBUG_NAME "${libname}${LIB_DEBUG_SUFFIX}")
     endif ()
   endif ()
 
   set_target_properties (${libtarget}
       PROPERTIES
-      OUTPUT_NAME_DEBUG          ${LIB_DEBUG_NAME}
-      OUTPUT_NAME_RELEASE        ${LIB_RELEASE_NAME}
-      OUTPUT_NAME_MINSIZEREL     ${LIB_RELEASE_NAME}
-      OUTPUT_NAME_RELWITHDEBINFO ${LIB_RELEASE_NAME}
+         OUTPUT_NAME
+               ${LIB_RELEASE_NAME}
+         OUTPUT_NAME_DEBUG
+               ${LIB_DEBUG_NAME}
+         OUTPUT_NAME_RELEASE
+               ${LIB_RELEASE_NAME}
+         OUTPUT_NAME_MINSIZEREL
+               ${LIB_RELEASE_NAME}
+         OUTPUT_NAME_RELWITHDEBINFO
+               ${LIB_RELEASE_NAME}
   )
   if (${libtype} MATCHES "STATIC")
     if (WIN32)
@@ -148,8 +169,8 @@ macro (HDF_IMPORT_SET_LIB_OPTIONS libtarget libname libtype libversion)
         )
       else ()
         set_target_properties (${libtarget} PROPERTIES
-            IMPORTED_IMPLIB "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${CMAKE_BUILD_TYPE}/${CMAKE_IMPORT_LIBRARY_PREFIX}${IMPORT_LIB_NAME}${CMAKE_IMPORT_LIBRARY_SUFFIX}"
-            IMPORTED_LOCATION "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${CMAKE_BUILD_TYPE}/${CMAKE_IMPORT_LIBRARY_PREFIX}${IMPORT_LIB_NAME}${CMAKE_SHARED_LIBRARY_SUFFIX}"
+            IMPORTED_IMPLIB "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${HDF_BUILD_TYPE}/${CMAKE_IMPORT_LIBRARY_PREFIX}${IMPORT_LIB_NAME}${CMAKE_IMPORT_LIBRARY_SUFFIX}"
+            IMPORTED_LOCATION "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${HDF_BUILD_TYPE}/${CMAKE_IMPORT_LIBRARY_PREFIX}${IMPORT_LIB_NAME}${CMAKE_SHARED_LIBRARY_SUFFIX}"
         )
       endif ()
     else ()
@@ -169,7 +190,7 @@ macro (HDF_IMPORT_SET_LIB_OPTIONS libtarget libname libtype libversion)
   else ()
     if (WIN32 AND NOT MINGW)
       set_target_properties (${libtarget} PROPERTIES
-          IMPORTED_LOCATION "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${CMAKE_BUILD_TYPE}/${IMPORT_LIB_NAME}${CMAKE_STATIC_LIBRARY_SUFFIX}"
+          IMPORTED_LOCATION "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${HDF_BUILD_TYPE}/${IMPORT_LIB_NAME}${CMAKE_STATIC_LIBRARY_SUFFIX}"
           IMPORTED_LINK_INTERFACE_LANGUAGES "C"
       )
     else ()
diff --git a/config/cmake_ext_mod/HDFTests.c b/config/cmake_ext_mod/HDFTests.c
index 6b717f3b..3328c0f1 100644
--- a/config/cmake_ext_mod/HDFTests.c
+++ b/config/cmake_ext_mod/HDFTests.c
@@ -20,12 +20,26 @@ int main() { return 0; }
 #include <stdlib.h>
 #include <string.h>
 
+#if defined(_MSC_VER) && defined(_DEBUG)
+# include <crtdbg.h>
+int DebugReport(int reportType, char* message, int* returnValue)
+{
+  (void)reportType;
+  (void)message;
+  (void)returnValue;
+  return 1; /* no further handling required */
+}
+#endif
+
 int main(void)
 {
   char *llwidthArgs[] = { "I64", "l64", "l", "L", "q", "ll", NULL };
   char *s = malloc(128);
   char **currentArg = NULL;
   LL_TYPE x = (LL_TYPE)1048576 * (LL_TYPE)1048576;
+  #if defined(_MSC_VER) && defined(_DEBUG)
+    _CrtSetReportHook(DebugReport);
+  #endif
   for (currentArg = llwidthArgs; *currentArg != NULL; currentArg++)
     {
     char formatString[64];
diff --git a/config/cmake_ext_mod/HDFUseFortran.cmake b/config/cmake_ext_mod/HDFUseFortran.cmake
index bf254a14..5f301c1a 100644
--- a/config/cmake_ext_mod/HDFUseFortran.cmake
+++ b/config/cmake_ext_mod/HDFUseFortran.cmake
@@ -4,6 +4,14 @@
 #-------------------------------------------------------------------------------
 ENABLE_LANGUAGE (Fortran)
 
+#-------------------------------------------------------------------------------
+#  Fix Fortran flags if we are compiling staticly on Windows using
+#  Windows_MT.cmake from config/cmake/UserMacros
+#-------------------------------------------------------------------------------
+if (BUILD_STATIC_CRT_LIBS)
+  TARGET_STATIC_CRT_FLAGS ()
+endif ()
+
 #-----------------------------------------------------------------------------
 # Detect name mangling convention used between Fortran and C
 #-----------------------------------------------------------------------------
diff --git a/config/cmake_ext_mod/grepTest.cmake b/config/cmake_ext_mod/grepTest.cmake
index 31c8421d..8f0a38ca 100644
--- a/config/cmake_ext_mod/grepTest.cmake
+++ b/config/cmake_ext_mod/grepTest.cmake
@@ -46,15 +46,15 @@ file (READ ${TEST_FOLDER}/${TEST_OUTPUT} TEST_STREAM)
 # TEST_REFERENCE should always be matched
 string (REGEX MATCH "${TEST_REFERENCE}" TEST_MATCH ${TEST_STREAM})
 string (COMPARE EQUAL "${TEST_REFERENCE}" "${TEST_MATCH}" TEST_RESULT)
-if (${TEST_RESULT} STREQUAL "0")
+if ("${TEST_RESULT}" STREQUAL "0")
   message (FATAL_ERROR "Failed: The output of ${TEST_PROGRAM} did not contain ${TEST_REFERENCE}")
 endif ()
 
 string (REGEX MATCH "${TEST_FILTER}" TEST_MATCH ${TEST_STREAM})
-if (${TEST_EXPECT} STREQUAL "1")
+if ("${TEST_EXPECT}" STREQUAL "1")
   # TEST_EXPECT (1) interperts TEST_FILTER as NOT to match
   string (LENGTH "${TEST_MATCH}" TEST_RESULT)
-  if (NOT ${TEST_RESULT} STREQUAL "0")
+  if (NOT "${TEST_RESULT}" STREQUAL "0")
     message (FATAL_ERROR "Failed: The output of ${TEST_PROGRAM} did contain ${TEST_FILTER}")
   endif ()
 endif ()
diff --git a/config/cmake_ext_mod/runTest.cmake b/config/cmake_ext_mod/runTest.cmake
index 9a2236e6..c626dfe3 100644
--- a/config/cmake_ext_mod/runTest.cmake
+++ b/config/cmake_ext_mod/runTest.cmake
@@ -76,7 +76,7 @@ if (TEST_REGEX)
   file (READ ${TEST_FOLDER}/${TEST_OUTPUT} TEST_STREAM)
   string (REGEX MATCH "${TEST_REGEX}" REGEX_MATCH ${TEST_STREAM})
   string (COMPARE EQUAL "${REGEX_MATCH}" "${TEST_MATCH}" REGEX_RESULT)
-  if (${REGEX_RESULT} STREQUAL "0")
+  if ("${REGEX_RESULT}" STREQUAL "0")
     message (STATUS "Failed: The output of ${TEST_PROGRAM} did not contain ${TEST_MATCH}")
   endif ()
 endif ()
@@ -95,7 +95,7 @@ if (TEST_APPEND)
 endif ()
 
 # if the return value is !=${TEST_EXPECT} bail out
-if (NOT ${TEST_RESULT} STREQUAL ${TEST_EXPECT})
+if (NOT "${TEST_RESULT}" STREQUAL "${TEST_EXPECT}")
   if (NOT TEST_NOERRDISPLAY)
     if (EXISTS ${TEST_FOLDER}/${TEST_OUTPUT})
       file (READ ${TEST_FOLDER}/${TEST_OUTPUT} TEST_STREAM)
@@ -182,13 +182,13 @@ if (NOT TEST_SKIP_COMPARE)
     endif ()
   endif ()
 
-  if (NOT ${TEST_RESULT} STREQUAL 0)
+  if (NOT "${TEST_RESULT}" STREQUAL "0")
     set (TEST_RESULT 0)
     file (STRINGS ${TEST_FOLDER}/${TEST_OUTPUT} test_act)
     list (LENGTH test_act len_act)
     file (STRINGS ${TEST_FOLDER}/${TEST_REFERENCE} test_ref)
     list (LENGTH test_ref len_ref)
-    if (NOT ${len_act} STREQUAL "0" AND NOT ${len_ref} STREQUAL "0")
+    if (NOT "${len_act}" STREQUAL "0" AND NOT "${len_ref}" STREQUAL "0")
       math (EXPR _FP_LEN "${len_ref} - 1")
       foreach (line RANGE 0 ${_FP_LEN})
         list (GET test_act ${line} str_act)
@@ -201,14 +201,14 @@ if (NOT TEST_SKIP_COMPARE)
         endif ()
       endforeach ()
     else ()
-      if (${len_act} STREQUAL "0")
+      if ("${len_act}" STREQUAL "0")
         message (STATUS "COMPARE Failed: ${TEST_FOLDER}/${TEST_OUTPUT} is empty")
       endif ()
-      if (${len_ref} STREQUAL "0")
+      if ("${len_ref}" STREQUAL "0")
         message (STATUS "COMPARE Failed: ${TEST_FOLDER}/${TEST_REFERENCE} is empty")
       endif ()
     endif ()
-    if (NOT ${len_act} STREQUAL ${len_ref})
+    if (NOT "${len_act}" STREQUAL "${len_ref}")
       set (TEST_RESULT 1)
     endif ()
   endif ()
@@ -216,7 +216,7 @@ if (NOT TEST_SKIP_COMPARE)
   message (STATUS "COMPARE Result: ${TEST_RESULT}")
 
   # again, if return value is !=0 scream and shout
-  if (NOT ${TEST_RESULT} STREQUAL 0)
+  if (NOT "${TEST_RESULT}" STREQUAL "0")
     message (FATAL_ERROR "Failed: The output of ${TEST_OUTPUT} did not match ${TEST_REFERENCE}")
   endif ()
 
@@ -232,14 +232,14 @@ if (NOT TEST_SKIP_COMPARE)
         COMMAND ${CMAKE_COMMAND} -E compare_files ${TEST_FOLDER}/${TEST_OUTPUT}.err ${TEST_FOLDER}/${TEST_ERRREF}
         RESULT_VARIABLE TEST_RESULT
     )
-    if (NOT ${TEST_RESULT} STREQUAL 0)
+    if (NOT "${TEST_RESULT}" STREQUAL "0")
       set (TEST_RESULT 0)
       file (STRINGS ${TEST_FOLDER}/${TEST_OUTPUT}.err test_act)
       list (LENGTH test_act len_act)
       file (STRINGS ${TEST_FOLDER}/${TEST_ERRREF} test_ref)
       list (LENGTH test_ref len_ref)
       math (EXPR _FP_LEN "${len_ref} - 1")
-      if (NOT ${len_act} STREQUAL "0" AND NOT ${len_ref} STREQUAL "0")
+      if (NOT "${len_act}" STREQUAL "0" AND NOT "${len_ref}" STREQUAL "0")
         math (EXPR _FP_LEN "${len_ref} - 1")
         foreach (line RANGE 0 ${_FP_LEN})
           list (GET test_act ${line} str_act)
@@ -252,14 +252,14 @@ if (NOT TEST_SKIP_COMPARE)
           endif ()
         endforeach ()
       else ()
-        if (${len_act} STREQUAL "0")
+        if ("${len_act}" STREQUAL "0")
           message (STATUS "COMPARE Failed: ${TEST_FOLDER}/${TEST_OUTPUT}.err is empty")
         endif ()
-        if (${len_ref} STREQUAL "0")
+        if ("${len_ref}" STREQUAL "0")
           message (STATUS "COMPARE Failed: ${TEST_FOLDER}/${TEST_ERRREF} is empty")
         endif ()
       endif ()
-      if (NOT ${len_act} STREQUAL ${len_ref})
+      if (NOT "${len_act}" STREQUAL "${len_ref}")
         set (TEST_RESULT 1)
       endif ()
     endif ()
@@ -267,7 +267,7 @@ if (NOT TEST_SKIP_COMPARE)
     message (STATUS "COMPARE Result: ${TEST_RESULT}")
 
     # again, if return value is !=0 scream and shout
-    if (NOT ${TEST_RESULT} STREQUAL 0)
+    if (NOT "${TEST_RESULT}" STREQUAL "0")
       message (FATAL_ERROR "Failed: The error output of ${TEST_OUTPUT}.err did not match ${TEST_ERRREF}")
     endif ()
   endif ()
diff --git a/configure b/configure
index a666d146..1dc0b2e7 100755
--- a/configure
+++ b/configure
@@ -1,7 +1,7 @@
 #! /bin/sh
 # From configure.ac Id.
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.69 for HDF 4.2.13.
+# Generated by GNU Autoconf 2.69 for HDF 4.2.13-post0.
 #
 # Report bugs to <help@hdfgroup.org>.
 #
@@ -591,8 +591,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='HDF'
 PACKAGE_TARNAME='hdf'
-PACKAGE_VERSION='4.2.13'
-PACKAGE_STRING='HDF 4.2.13'
+PACKAGE_VERSION='4.2.13-post0'
+PACKAGE_STRING='HDF 4.2.13-post0'
 PACKAGE_BUGREPORT='help@hdfgroup.org'
 PACKAGE_URL=''
 
@@ -1405,7 +1405,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures HDF 4.2.13 to adapt to many kinds of systems.
+\`configure' configures HDF 4.2.13-post0 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1475,7 +1475,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of HDF 4.2.13:";;
+     short | recursive ) echo "Configuration of HDF 4.2.13-post0:";;
    esac
   cat <<\_ACEOF
 
@@ -1614,7 +1614,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-HDF configure 4.2.13
+HDF configure 4.2.13-post0
 generated by GNU Autoconf 2.69
 
 Copyright (C) 2012 Free Software Foundation, Inc.
@@ -2427,7 +2427,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by HDF $as_me 4.2.13, which was
+It was created by HDF $as_me 4.2.13-post0, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   $ $0 $@
@@ -3297,7 +3297,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='hdf'
- VERSION='4.2.13'
+ VERSION='4.2.13-post0'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -21366,7 +21366,7 @@ Usage: $0 [OPTIONS]
 Report bugs to <bug-libtool@gnu.org>."
 
 lt_cl_version="\
-HDF config.lt 4.2.13
+HDF config.lt 4.2.13-post0
 configured by $0, generated by GNU Autoconf 2.69.
 
 Copyright (C) 2011 Free Software Foundation, Inc.
@@ -25456,7 +25456,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by HDF $as_me 4.2.13, which was
+This file was extended by HDF $as_me 4.2.13-post0, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -25522,7 +25522,7 @@ _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_config="`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`"
 ac_cs_version="\\
-HDF config.status 4.2.13
+HDF config.status 4.2.13-post0
 configured by $0, generated by GNU Autoconf 2.69,
   with options \\"\$ac_cs_config\\"
 
diff --git a/configure.ac b/configure.ac
index 3030bad3..e1ffaeb9 100644
--- a/configure.ac
+++ b/configure.ac
@@ -25,7 +25,7 @@ AC_REVISION($Id$)
 ## NOTE: Do not forget to change the version number here when we do a
 ## release!!!
 ##
-AC_INIT([HDF], [4.2.13], [help@hdfgroup.org])
+AC_INIT([HDF], [4.2.13-post0], [help@hdfgroup.org])
 AC_CONFIG_SRCDIR([hdf/src/atom.c])
 AC_CONFIG_AUX_DIR([bin])
 AC_CONFIG_HEADER([hdf/src/h4config.h])
diff --git a/hdf/CMakeLists.txt b/hdf/CMakeLists.txt
index 8f79a85f..6cb2db20 100644
--- a/hdf/CMakeLists.txt
+++ b/hdf/CMakeLists.txt
@@ -7,6 +7,6 @@ PROJECT (HDF4_HDF)
 if (EXISTS "${HDF4_HDF_SOURCE_DIR}/util" AND IS_DIRECTORY "${HDF4_HDF_SOURCE_DIR}/util")
   option (HDF4_BUILD_UTILS  "Build HDF4 Utilities" OFF)
   if (HDF4_BUILD_UTILS OR HDF4_BUILD_TOOLS)
-    add_subdirectory (${HDF4_HDF_SOURCE_DIR}/util   ${HDF4_HDF_BINARY_DIR}/util)
+    add_subdirectory (util)
   endif ()
 endif ()
diff --git a/hdf/examples/CMakeLists.txt b/hdf/examples/CMakeLists.txt
index 4803c2af..9c4620a9 100644
--- a/hdf/examples/CMakeLists.txt
+++ b/hdf/examples/CMakeLists.txt
@@ -37,15 +37,13 @@ set (examples
 
 foreach (example ${examples})
   add_executable (hdf_${example} ${HDF4_HDF_EXAMPLES_SOURCE_DIR}/${example}.c)
-  TARGET_NAMING (hdf_${example} STATIC)
   TARGET_C_PROPERTIES (hdf_${example} STATIC " " " ")
-  target_link_libraries (hdf_${example} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
+  target_link_libraries (hdf_${example} ${HDF4_SRC_LIB_TARGET})
 endforeach ()
 
 add_executable (hdf_VG_add_sds_to_vgroup ${HDF4_HDF_EXAMPLES_SOURCE_DIR}/VG_add_sds_to_vgroup.c)
-TARGET_NAMING (hdf_VG_add_sds_to_vgroup STATIC)
 TARGET_C_PROPERTIES (hdf_VG_add_sds_to_vgroup STATIC " " " ")
-target_link_libraries (hdf_VG_add_sds_to_vgroup ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
+target_link_libraries (hdf_VG_add_sds_to_vgroup ${HDF4_MF_LIB_TARGET})
 
 if (BUILD_TESTING)
   include (CMakeTests.cmake)
diff --git a/hdf/fortran/CMakeLists.txt b/hdf/fortran/CMakeLists.txt
index 2946e6c6..89586188 100644
--- a/hdf/fortran/CMakeLists.txt
+++ b/hdf/fortran/CMakeLists.txt
@@ -38,7 +38,7 @@ set (FORTRAN_SRC_DIR ${CMAKE_CURRENT_SOURCE_DIR})
 #-----------------------------------------------------------------------------
 add_library (${HDF4_SRC_FCSTUB_LIB_TARGET} STATIC ${HDF4_HDF_SRC_CSTUB_FSRCS} ${HDF4_HDF_SRC_CHDRS} ${HDF4_HDFSOURCE_DIR}/hproto_fortran.h ${HDF4_BINARY_DIR}/h4config.h)
 TARGET_C_PROPERTIES (${HDF4_SRC_FCSTUB_LIB_TARGET} STATIC " " " ")
-target_link_libraries (${HDF4_SRC_FCSTUB_LIB_TARGET} ${HDF4_SRC_LIB_TARGET})
+target_link_libraries (${HDF4_SRC_FCSTUB_LIB_TARGET} PUBLIC ${HDF4_SRC_LIB_TARGET})
 set_global_variable (HDF4_LIBRARIES_TO_EXPORT "${HDF4_LIBRARIES_TO_EXPORT};${HDF4_SRC_FCSTUB_LIB_TARGET}")
 H4_SET_LIB_OPTIONS (${HDF4_SRC_FCSTUB_LIB_TARGET} ${HDF4_SRC_FCSTUB_LIB_NAME} STATIC)
 set_target_properties (${HDF4_SRC_FCSTUB_LIB_TARGET} PROPERTIES
@@ -54,7 +54,7 @@ set (install_targets ${HDF4_SRC_FCSTUB_LIB_TARGET})
 if (BUILD_SHARED_LIBS)
   add_library (${HDF4_SRC_FCSTUB_LIBSH_TARGET} SHARED ${HDF4_HDF_SRC_CSTUB_FSRCS} ${HDF4_HDF_SRC_CHDRS} ${HDF4_HDFSOURCE_DIR}/hproto_fortran.h ${HDF4_BINARY_DIR}/h4config.h)
   TARGET_C_PROPERTIES (${HDF4_SRC_FCSTUB_LIBSH_TARGET} SHARED " " " ")
-  target_link_libraries (${HDF4_SRC_FCSTUB_LIBSH_TARGET} ${HDF4_SRC_LIBSH_TARGET})
+  target_link_libraries (${HDF4_SRC_FCSTUB_LIBSH_TARGET} PUBLIC ${HDF4_SRC_LIBSH_TARGET})
   set_global_variable (HDF4_LIBRARIES_TO_EXPORT "${HDF4_LIBRARIES_TO_EXPORT};${HDF4_SRC_FCSTUB_LIBSH_TARGET}")
   H4_SET_LIB_OPTIONS (${HDF4_SRC_FCSTUB_LIBSH_TARGET} ${HDF4_SRC_FCSTUB_LIB_NAME} SHARED)
   set_target_properties (${HDF4_SRC_FCSTUB_LIBSH_TARGET} PROPERTIES
@@ -89,7 +89,7 @@ set_source_files_properties (${HDF4_F_FORTRAN_SRCS} PROPERTIES LANGUAGE Fortran)
 add_library (${HDF4_SRC_FORTRAN_LIB_TARGET} STATIC ${HDF4_F_FORTRAN_SRCS})
 set (SHARED_LINK_FLAGS " ")
 TARGET_FORTRAN_PROPERTIES (${HDF4_SRC_FORTRAN_LIB_TARGET} STATIC " " " ")
-target_link_libraries (${HDF4_SRC_FORTRAN_LIB_TARGET} ${HDF4_SRC_FCSTUB_LIB_TARGET} ${LINK_LIBS})
+target_link_libraries (${HDF4_SRC_FORTRAN_LIB_TARGET} PUBLIC ${HDF4_SRC_FCSTUB_LIB_TARGET})
 set_global_variable (HDF4_LIBRARIES_TO_EXPORT "${HDF4_LIBRARIES_TO_EXPORT};${HDF4_SRC_FORTRAN_LIB_TARGET}")
 H4_SET_LIB_OPTIONS (${HDF4_SRC_FORTRAN_LIB_TARGET} ${HDF4_SRC_FORTRAN_LIB_NAME} STATIC)
 set_target_properties (${HDF4_SRC_FORTRAN_LIB_TARGET} PROPERTIES
@@ -110,7 +110,7 @@ if (BUILD_SHARED_LIBS)
     set (SHARED_LINK_FLAGS "/DLL /DEF:${HDF4_HDF_FORTRAN_SOURCE_DIR}/hdf_fortrandll.def")
   endif ()
   TARGET_FORTRAN_PROPERTIES (${HDF4_SRC_FORTRAN_LIBSH_TARGET} SHARED " " ${SHARED_LINK_FLAGS})
-  target_link_libraries (${HDF4_SRC_FORTRAN_LIBSH_TARGET} ${HDF4_SRC_FCSTUB_LIBSH_TARGET} ${LINK_SHARED_LIBS})
+  target_link_libraries (${HDF4_SRC_FORTRAN_LIBSH_TARGET} PUBLIC ${HDF4_SRC_FCSTUB_LIBSH_TARGET})
   set_global_variable (HDF4_LIBRARIES_TO_EXPORT "${HDF4_LIBRARIES_TO_EXPORT};${HDF4_SRC_FORTRAN_LIBSH_TARGET}")
   H4_SET_LIB_OPTIONS (${HDF4_SRC_FORTRAN_LIBSH_TARGET} ${HDF4_SRC_FORTRAN_LIB_NAME} SHARED)
   set_target_properties (${HDF4_SRC_FORTRAN_LIBSH_TARGET} PROPERTIES
diff --git a/hdf/fortran/CMakeTests.cmake b/hdf/fortran/CMakeTests.cmake
index 7d639ba7..0a941d62 100644
--- a/hdf/fortran/CMakeTests.cmake
+++ b/hdf/fortran/CMakeTests.cmake
@@ -16,17 +16,13 @@
     add_definitions (-DDOS_FS)
   endif ()
   TARGET_C_PROPERTIES (${HDF4_HDF_TEST_FCSTUB_LIB_TARGET} STATIC " " " ")
-  target_link_libraries (${HDF4_HDF_TEST_FCSTUB_LIB_TARGET} ${HDF4_SRC_LIB_TARGET})
+  target_link_libraries (${HDF4_HDF_TEST_FCSTUB_LIB_TARGET} PUBLIC ${HDF4_SRC_LIB_TARGET})
   H4_SET_LIB_OPTIONS (${HDF4_HDF_TEST_FCSTUB_LIB_TARGET} ${HDF4_HDF_TEST_FCSTUB_LIB_NAME} STATIC)
 
   #-- Adding test for fortest
   add_executable (fortest ${HDF4_HDF_TESTSOURCE_DIR}/fortest.c)
-  TARGET_NAMING (fortest STATIC)
   TARGET_C_PROPERTIES (fortest STATIC " " " ")
   target_link_libraries (fortest ${HDF4_SRC_LIB_TARGET} ${HDF4_MF_LIB_TARGET})
-  if (WIN32)
-    target_link_libraries (fortest "ws2_32.lib")
-  endif ()
   set_target_properties (fortest PROPERTIES LINKER_LANGUAGE C)
 
   #-----------------------------------------------------------------------------
@@ -53,9 +49,8 @@
   )
 
   add_executable (fortestF ${FORTEST_FSRCS} )
-  TARGET_NAMING (fortestF STATIC)
   TARGET_FORTRAN_PROPERTIES (fortestF STATIC " " " ")
-  target_link_libraries (fortestF ${HDF4_SRC_FORTRAN_LIB_TARGET} ${HDF4_SRC_FCSTUB_LIB_TARGET} ${HDF4_HDF_TEST_FCSTUB_LIB_TARGET} ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS} )
+  target_link_libraries (fortestF ${HDF4_SRC_FORTRAN_LIB_TARGET} ${HDF4_SRC_FCSTUB_LIB_TARGET} ${HDF4_HDF_TEST_FCSTUB_LIB_TARGET})
   set_target_properties (fortestF PROPERTIES LINKER_LANGUAGE Fortran)
 
   #-- Copy all the dat files from the test directory into the source directory
@@ -71,15 +66,9 @@
     tvattr.dat
   )
   foreach (h4_file ${HDF4_REFERENCE_TEST_FILES})
-    set (dest "${PROJECT_BINARY_DIR}/test_files/${h4_file}")
-    #message (STATUS " Copying ${HDF4_HDF_TESTSOURCE_DIR}/test_files/${h4_file} to ${PROJECT_BINARY_DIR}/test_files/")
-    add_custom_command (
-        TARGET     fortestF
-        POST_BUILD
-        COMMAND    ${CMAKE_COMMAND}
-        ARGS       -E copy_if_different ${HDF4_HDF_TESTSOURCE_DIR}/test_files/${h4_file} ${dest}
-    )
+    HDFTEST_COPY_FILE("${HDF4_HDF_TESTSOURCE_DIR}/test_files/${h4_file}" "${PROJECT_BINARY_DIR}/test_files/${h4_file}" "hdf_fortran_files")
   endforeach ()
+  add_custom_target(hdf_fortran_files ALL COMMENT "Copying files needed by hdf fortran tests" DEPENDS ${hdf_fortran_files_list})
 
 ##############################################################################
 ##############################################################################
diff --git a/hdf/fortran/examples/CMakeLists.txt b/hdf/fortran/examples/CMakeLists.txt
index 6265afb1..4294bab5 100644
--- a/hdf/fortran/examples/CMakeLists.txt
+++ b/hdf/fortran/examples/CMakeLists.txt
@@ -67,36 +67,33 @@ set (skip_examples
 
 foreach (example ${examples})
   add_executable (f_ex_${example} ${HDF4_HDF_FORTRAN_EXAMPLES_SOURCE_DIR}/${example}.f)
-  TARGET_NAMING (f_ex_${example} STATIC)
   TARGET_FORTRAN_PROPERTIES (f_ex_${example} STATIC " " " ")
   target_include_directories (f_ex_${example} PRIVATE ${CMAKE_Fortran_MODULE_DIRECTORY})
   set_target_properties (f_ex_${example} PROPERTIES
       LINKER_LANGUAGE Fortran
       Fortran_MODULE_DIRECTORY ${CMAKE_Fortran_MODULE_DIRECTORY}
   )
-  target_link_libraries (f_ex_${example} ${HDF4_SRC_FORTRAN_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
+  target_link_libraries (f_ex_${example} ${HDF4_SRC_FORTRAN_LIB_TARGET})
 endforeach ()
 
 add_executable (f_ex_VG_add_sds_to_vgroup ${HDF4_HDF_FORTRAN_EXAMPLES_SOURCE_DIR}/VG_add_sds_to_vgroup.f)
-TARGET_NAMING (f_ex_VG_add_sds_to_vgroup STATIC)
 TARGET_FORTRAN_PROPERTIES (f_ex_VG_add_sds_to_vgroup STATIC " " " ")
 target_include_directories (f_ex_VG_add_sds_to_vgroup PRIVATE ${CMAKE_Fortran_MODULE_DIRECTORY})
 set_target_properties (f_ex_VG_add_sds_to_vgroup PROPERTIES
     LINKER_LANGUAGE Fortran
     Fortran_MODULE_DIRECTORY ${CMAKE_Fortran_MODULE_DIRECTORY}
 )
-target_link_libraries (f_ex_VG_add_sds_to_vgroup ${HDF4_MF_FORTRAN_LIB_TARGET} ${HDF4_SRC_FORTRAN_LIB_TARGET} ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
+target_link_libraries (f_ex_VG_add_sds_to_vgroup ${HDF4_MF_FORTRAN_LIB_TARGET} ${HDF4_SRC_FORTRAN_LIB_TARGET})
 
 foreach (example ${skip_examples})
   add_executable (f_ex_${example} ${HDF4_HDF_FORTRAN_EXAMPLES_SOURCE_DIR}/${example}.f)
-  TARGET_NAMING (f_ex_${example} STATIC)
   TARGET_FORTRAN_PROPERTIES (f_ex_${example} STATIC " " " ")
   target_include_directories (f_ex_${example} PRIVATE ${CMAKE_Fortran_MODULE_DIRECTORY})
   set_target_properties (f_ex_${example} PROPERTIES
       LINKER_LANGUAGE Fortran
       Fortran_MODULE_DIRECTORY ${CMAKE_Fortran_MODULE_DIRECTORY}
   )
-  target_link_libraries (f_ex_${example} ${HDF4_SRC_FORTRAN_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
+  target_link_libraries (f_ex_${example} ${HDF4_SRC_FORTRAN_LIB_TARGET})
 endforeach ()
 
 if (BUILD_TESTING)
diff --git a/hdf/src/CMakeLists.txt b/hdf/src/CMakeLists.txt
index c6573a59..c4e5c2c1 100644
--- a/hdf/src/CMakeLists.txt
+++ b/hdf/src/CMakeLists.txt
@@ -122,7 +122,7 @@ set (HDF4_HDF_SRC_CHDRS
 
 add_library (${HDF4_SRC_LIB_TARGET} STATIC ${HDF4_HDF_SRC_CSRCS} ${HDF4_HDF_SRC_CHDRS} ${HDF4_BINARY_DIR}/h4config.h)
 TARGET_C_PROPERTIES (${HDF4_SRC_LIB_TARGET} STATIC " " " ")
-target_link_libraries (${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
+target_link_libraries (${HDF4_SRC_LIB_TARGET} PRIVATE ${LINK_LIBS} ${LINK_COMP_LIBS})
 set_global_variable (HDF4_LIBRARIES_TO_EXPORT "${HDF4_LIBRARIES_TO_EXPORT};${HDF4_SRC_LIB_TARGET}")
 H4_SET_LIB_OPTIONS (${HDF4_SRC_LIB_TARGET} ${HDF4_SRC_LIB_NAME} STATIC)
 set_target_properties (${HDF4_SRC_LIB_TARGET} PROPERTIES
@@ -137,7 +137,7 @@ set (install_targets ${HDF4_SRC_LIB_TARGET})
 if (BUILD_SHARED_LIBS)
   add_library (${HDF4_SRC_LIBSH_TARGET} SHARED ${HDF4_HDF_SRC_CSRCS} ${HDF4_HDF_SRC_CHDRS} ${HDF4_BINARY_DIR}/h4config.h)
   TARGET_C_PROPERTIES (${HDF4_SRC_LIBSH_TARGET} SHARED " " " ")
-  target_link_libraries (${HDF4_SRC_LIBSH_TARGET} ${LINK_SHARED_LIBS})
+  target_link_libraries (${HDF4_SRC_LIBSH_TARGET} PRIVATE ${LINK_LIBS} ${LINK_COMP_LIBS})
   set_global_variable (HDF4_LIBRARIES_TO_EXPORT "${HDF4_LIBRARIES_TO_EXPORT};${HDF4_SRC_LIBSH_TARGET}")
   H4_SET_LIB_OPTIONS (${HDF4_SRC_LIBSH_TARGET} ${HDF4_SRC_LIB_NAME} SHARED)
   set_target_properties (${HDF4_SRC_LIBSH_TARGET} PROPERTIES
@@ -148,9 +148,9 @@ if (BUILD_SHARED_LIBS)
   )
   if (WIN32)
     set_property (TARGET ${HDF4_SRC_LIBSH_TARGET} APPEND PROPERTY COMPILE_DEFINITIONS "DOS_FS")
-  endif (WIN32)
+  endif ()
   set (install_targets ${install_targets} ${HDF4_SRC_LIBSH_TARGET})
-endif (BUILD_SHARED_LIBS)
+endif ()
 
 #-----------------------------------------------------------------------------
 # Add file(s) to CMake Install
@@ -170,10 +170,10 @@ INSTALL (
 if (HDF4_EXPORTED_TARGETS)
   if (BUILD_SHARED_LIBS)
     INSTALL_TARGET_PDB (${HDF4_SRC_LIBSH_TARGET} ${HDF4_INSTALL_BIN_DIR} libraries)
-  endif (BUILD_SHARED_LIBS)
+  endif ()
   INSTALL_TARGET_PDB (${HDF4_SRC_LIB_TARGET} ${HDF4_INSTALL_BIN_DIR} libraries)
 
-  INSTALL (
+  install (
       TARGETS
           ${install_targets}
       EXPORT
@@ -184,5 +184,4 @@ if (HDF4_EXPORTED_TARGETS)
       FRAMEWORK DESTINATION ${HDF4_INSTALL_FWRK_DIR} COMPONENT libraries
       INCLUDES DESTINATION include
   )
-endif (HDF4_EXPORTED_TARGETS)
-
+endif ()
diff --git a/hdf/src/hfile.h b/hdf/src/hfile.h
index c8e56077..a6695f6c 100644
--- a/hdf/src/hfile.h
+++ b/hdf/src/hfile.h
@@ -52,9 +52,9 @@
 #define LIBVER_MAJOR    4
 #define LIBVER_MINOR    2 
 #define LIBVER_RELEASE  13 
-#define LIBVER_SUBRELEASE ""   /* For pre-releases like snap0       */
+#define LIBVER_SUBRELEASE "post0"   /* For pre-releases like snap0       */
                                 /* Empty string for real releases.           */
-#define LIBVER_STRING   "HDF Version 4.2 Release 13, June 24, 2017"
+#define LIBVER_STRING   "HDF Version 4.2 Release 13-post0, July 6, 2017"
 #define LIBVSTR_LEN    80   /* length of version string  */
 #define LIBVER_LEN  92      /* 4+4+4+80 = 92 */
 /* end of version tags */
diff --git a/hdf/test/CMakeLists.txt b/hdf/test/CMakeLists.txt
index 04c99cf6..b32f3375 100644
--- a/hdf/test/CMakeLists.txt
+++ b/hdf/test/CMakeLists.txt
@@ -59,30 +59,26 @@ endif ()
 
 #-- Adding test for testhdf
 add_executable (testhdf ${testhdf_SRCS})
-TARGET_NAMING (testhdf STATIC)
 TARGET_C_PROPERTIES (testhdf STATIC " " " ")
-target_link_libraries (testhdf ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
+target_link_libraries (testhdf ${HDF4_SRC_LIB_TARGET} ${LINK_COMP_LIBS})
 set_target_properties (testhdf PROPERTIES FOLDER test)
 if (BUILD_SHARED_LIBS)
   add_executable (testhdf-shared ${testhdf_SRCS})
-  TARGET_NAMING (testhdf-shared SHARED)
   TARGET_C_PROPERTIES (testhdf-shared SHARED " " " ")
-  target_link_libraries (testhdf-shared ${HDF4_SRC_LIBSH_TARGET} ${LINK_SHARED_LIBS})
+  target_link_libraries (testhdf-shared ${HDF4_SRC_LIBSH_TARGET} ${LINK_COMP_LIBS})
   set_target_properties (testhdf-shared PROPERTIES FOLDER test)
 endif ()
 
 #-- Adding test for buffer
 if (NOT WIN32)
   add_executable (buffer ${HDF4_HDF_TEST_SOURCE_DIR}/buffer.c)
-  TARGET_NAMING (buffer STATIC)
   TARGET_C_PROPERTIES (buffer STATIC " " " ")
-  target_link_libraries (buffer ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
+  target_link_libraries (buffer ${HDF4_SRC_LIB_TARGET})
   set_target_properties (buffer PROPERTIES FOLDER test)
   if (BUILD_SHARED_LIBS)
     add_executable (buffer-shared ${HDF4_HDF_TEST_SOURCE_DIR}/buffer.c)
-    TARGET_NAMING (buffer-shared SHARED)
     TARGET_C_PROPERTIES (buffer-shared SHARED " " " ")
-    target_link_libraries (buffer-shared ${HDF4_SRC_LIBSH_TARGET} ${LINK_SHARED_LIBS})
+    target_link_libraries (buffer-shared ${HDF4_SRC_LIBSH_TARGET})
     set_target_properties (buffer-shared PROPERTIES FOLDER test)
   endif ()
 endif ()
diff --git a/hdf/test/CMakeTests.cmake b/hdf/test/CMakeTests.cmake
index 2f5d9ec1..60fa4916 100644
--- a/hdf/test/CMakeTests.cmake
+++ b/hdf/test/CMakeTests.cmake
@@ -29,23 +29,13 @@ set (HDF4_REFERENCE_TEST_FILES
 )
 
 foreach (h4_file ${HDF4_REFERENCE_TEST_FILES})
+  HDFTEST_COPY_FILE("${HDF4_HDF_TEST_SOURCE_DIR}/test_files/${h4_file}" "${PROJECT_BINARY_DIR}/TEST/test_files/${h4_file}" "hdf_test_files")
   set (dest "${PROJECT_BINARY_DIR}/TEST/test_files/${h4_file}")
-  add_custom_command (
-      TARGET     testhdf
-      POST_BUILD
-      COMMAND    ${CMAKE_COMMAND}
-      ARGS       -E copy_if_different ${HDF4_HDF_TEST_SOURCE_DIR}/test_files/${h4_file} ${dest}
-  )
   if (BUILD_SHARED_LIBS)
-    set (dest "${PROJECT_BINARY_DIR}/TEST-shared/test_files/${h4_file}")
-    add_custom_command (
-        TARGET     testhdf-shared
-        POST_BUILD
-        COMMAND    ${CMAKE_COMMAND}
-        ARGS       -E copy_if_different ${HDF4_HDF_TEST_SOURCE_DIR}/test_files/${h4_file} ${dest}
-    )
+    HDFTEST_COPY_FILE("${HDF4_HDF_TEST_SOURCE_DIR}/test_files/${h4_file}" "${PROJECT_BINARY_DIR}/TEST-shared/test_files/${h4_file}" "hdf_test_files")
   endif ()
 endforeach ()
+add_custom_target(hdf_test_files ALL COMMENT "Copying files needed by hdf tests" DEPENDS ${hdf_test_files_list})
 
 # Remove any output file left over from previous test run
 set (HDF4_TESTHDF_FILES
diff --git a/hdf/util/CMakeLists.txt b/hdf/util/CMakeLists.txt
index a429a137..5f54a8de 100644
--- a/hdf/util/CMakeLists.txt
+++ b/hdf/util/CMakeLists.txt
@@ -10,9 +10,8 @@ endif ()
 if (HDF4_BUILD_TOOLS)
   #-- Adding tool hdfls
   add_executable (hdfls ${HDF4_HDF_UTIL_SOURCE_DIR}/hdfls.c)
-  TARGET_NAMING (hdfls STATIC)
   TARGET_C_PROPERTIES (hdfls STATIC " " " ")
-  target_link_libraries (hdfls ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
+  target_link_libraries (hdfls ${HDF4_MF_LIB_TARGET})
 
   #-- Adding utility hdfed
   set (hdfed_SRCS
@@ -23,9 +22,8 @@ if (HDF4_BUILD_TOOLS)
   )
 
   add_executable (hdfed ${hdfed_SRCS})
-  TARGET_NAMING (hdfed STATIC)
   TARGET_C_PROPERTIES (hdfed STATIC " " " ")
-  target_link_libraries (hdfed ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
+  target_link_libraries (hdfed ${HDF4_MF_LIB_TARGET})
 endif ()
 
 if (HDF4_BUILD_UTILS)
@@ -36,9 +34,8 @@ if (HDF4_BUILD_UTILS)
   )
 
   add_executable (hdf2gif ${hdf2gif_SRCS})
-  TARGET_NAMING (hdf2gif STATIC)
   TARGET_C_PROPERTIES (hdf2gif STATIC " " " ")
-  target_link_libraries (hdf2gif ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
+  target_link_libraries (hdf2gif ${HDF4_MF_LIB_TARGET})
 
   #-- Adding utility gif2hdf
   set (gif2hdf_SRCS
@@ -50,93 +47,78 @@ if (HDF4_BUILD_UTILS)
  )
 
   add_executable (gif2hdf ${gif2hdf_SRCS})
-  TARGET_NAMING (gif2hdf STATIC)
   TARGET_C_PROPERTIES (gif2hdf STATIC " " " ")
-  target_link_libraries (gif2hdf ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
+  target_link_libraries (gif2hdf ${HDF4_MF_LIB_TARGET})
 
   #-- Adding utility hdf24to8
   add_executable (hdf24to8 ${HDF4_HDF_UTIL_SOURCE_DIR}/hdf24to8.c)
-  TARGET_NAMING (hdf24to8 STATIC)
   TARGET_C_PROPERTIES (hdf24to8 STATIC " " " ")
-  target_link_libraries (hdf24to8 ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
+  target_link_libraries (hdf24to8 ${HDF4_MF_LIB_TARGET})
 
   #-- Adding utility hdftor8
   add_executable (hdftor8 ${HDF4_HDF_UTIL_SOURCE_DIR}/hdftor8.c)
-  TARGET_NAMING (hdftor8 STATIC)
   TARGET_C_PROPERTIES (hdftor8 STATIC " " " ")
-  target_link_libraries (hdftor8 ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
+  target_link_libraries (hdftor8 ${HDF4_MF_LIB_TARGET})
 
   #-- Adding utility ristosds
   add_executable (ristosds ${HDF4_HDF_UTIL_SOURCE_DIR}/ristosds.c)
-  TARGET_NAMING (ristosds STATIC)
   TARGET_C_PROPERTIES (ristosds STATIC " " " ")
-  target_link_libraries (ristosds ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
+  target_link_libraries (ristosds ${HDF4_MF_LIB_TARGET})
 
   #-- Adding utility hdfpack
   add_executable (hdfpack ${HDF4_HDF_UTIL_SOURCE_DIR}/hdfpack.c)
-  TARGET_NAMING (hdfpack STATIC)
   TARGET_C_PROPERTIES (hdfpack STATIC " " " ")
-  target_link_libraries (hdfpack ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
+  target_link_libraries (hdfpack ${HDF4_MF_LIB_TARGET})
 
   #-- Adding utility paltohdf
   add_executable (paltohdf ${HDF4_HDF_UTIL_SOURCE_DIR}/paltohdf.c)
-  TARGET_NAMING (paltohdf STATIC)
   TARGET_C_PROPERTIES (paltohdf STATIC " " " ")
-  target_link_libraries (paltohdf ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
+  target_link_libraries (paltohdf ${HDF4_MF_LIB_TARGET})
 
   #-- Adding utility hdftopal
   add_executable (hdftopal ${HDF4_HDF_UTIL_SOURCE_DIR}/hdftopal.c)
-  TARGET_NAMING (hdftopal STATIC)
   TARGET_C_PROPERTIES (hdftopal STATIC " " " ")
-  target_link_libraries (hdftopal ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
+  target_link_libraries (hdftopal ${HDF4_MF_LIB_TARGET})
 
   #-- Adding utility r8tohdf
   add_executable (r8tohdf ${HDF4_HDF_UTIL_SOURCE_DIR}/r8tohdf.c)
-  TARGET_NAMING (r8tohdf STATIC)
   TARGET_C_PROPERTIES (r8tohdf STATIC " " " ")
-  target_link_libraries (r8tohdf ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
+  target_link_libraries (r8tohdf ${HDF4_MF_LIB_TARGET})
 
   #-- Adding utility hdfcomp
   add_executable (hdfcomp ${HDF4_HDF_UTIL_SOURCE_DIR}/hdfcomp.c)
-  TARGET_NAMING (hdfcomp STATIC)
   TARGET_C_PROPERTIES (hdfcomp STATIC " " " ")
-  target_link_libraries (hdfcomp ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
+  target_link_libraries (hdfcomp ${HDF4_MF_LIB_TARGET})
 
   #-- Adding utility jpeg2hdf
   add_executable (jpeg2hdf ${HDF4_HDF_UTIL_SOURCE_DIR}/jpeg2hdf.c)
-  TARGET_NAMING (jpeg2hdf STATIC)
   TARGET_C_PROPERTIES (jpeg2hdf STATIC " " " ")
-  target_link_libraries (jpeg2hdf ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
+  target_link_libraries (jpeg2hdf ${HDF4_MF_LIB_TARGET})
 
   #-- Adding utility hdf2jpeg
   add_executable (hdf2jpeg ${HDF4_HDF_UTIL_SOURCE_DIR}/hdf2jpeg.c)
-  TARGET_NAMING (hdf2jpeg STATIC)
   TARGET_C_PROPERTIES (hdf2jpeg STATIC " " " ")
-  target_link_libraries (hdf2jpeg ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
+  target_link_libraries (hdf2jpeg ${HDF4_MF_LIB_TARGET})
 
   #-- Adding utility hdf8to24
   add_executable (hdf8to24 ${HDF4_HDF_UTIL_SOURCE_DIR}/hdf8to24.c)
-  TARGET_NAMING (hdf8to24 STATIC)
   TARGET_C_PROPERTIES (hdf8to24 STATIC " " " ")
-  target_link_libraries (hdf8to24 ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
+  target_link_libraries (hdf8to24 ${HDF4_MF_LIB_TARGET})
 
   #-- Adding utility hdfunpac
   add_executable (hdfunpac ${HDF4_HDF_UTIL_SOURCE_DIR}/hdfunpac.c)
-  TARGET_NAMING (hdfunpac STATIC)
   TARGET_C_PROPERTIES (hdfunpac STATIC " " " ")
-  target_link_libraries (hdfunpac ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
+  target_link_libraries (hdfunpac ${HDF4_MF_LIB_TARGET})
 
   #-- Adding utility vmake
   add_executable (vmake ${HDF4_HDF_UTIL_SOURCE_DIR}/vmake.c)
-  TARGET_NAMING (vmake STATIC)
   TARGET_C_PROPERTIES (vmake STATIC " " " ")
-  target_link_libraries (vmake ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
+  target_link_libraries (vmake ${HDF4_MF_LIB_TARGET})
 
   #-- Adding utility vshow
   add_executable (vshow ${HDF4_HDF_UTIL_SOURCE_DIR}/vshow.c)
-  TARGET_NAMING (vshow STATIC)
   TARGET_C_PROPERTIES (vshow STATIC " " " ")
-  target_link_libraries (vshow ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
+  target_link_libraries (vshow ${HDF4_MF_LIB_TARGET})
 endif ()
 
 if (BUILD_TESTING AND HDF4_BUILD_UTILS)
diff --git a/hdf/util/CMakeTests.cmake b/hdf/util/CMakeTests.cmake
index bf348985..4e72868b 100644
--- a/hdf/util/CMakeTests.cmake
+++ b/hdf/util/CMakeTests.cmake
@@ -26,47 +26,24 @@ if (HDF4_BUILD_TOOLS)
       ristosds.out1
   )
 
+  #-- Copy all the hdfed data files from the source directory into the test directory
+  set (HDF4_HDFED_TEST_FILES
+      storm110.hdf
+      ntcheck.hdf
+  )
+
   foreach (h4_file ${HDF4_LS_TEST_FILES})
-    set (dest "${PROJECT_BINARY_DIR}/${h4_file}")
-    #message (STATUS " Copying ${HDF4_HDF_UTIL_SOURCE_DIR}/${h4_file} to ${PROJECT_BINARY_DIR}/")
-    ADD_CUSTOM_COMMAND (
-        TARGET     hdfls
-        POST_BUILD
-        COMMAND    ${CMAKE_COMMAND}
-        ARGS       -E copy_if_different ${HDF4_HDF_UTIL_SOURCE_DIR}/${h4_file} ${dest}
-    )
+    HDFTEST_COPY_FILE("${HDF4_HDF_UTIL_SOURCE_DIR}/${h4_file}" "${PROJECT_BINARY_DIR}/${h4_file}" "hdf_util_files")
   endforeach ()
 
   if (WIN32 AND MSVC_VERSION LESS 1900)
-    ADD_CUSTOM_COMMAND (
-        TARGET     hdfls
-        POST_BUILD
-        COMMAND    ${CMAKE_COMMAND}
-        ARGS       -E copy_if_different ${HDF4_HDF_UTIL_SOURCE_DIR}/hdfed-w.out1 ${PROJECT_BINARY_DIR}/hdfed.out1
-    )
+    HDFTEST_COPY_FILE("${HDF4_HDF_UTIL_SOURCE_DIR}/hdfed-w.out1" "${PROJECT_BINARY_DIR}/hdfed.out1" "hdf_util_files")
   else ()
-    ADD_CUSTOM_COMMAND (
-        TARGET     hdfls
-        POST_BUILD
-        COMMAND    ${CMAKE_COMMAND}
-        ARGS       -E copy_if_different ${HDF4_HDF_UTIL_SOURCE_DIR}/hdfed.out1 ${PROJECT_BINARY_DIR}/hdfed.out1
-    )
+    HDFTEST_COPY_FILE("${HDF4_HDF_UTIL_SOURCE_DIR}/hdfed.out1" "${PROJECT_BINARY_DIR}/hdfed.out1" "hdf_util_files")
   endif ()
 
-  #-- Copy all the hdfed data files from the source directory into the test directory
-  set (HDF4_HDFED_TEST_FILES
-      storm110.hdf
-      ntcheck.hdf
-  )
   foreach (h4_file ${HDF4_HDFED_TEST_FILES})
-    set (dest "${PROJECT_BINARY_DIR}/${h4_file}")
-    #message (STATUS " Copying ${HDF4_HDF_UTIL_SOURCE_DIR}/testfiles/${h4_file} to ${PROJECT_BINARY_DIR}/")
-    ADD_CUSTOM_COMMAND (
-        TARGET     hdfed
-        POST_BUILD
-        COMMAND    ${CMAKE_COMMAND}
-        ARGS       -E copy_if_different ${HDF4_HDF_UTIL_SOURCE_DIR}/testfiles/${h4_file} ${dest}
-    )
+    HDFTEST_COPY_FILE("${HDF4_HDF_UTIL_SOURCE_DIR}/testfiles/${h4_file}" "${PROJECT_BINARY_DIR}/${h4_file}" "hdf_util_files")
   endforeach ()
 endif ()
 
@@ -74,48 +51,18 @@ endif ()
   set (HDF4_HDF2GIF_TEST_FILES
       skull.hdf
   )
-  foreach (h4_file ${HDF4_HDF2GIF_TEST_FILES})
-    set (dest "${PROJECT_BINARY_DIR}/${h4_file}")
-    #message (STATUS " Copying ${HDF4_HDF_UTIL_SOURCE_DIR}/testfiles/${h4_file} to ${PROJECT_BINARY_DIR}/")
-    ADD_CUSTOM_COMMAND (
-        TARGET     hdf2gif
-        POST_BUILD
-        COMMAND    ${CMAKE_COMMAND}
-        ARGS       -E copy_if_different ${HDF4_HDF_UTIL_SOURCE_DIR}/testfiles/${h4_file} ${dest}
-    )
-  endforeach ()
 
   #-- Copy all the gif2hdf data files from the source directory into the test directory
   set (HDF4_GIF2HDF_TEST_FILES
       SunWheel.gif
       bttrfly.gif
   )
-  foreach (h4_file ${HDF4_GIF2HDF_TEST_FILES})
-    set (dest "${PROJECT_BINARY_DIR}/${h4_file}")
-    #message (STATUS " Copying ${HDF4_HDF_UTIL_SOURCE_DIR}/testfiles/${h4_file} to ${PROJECT_BINARY_DIR}/")
-    ADD_CUSTOM_COMMAND (
-        TARGET     gif2hdf
-        POST_BUILD
-        COMMAND    ${CMAKE_COMMAND}
-        ARGS       -E copy_if_different ${HDF4_HDF_UTIL_SOURCE_DIR}/testfiles/${h4_file} ${dest}
-    )
-  endforeach ()
 
   #-- Copy all the hdftor8 data files from the source directory into the test directory
   set (HDF4_HDFTOR8_TEST_FILES
       head.r24
       head.r8
   )
-  foreach (h4_file ${HDF4_HDFTOR8_TEST_FILES})
-    set (dest "${PROJECT_BINARY_DIR}/${h4_file}")
-    #message (STATUS " Copying ${HDF4_HDF_UTIL_SOURCE_DIR}/testfiles/${h4_file} to ${PROJECT_BINARY_DIR}/")
-    ADD_CUSTOM_COMMAND (
-        TARGET     hdftor8
-        POST_BUILD
-        COMMAND    ${CMAKE_COMMAND}
-        ARGS       -E copy_if_different ${HDF4_HDF_UTIL_SOURCE_DIR}/testfiles/${h4_file} ${dest}
-    )
-  endforeach ()
 
   #-- Copy all the ristosds data files from the source directory into the test directory
   set (HDF4_RISTOSDS_TEST_FILES
@@ -123,46 +70,16 @@ endif ()
       storm120.hdf
       storm130.hdf
   )
-  foreach (h4_file ${HDF4_RISTOSDS_TEST_FILES})
-    set (dest "${PROJECT_BINARY_DIR}/${h4_file}")
-    #message (STATUS " Copying ${HDF4_HDF_UTIL_SOURCE_DIR}/testfiles/${h4_file} to ${PROJECT_BINARY_DIR}/")
-    ADD_CUSTOM_COMMAND (
-        TARGET     ristosds
-        POST_BUILD
-        COMMAND    ${CMAKE_COMMAND}
-        ARGS       -E copy_if_different ${HDF4_HDF_UTIL_SOURCE_DIR}/testfiles/${h4_file} ${dest}
-    )
-  endforeach ()
 
   #-- Copy all the hdfpack data files from the source directory into the test directory
   set (HDF4_HDFPACK_TEST_FILES
       test.hdf
   )
-  foreach (h4_file ${HDF4_HDFPACK_TEST_FILES})
-    set (dest "${PROJECT_BINARY_DIR}/${h4_file}")
-    #message (STATUS " Copying ${HDF4_HDF_UTIL_SOURCE_DIR}/testfiles/${h4_file} to ${PROJECT_BINARY_DIR}/")
-    ADD_CUSTOM_COMMAND (
-        TARGET     hdfpack
-        POST_BUILD
-        COMMAND    ${CMAKE_COMMAND}
-        ARGS       -E copy_if_different ${HDF4_HDF_UTIL_SOURCE_DIR}/testfiles/${h4_file} ${dest}
-    )
-  endforeach ()
 
   #-- Copy all the paltohdf data files from the source directory into the test directory
   set (HDF4_PALTOHDF_TEST_FILES
       palette.raw
   )
-  foreach (h4_file ${HDF4_PALTOHDF_TEST_FILES})
-    set (dest "${PROJECT_BINARY_DIR}/${h4_file}")
-    #message (STATUS " Copying ${HDF4_HDF_UTIL_SOURCE_DIR}/testfiles/${h4_file} to ${PROJECT_BINARY_DIR}/")
-    ADD_CUSTOM_COMMAND (
-        TARGET     paltohdf
-        POST_BUILD
-        COMMAND    ${CMAKE_COMMAND}
-        ARGS       -E copy_if_different ${HDF4_HDF_UTIL_SOURCE_DIR}/testfiles/${h4_file} ${dest}
-    )
-  endforeach ()
 
   #-- Copy all the r8tohdf data files from the source directory into the test directory
   set (HDF4_R8TOHDF_TEST_FILES
@@ -171,16 +88,6 @@ endif ()
       storm130.raw
       storm140.raw
   )
-  foreach (h4_file ${HDF4_R8TOHDF_TEST_FILES})
-    set (dest "${PROJECT_BINARY_DIR}/${h4_file}")
-    #message (STATUS " Copying ${HDF4_HDF_UTIL_SOURCE_DIR}/testfiles/${h4_file} to ${PROJECT_BINARY_DIR}/")
-    ADD_CUSTOM_COMMAND (
-        TARGET     r8tohdf
-        POST_BUILD
-        COMMAND    ${CMAKE_COMMAND}
-        ARGS       -E copy_if_different ${HDF4_HDF_UTIL_SOURCE_DIR}/testfiles/${h4_file} ${dest}
-    )
-  endforeach ()
 
   #-- Copy all the hdfcomp data files from the source directory into the test directory
   set (HDF4_HDFCOMP_TEST_FILES
@@ -188,32 +95,28 @@ endif ()
       storm120.hdf
       storm130.hdf
   )
-  foreach (h4_file ${HDF4_HDFCOMP_TEST_FILES})
-    set (dest "${PROJECT_BINARY_DIR}/${h4_file}")
-    #message (STATUS " Copying ${HDF4_HDF_UTIL_SOURCE_DIR}/testfiles/${h4_file} to ${PROJECT_BINARY_DIR}/")
-    ADD_CUSTOM_COMMAND (
-        TARGET     hdfcomp
-        POST_BUILD
-        COMMAND    ${CMAKE_COMMAND}
-        ARGS       -E copy_if_different ${HDF4_HDF_UTIL_SOURCE_DIR}/testfiles/${h4_file} ${dest}
-    )
-  endforeach ()
 
   #-- Copy all the jpeg2hdf data files from the source directory into the test directory
   set (HDF4_JPEG2HDF_TEST_FILES
       jpeg_img.jpg
   )
-  foreach (h4_file ${HDF4_JPEG2HDF_TEST_FILES})
-    set (dest "${PROJECT_BINARY_DIR}/${h4_file}")
-    #message (STATUS " Copying ${HDF4_HDF_UTIL_SOURCE_DIR}/testfiles/${h4_file} to ${PROJECT_BINARY_DIR}/")
-    ADD_CUSTOM_COMMAND (
-        TARGET     jpeg2hdf
-        POST_BUILD
-        COMMAND    ${CMAKE_COMMAND}
-        ARGS       -E copy_if_different ${HDF4_HDF_UTIL_SOURCE_DIR}/testfiles/${h4_file} ${dest}
-    )
+
+  foreach (h4_file
+        ${HDF4_HDF2GIF_TEST_FILES}
+        ${HDF4_GIF2HDF_TEST_FILES}
+        ${HDF4_HDFTOR8_TEST_FILES}
+        ${HDF4_RISTOSDS_TEST_FILES}
+        ${HDF4_HDFPACK_TEST_FILES}
+        ${HDF4_PALTOHDF_TEST_FILES}
+        ${HDF4_R8TOHDF_TEST_FILES}
+        ${HDF4_HDFCOMP_TEST_FILES}
+        ${HDF4_JPEG2HDF_TEST_FILES}
+  )
+    HDFTEST_COPY_FILE("${HDF4_HDF_UTIL_SOURCE_DIR}/testfiles/${h4_file}" "${PROJECT_BINARY_DIR}/${h4_file}" "hdf_util_files")
   endforeach ()
 
+  add_custom_target(hdf_util_files ALL COMMENT "Copying files needed by hdf_util tests" DEPENDS ${hdf_util_files_list})
+
 ##############################################################################
 ##############################################################################
 ###           T H E   T E S T S  M A C R O S                               ###
diff --git a/java/CMakeLists.txt b/java/CMakeLists.txt
index 4aea237d..784f6912 100644
--- a/java/CMakeLists.txt
+++ b/java/CMakeLists.txt
@@ -1,7 +1,6 @@
 cmake_minimum_required(VERSION 3.2.2)
 PROJECT ( HDF4_JAVA C Java )
 
-set (CMAKE_MODULE_PATH "${HDF_RESOURCES_DIR};${HDF_RESOURCES_EXT_DIR}")
 find_package (Java)
 #-----------------------------------------------------------------------------
 # Include some macros for reusable code
@@ -34,20 +33,20 @@ set (CMAKE_JAVA_INCLUDE_PATH "")
 #-----------------------------------------------------------------------------
 # Traverse source subdirectory
 #-----------------------------------------------------------------------------
-add_subdirectory (${HDF4_JAVA_SOURCE_DIR}/src ${HDF4_JAVA_BINARY_DIR}/src)
+add_subdirectory (src)
 
 #-----------------------------------------------------------------------------
 # Build the Java Examples
 #-----------------------------------------------------------------------------
 if (HDF4_BUILD_EXAMPLES)
-  add_subdirectory (${HDF4_JAVA_SOURCE_DIR}/examples ${HDF4_JAVA_BINARY_DIR}/examples)
+  add_subdirectory (examples)
 endif ()
 
 #-----------------------------------------------------------------------------
 # Testing
 #-----------------------------------------------------------------------------
 if (BUILD_TESTING)
-  add_subdirectory (${HDF4_JAVA_SOURCE_DIR}/test ${HDF4_JAVA_BINARY_DIR}/test)
+  add_subdirectory (test)
 endif ()
 
 #-----------------------------------------------------------------------------
diff --git a/java/examples/CMakeLists.txt b/java/examples/CMakeLists.txt
index ee254614..78fffed3 100644
--- a/java/examples/CMakeLists.txt
+++ b/java/examples/CMakeLists.txt
@@ -46,13 +46,7 @@ endforeach ()
 
 if (BUILD_TESTING)
   macro (ADD_H4_TEST resultfile resultcode)
-    if (CMAKE_BUILD_TYPE MATCHES Debug)
-      if (WIN32)
-        set (CMD_ARGS "-Dhdf.hdflib.HDFLibrary.loadLibraryName=hdf_java_D;")
-      else()
-        set (CMD_ARGS "-Dhdf.hdflib.HDFLibrary.loadLibraryName=hdf_java_debug;")
-      endif()
-    endif()
+    set (CMD_ARGS "-Dhdf.hdflib.HDFLibrary.loadLibraryName=$<TARGET_PROPERTY:${HDF4_JAVA_JNI_LIB_TARGET},OUTPUT_NAME$<$<CONFIG:Debug>:_DEBUG>>;")
     add_test (
         NAME JAVAEX-${resultfile}
         COMMAND "${CMAKE_COMMAND}"
@@ -88,5 +82,4 @@ if (BUILD_TESTING)
     set (last_test "JAVAEX-${example}-clearall-objects")
     ADD_H4_TEST (${example} 0)
   endforeach ()
-
 endif ()
diff --git a/java/src/CMakeLists.txt b/java/src/CMakeLists.txt
index 160b32ff..9f63d002 100644
--- a/java/src/CMakeLists.txt
+++ b/java/src/CMakeLists.txt
@@ -4,5 +4,5 @@ PROJECT ( HDF4_JAVA_SRC C Java )
 #-----------------------------------------------------------------------------
 # Traverse source subdirectory
 #-----------------------------------------------------------------------------
-add_subdirectory (${HDF4_JAVA_SRC_SOURCE_DIR}/jni ${HDF4_JAVA_SRC_BINARY_DIR}/jni)
-add_subdirectory (${HDF4_JAVA_SRC_SOURCE_DIR}/hdf ${HDF4_JAVA_SRC_BINARY_DIR}/hdf)
+add_subdirectory (jni)
+add_subdirectory (hdf)
diff --git a/java/src/hdf/CMakeLists.txt b/java/src/hdf/CMakeLists.txt
index b9c6c65e..e0af7dea 100644
--- a/java/src/hdf/CMakeLists.txt
+++ b/java/src/hdf/CMakeLists.txt
@@ -1,4 +1,4 @@
 cmake_minimum_required (VERSION 3.2.2)
 PROJECT (HDF4_JAVA_HDF)
 
-add_subdirectory (${HDF4_JAVA_HDF_SOURCE_DIR}/hdflib      hdflib)
+add_subdirectory (hdflib)
diff --git a/java/src/jni/CMakeLists.txt b/java/src/jni/CMakeLists.txt
index 8f2188c0..b218d00d 100644
--- a/java/src/jni/CMakeLists.txt
+++ b/java/src/jni/CMakeLists.txt
@@ -30,19 +30,13 @@ set (CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE ON)
 ########### JNI libraries always must be built shared  ###############
 add_library (${HDF4_JAVA_JNI_LIB_TARGET} SHARED ${HDF4_JAVA_JNI_CSRCS})
 TARGET_C_PROPERTIES (${HDF4_JAVA_JNI_LIB_TARGET} SHARED " " " ")
-if (WIN32)
-  TARGET_LINK_LIBRARIES (${HDF4_JAVA_JNI_LIB_TARGET} ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} "ws2_32.lib")
-else ()
-  TARGET_LINK_LIBRARIES (${HDF4_JAVA_JNI_LIB_TARGET} ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET})
-endif ()
+target_link_libraries (${HDF4_JAVA_JNI_LIB_TARGET} PRIVATE ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET})
 set_target_properties (${HDF4_JAVA_JNI_LIB_TARGET} PROPERTIES FOLDER libraries/jni)
 SET_GLOBAL_VARIABLE (HDF4_JAVA_LIBRARIES_TO_EXPORT "${HDF4_JAVA_LIBRARIES_TO_EXPORT};${HDF4_JAVA_JNI_LIB_TARGET}")
 H4_SET_LIB_OPTIONS (${HDF4_JAVA_JNI_LIB_TARGET} ${HDF4_JAVA_JNI_LIB_NAME} SHARED)
 if (WIN32)
   get_filename_component (HDF4_JAVA_JNI_DLL_NAME ${HDF4_JAVA_JNI_LIB_TARGET} NAME_WE)
-  if (CMAKE_BUILD_TYPE MATCHES Debug)
-    set (HDF4_JAVA_JNI_DLL_NAME "${HDF4_JAVA_JNI_DLL_NAME}_D")
-  endif ()
+  set (HDF4_JAVA_JNI_DLL_NAME "${HDF4_JAVA_JNI_DLL_NAME}$<$<CONFIG:Debug>:_D>")
   # message (STATUS "HDF4_JAVA_JNI_DLL_NAME: ${HDF4_JAVA_JNI_DLL_NAME}")
   if (BUILD_TESTING)
     add_custom_target (HDF4_JAVA_JNI-Test-Copy ALL
diff --git a/java/src/jni/h4jni.h b/java/src/jni/h4jni.h
index e1979ff3..0990b536 100644
--- a/java/src/jni/h4jni.h
+++ b/java/src/jni/h4jni.h
@@ -1,16 +1,22 @@
-/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
+/*****************************************************************************
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *
- * This file is part of HDF.  The full HDF copyright notice, including       *
- * terms governing use, modification, and redistribution, is contained in    *
- * the COPYING file, which can be found at the root of the source code       *
- * distribution tree, or in https://support.hdfgroup.org/ftp/HDF/releases/.  *
- * If you do not have access to either file, you may request a copy from     *
+ * This file is part of the HDF Java Products distribution.                  *
+ * The full copyright notice, including terms governing use, modification,   *
+ * and redistribution, is contained in the file, COPYING.                    *
+ * COPYING can be found at the root of the source code distribution tree.    *
+ * If you do not have access to this file, you may request a copy from       *
  * help@hdfgroup.org.                                                        *
  ****************************************************************************/
 
+/*
+ *  For details of the HDF libraries, see the HDF Documentation at:
+ *    https://support.hdfgroup.org/documentation/
+ *
+ */
+
 #include <jni.h>
 
 #ifndef _Included_h4jni
diff --git a/java/src/jni/hdfImp.c b/java/src/jni/hdfImp.c
index a7e59a81..7b2b2422 100644
--- a/java/src/jni/hdfImp.c
+++ b/java/src/jni/hdfImp.c
@@ -8,7 +8,7 @@
  * notice, including terms governing use, modification, and redistribution,  *
  * is contained in the file, COPYING.  COPYING can be found at the root of   *
  * the source code distribution tree. You can also access it online  at      *
- * http://www.hdfgroup.org/products/licenses.html.  If you do not have       *
+ * http://support.hdfgroup.org/products/licenses.html.  If you do not have   *
  * access to the file, you may request a copy from help@hdfgroup.org.        *
  ****************************************************************************/
 /*
@@ -71,8 +71,10 @@ Java_hdf_hdflib_HDFLibrary_Hclose
     }
     /* close the HDF file */
     status = Hclose((int32)fid);
-    if (status == FAIL)
+    if (status == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -111,8 +113,10 @@ Java_hdf_hdflib_HDFLibrary_Hishdf
 
         UNPIN_JAVA_STRING(hdfFile, hfile);
 
-        if (retVal == FALSE)
+        if (retVal == FALSE) {
             CALL_ERROR_CHECK();
+            return JNI_FALSE;
+        }
     }
 
     return JNI_TRUE;
@@ -169,8 +173,10 @@ Java_hdf_hdflib_HDFLibrary_Hcache
     intn rval;
     rval =  Hcache((int32)file_id, (intn)cache_switch);
 
-    if (rval == FAIL)
+    if (rval == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -182,17 +188,14 @@ Java_hdf_hdflib_HDFLibrary_Hcache
  */
 JNIEXPORT jboolean JNICALL
 Java_hdf_hdflib_HDFLibrary_Hgetfileversion
-(JNIEnv *env, jclass clss, jlong file_id, jintArray vers, jobjectArray string)
+(JNIEnv *env, jclass clss, jlong file_id, jintArray vers, jobjectArray fvstring)
 {
     intn rval;
-    jclass Sjc;
     char s[LIBVSTR_LEN+1];
-    jstring name;
     jint *theArgs;
-    jboolean bb;
-    jobject o;
+    jboolean isCopy;
 
-    theArgs = ENVPTR->GetIntArrayElements(ENVPAR vers, &bb);
+    theArgs = ENVPTR->GetIntArrayElements(ENVPAR vers, &isCopy);
 
     rval = Hgetfileversion((int32) file_id, (uint32 *)&(theArgs[0]),
         (uint32 *)&(theArgs[1]), (uint32 *)&(theArgs[2]), s);
@@ -201,29 +204,32 @@ Java_hdf_hdflib_HDFLibrary_Hgetfileversion
     if (rval == FAIL) {
         ENVPTR->ReleaseIntArrayElements(ENVPAR vers, theArgs, JNI_ABORT);
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
     }
     else {
+        jstring rstring;
+        jclass sjc;
+        jobject o;
+        jboolean bb;
+
         ENVPTR->ReleaseIntArrayElements(ENVPAR vers, theArgs, 0);
-        o = ENVPTR->GetObjectArrayElement(ENVPAR string, 0);
-        if (o == NULL) {
-            CALL_ERROR_CHECK();
+
+        /* convert it to java string */
+        rstring = ENVPTR->NewStringUTF(ENVPAR s);
+
+        sjc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
+        if (sjc == NULL) {
+            return JNI_FALSE;
         }
-        else {
-            Sjc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
-            if (Sjc == NULL) {
-                CALL_ERROR_CHECK();
-            }
-            else  if (ENVPTR->IsInstanceOf(ENVPAR o, Sjc) == JNI_FALSE) {
-                CALL_ERROR_CHECK();
-            }
-            else {
-                name = ENVPTR->NewStringUTF(ENVPAR s);
-                if (name != NULL) {
-                    ENVPTR->SetObjectArrayElement(ENVPAR string, 0, (jobject)name);
-                }
-            }
-            ENVPTR->DeleteLocalRef(ENVPAR o);
+        o = ENVPTR->GetObjectArrayElement(ENVPAR fvstring, 0);
+        if (o == NULL) {
+            return JNI_FALSE;
         }
+        bb = ENVPTR->IsInstanceOf(ENVPAR o, sjc);
+        if (bb == JNI_TRUE)
+            ENVPTR->SetObjectArrayElement(ENVPAR fvstring, 0, (jobject)rstring);
+        ENVPTR->DeleteLocalRef(ENVPAR o);
+        return bb;
     }
     return JNI_TRUE;
 }
@@ -235,18 +241,15 @@ Java_hdf_hdflib_HDFLibrary_Hgetfileversion
  */
 JNIEXPORT jboolean JNICALL
 Java_hdf_hdflib_HDFLibrary_Hgetlibversion
-(JNIEnv *env, jclass clss, jintArray vers, jobjectArray string)
+(JNIEnv *env, jclass clss, jintArray vers, jobjectArray lvstring)
 {
     intn rval;
-    jclass Sjc;
     char s[LIBVSTR_LEN+1] ;
     jint *theArgs;
-    jstring name;
-    jobject o;
-    jboolean bb;
+    jboolean isCopy;
 
     s[LIBVSTR_LEN] = '\0';
-    if (string == NULL) {
+    if (lvstring == NULL) {
         h4nullArgument(env, "Hgetlibversion:  string is NULL");
     } /* end if */
     else if (vers == NULL) {
@@ -256,7 +259,7 @@ Java_hdf_hdflib_HDFLibrary_Hgetlibversion
         h4badArgument(env, "Hgetlibversion:  vers input array < order 3");
     } /* end else if */
     else {
-        theArgs = ENVPTR->GetIntArrayElements(ENVPAR vers, &bb);
+        theArgs = ENVPTR->GetIntArrayElements(ENVPAR vers, &isCopy);
         if (theArgs == NULL) {
             h4JNIFatalError(env, "Hgetlibversion:  vers not pinned");
         } /* end if */
@@ -267,32 +270,32 @@ Java_hdf_hdflib_HDFLibrary_Hgetlibversion
             if (rval == FAIL) {
                 ENVPTR->ReleaseIntArrayElements(ENVPAR vers, theArgs, JNI_ABORT);
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
             }
             else {
+                jstring rstring;
+                jclass sjc;
+                jobject o;
+                jboolean bb;
+
                 ENVPTR->ReleaseIntArrayElements(ENVPAR vers, theArgs, 0);
-                Sjc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
-                if (Sjc == NULL) {
-                    CALL_ERROR_CHECK();
+
+                /* convert it to java string */
+                rstring = ENVPTR->NewStringUTF(ENVPAR s);
+
+                sjc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
+                if (sjc == NULL) {
+                    return JNI_FALSE;
                 }
-                else {
-                    o = ENVPTR->GetObjectArrayElement(ENVPAR string, 0);
-                    if (o == NULL) {
-                        CALL_ERROR_CHECK();
-                    }
-                    else {
-                        bb = ENVPTR->IsInstanceOf(ENVPAR o, Sjc);
-                        if (bb == JNI_FALSE) {
-                            CALL_ERROR_CHECK();
-                        }
-                        else {
-                            ENVPTR->DeleteLocalRef(ENVPAR o);
-                            name = ENVPTR->NewStringUTF(ENVPAR s);
-                            if (name != NULL) {
-                                ENVPTR->SetObjectArrayElement(ENVPAR string, 0, (jobject)name);
-                            }
-                        }
-                    }
+                o = ENVPTR->GetObjectArrayElement(ENVPAR lvstring, 0);
+                if (o == NULL) {
+                    return JNI_FALSE;
                 }
+                bb = ENVPTR->IsInstanceOf(ENVPAR o, sjc);
+                if (bb == JNI_TRUE)
+                    ENVPTR->SetObjectArrayElement(ENVPAR lvstring, 0, (jobject)rstring);
+                ENVPTR->DeleteLocalRef(ENVPAR o);
+                return bb;
             }
         } /* end else */
     } /* end else */
@@ -312,8 +315,10 @@ Java_hdf_hdflib_HDFLibrary_Hsetaccesstype
     intn rval;
 
     rval = Hsetaccesstype((int32)h_id, (uintn)access_type);
-    if (rval == FAIL)
+    if (rval == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -330,8 +335,10 @@ Java_hdf_hdflib_HDFLibrary_Hsync
     intn rval;
 
     rval = Hsync((int32)file_id);
-    if (rval == FAIL)
+    if (rval == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -349,8 +356,10 @@ Java_hdf_hdflib_HDFLibrary_HDFclose
 
     rval = Hclose((int32)file_id);
 
-    if (rval == FAIL)
+    if (rval == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -394,8 +403,10 @@ Java_hdf_hdflib_HDFLibrary_HDFflusdd
 
     rval = Hflushdd((int32)file_id);
 
-    if (rval == FAIL)
+    if (rval == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
diff --git a/java/src/jni/hdfanImp.c b/java/src/jni/hdfanImp.c
index 69149cf9..98c983d8 100644
--- a/java/src/jni/hdfanImp.c
+++ b/java/src/jni/hdfanImp.c
@@ -8,7 +8,7 @@
  * notice, including terms governing use, modification, and redistribution,  *
  * is contained in the file, COPYING.  COPYING can be found at the root of   *
  * the source code distribution tree. You can also access it online  at      *
- * http://www.hdfgroup.org/products/licenses.html.  If you do not have       *
+ * http://support.hdfgroup.org/products/licenses.html.  If you do not have   *
  * access to the file, you may request a copy from help@hdfgroup.org.        *
  ****************************************************************************/
 /*
@@ -49,8 +49,10 @@ Java_hdf_hdflib_HDFLibrary_ANend
 
     retVal = ANend((int32)anid);
 
-    if (retVal == FAIL)
+    if (retVal == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -83,6 +85,7 @@ Java_hdf_hdflib_HDFLibrary_ANfileinfo
             if (retVal == FAIL) {
                 ENVPTR->ReleaseIntArrayElements(ENVPAR info, theArgs, JNI_ABORT);
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
             } /* end if */
             else {
                 ENVPTR->ReleaseIntArrayElements(ENVPAR info, theArgs, 0);
@@ -114,8 +117,10 @@ Java_hdf_hdflib_HDFLibrary_ANendaccess
     intn retVal;
 
     retVal = ANendaccess((int32)ann_id);
-    if (retVal == FAIL)
+    if (retVal == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -210,10 +215,6 @@ Java_hdf_hdflib_HDFLibrary_ANreadann
 {
     int32 retVal;
     char  *data;
-    jclass Sjc;
-    jstring rstring;
-    jobject o;
-    jboolean bb;
 
     data = (char *)HDmalloc((maxlen+1)*sizeof(char));
     if (data == NULL) {
@@ -225,29 +226,36 @@ Java_hdf_hdflib_HDFLibrary_ANreadann
         retVal = ANreadann((int32)ann_id, data, (int32)maxlen);
 
         if (retVal == FAIL) {
+            HDfree((char *)data);
             CALL_ERROR_CHECK();
+            return JNI_FALSE;
         }
         else {
+            jstring rstring;
+            jclass sjc;
+            jobject o;
+            jboolean bb;
+
+            data[maxlen] = '\0';
+            /* convert it to java string */
+            rstring = ENVPTR->NewStringUTF(ENVPAR data);
+
+            sjc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
+            if (sjc == NULL) {
+                HDfree((char *)data);
+                return JNI_FALSE;
+            }
             o = ENVPTR->GetObjectArrayElement(ENVPAR annbuf, 0);
             if (o == NULL) {
-                CALL_ERROR_CHECK();
-            }
-            else {
-                Sjc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
-                if (Sjc == NULL) {
-                    CALL_ERROR_CHECK();
-                }
-                else if (ENVPTR->IsInstanceOf(ENVPAR o, Sjc) == JNI_FALSE) {
-                        CALL_ERROR_CHECK();
-                }
-                else {
-                    data[maxlen] = '\0';
-                    rstring = ENVPTR->NewStringUTF(ENVPAR data);
-                    if (rstring != NULL)
-                        ENVPTR->SetObjectArrayElement(ENVPAR annbuf, 0, (jobject)rstring);
-                }
-                ENVPTR->DeleteLocalRef(ENVPAR o);
+                HDfree((char *)data);
+                return JNI_FALSE;
             }
+            bb = ENVPTR->IsInstanceOf(ENVPAR o, sjc);
+            if (bb == JNI_TRUE)
+                ENVPTR->SetObjectArrayElement(ENVPAR annbuf, 0, (jobject)rstring);
+            ENVPTR->DeleteLocalRef(ENVPAR o);
+            HDfree((char *)data);
+            return bb;
         }
         HDfree((char *)data);
     } /* end else */
@@ -341,6 +349,7 @@ Java_hdf_hdflib_HDFLibrary_ANid2tagref
             if (rval == FAIL) {
                 ENVPTR->ReleaseShortArrayElements(ENVPAR tagref, theArgs, JNI_ABORT);
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
             }
             else {
                 ENVPTR->ReleaseShortArrayElements(ENVPAR tagref, theArgs, 0);
@@ -380,8 +389,10 @@ Java_hdf_hdflib_HDFLibrary_ANwriteann
 
         UNPIN_JAVA_STRING(label, str);
 
-        if (rval == FAIL)
+        if (rval == FAIL) {
             CALL_ERROR_CHECK();
+            return JNI_FALSE;
+        }
     }
 
     return JNI_TRUE;
diff --git a/java/src/jni/hdfdfpalImp.c b/java/src/jni/hdfdfpalImp.c
index 93951e38..2466b639 100644
--- a/java/src/jni/hdfdfpalImp.c
+++ b/java/src/jni/hdfdfpalImp.c
@@ -8,7 +8,7 @@
  * notice, including terms governing use, modification, and redistribution,  *
  * is contained in the file, COPYING.  COPYING can be found at the root of   *
  * the source code distribution tree. You can also access it online  at      *
- * http://www.hdfgroup.org/products/licenses.html.  If you do not have       *
+ * http://support.hdfgroup.org/products/licenses.html.  If you do not have   *
  * access to the file, you may request a copy from help@hdfgroup.org.        *
  ****************************************************************************/
 /*
@@ -54,8 +54,10 @@ Java_hdf_hdflib_HDFLibrary_DFPaddpal
             } /* end else */
             UNPIN_JAVA_STRING(filename, f);
 
-            if (rval == FAIL)
+            if (rval == FAIL) {
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
+            }
         }
     } /* end else */
     return JNI_TRUE;
@@ -69,7 +71,6 @@ Java_hdf_hdflib_HDFLibrary_DFPgetpal
     const char  *f;
     jbyte       *dat;
     jboolean     bb;
-    int copyMode = JNI_ABORT;
 
     if (palette == NULL) {
         h4nullArgument(env, "DFPgetpal:  palette is NULL");
@@ -88,14 +89,13 @@ Java_hdf_hdflib_HDFLibrary_DFPgetpal
                 UNPIN_JAVA_STRING(filename, f);
 
                 if (rval == FAIL) {
+                    ENVPTR->ReleaseByteArrayElements(ENVPAR palette, dat, JNI_ABORT);
                     CALL_ERROR_CHECK();
+                    return JNI_FALSE;
                 } /* end if */
-                else {
-                    copyMode = 0;
-                } /* end else */
             } /* end if */
 
-            ENVPTR->ReleaseByteArrayElements(ENVPAR palette, dat, copyMode);
+            ENVPTR->ReleaseByteArrayElements(ENVPAR palette, dat, 0);
         } /* end else */
     } /* end else */
 
@@ -160,8 +160,10 @@ Java_hdf_hdflib_HDFLibrary_DFPputpal
 
             UNPIN_JAVA_STRING_TWO(filename, f, filemode, m);
 
-            if (rval == FAIL)
+            if (rval == FAIL) {
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
+            }
         }
     } /* end else */
 
@@ -181,8 +183,10 @@ Java_hdf_hdflib_HDFLibrary_DFPreadref
 
         UNPIN_JAVA_STRING(filename, f);
 
-        if (rval == FAIL)
+        if (rval == FAIL) {
             CALL_ERROR_CHECK();
+            return JNI_FALSE;
+        }
     }
 
     return JNI_TRUE;
@@ -208,8 +212,10 @@ Java_hdf_hdflib_HDFLibrary_DFPwriteref
 
         UNPIN_JAVA_STRING(filename, f);
 
-        if (rval == FAIL)
+        if (rval == FAIL) {
             CALL_ERROR_CHECK();
+            return JNI_FALSE;
+        }
     }
 
     return JNI_TRUE;
diff --git a/java/src/jni/hdfdfuImp.c b/java/src/jni/hdfdfuImp.c
index 9e554413..645bb811 100644
--- a/java/src/jni/hdfdfuImp.c
+++ b/java/src/jni/hdfdfuImp.c
@@ -8,7 +8,7 @@
  * notice, including terms governing use, modification, and redistribution,  *
  * is contained in the file, COPYING.  COPYING can be found at the root of   *
  * the source code distribution tree. You can also access it online  at      *
- * http://www.hdfgroup.org/products/licenses.html.  If you do not have       *
+ * http://support.hdfgroup.org/products/licenses.html.  If you do not have   *
  * access to the file, you may request a copy from help@hdfgroup.org.        *
  ****************************************************************************/
 /*
diff --git a/java/src/jni/hdfexceptionImp.c b/java/src/jni/hdfexceptionImp.c
index 905a6188..bffb4d3e 100644
--- a/java/src/jni/hdfexceptionImp.c
+++ b/java/src/jni/hdfexceptionImp.c
@@ -1,14 +1,14 @@
-/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
+/****************************************************************************
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *
- * This file is part of HDF.  The full HDF copyright notice, including       *
- * terms governing use, modification, and redistribution, is contained in    *
- * the COPYING file, which can be found at the root of the source code       *
- * distribution tree, or in https://support.hdfgroup.org/ftp/HDF/releases/.  *
- * If you do not have access to either file, you may request a copy from     *
- * help@hdfgroup.org.                                                        *
+ * This file is part of HDF Java Products. The full HDF Java copyright       *
+ * notice, including terms governing use, modification, and redistribution,  *
+ * is contained in the file, COPYING.  COPYING can be found at the root of   *
+ * the source code distribution tree. You can also access it online  at      *
+ * http://support.hdfgroup.org/products/licenses.html.  If you do not have   *
+ * access to the file, you may request a copy from help@hdfgroup.org.        *
  ****************************************************************************/
 /*
  *  This is a utility program used by the HDF Java-C wrapper layer to
diff --git a/java/src/jni/hdfgrImp.c b/java/src/jni/hdfgrImp.c
index a502f4a0..2c14266c 100644
--- a/java/src/jni/hdfgrImp.c
+++ b/java/src/jni/hdfgrImp.c
@@ -8,7 +8,7 @@
  * notice, including terms governing use, modification, and redistribution,  *
  * is contained in the file, COPYING.  COPYING can be found at the root of   *
  * the source code distribution tree. You can also access it online  at      *
- * http://www.hdfgroup.org/products/licenses.html.  If you do not have       *
+ * http://support.hdfgroup.org/products/licenses.html.  If you do not have   *
  * access to the file, you may request a copy from help@hdfgroup.org.        *
  ****************************************************************************/
 /*
@@ -59,8 +59,10 @@ Java_hdf_hdflib_HDFLibrary_GRend
     intn rval;
 
     rval = GRend((int32) gr_id);
-    if (rval == FAIL)
+    if (rval == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -72,8 +74,10 @@ Java_hdf_hdflib_HDFLibrary_GRendaccess
     intn rval;
 
     rval =  GRendaccess((int32) gr_id);
-    if (rval == FAIL)
+    if (rval == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -103,6 +107,7 @@ Java_hdf_hdflib_HDFLibrary_GRfileinfo
             if (rval == FAIL) {
                 ENVPTR->ReleaseIntArrayElements(ENVPAR argv, theArgs, JNI_ABORT);
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
             }
             else {
                 ENVPTR->ReleaseIntArrayElements(ENVPAR argv, theArgs, 0);
@@ -120,8 +125,10 @@ Java_hdf_hdflib_HDFLibrary_GRselect
     int32 rval;
 
     rval = GRselect((int32)gr_id, (int32) index);
-    if (rval < 0)
+    if (rval < 0) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return (jlong)rval;
 }
@@ -195,13 +202,8 @@ Java_hdf_hdflib_HDFLibrary_GRgetiminfo
     intn     rval;
     jint    *dims;
     jint    *theArgs;
-    jclass   Sjc;
     char    *str;
-    jstring  rstring;
     jboolean isCopy;
-    jboolean bb = 0;
-    jboolean abb = 0;
-    jobject  o;
 
     str = (char *)HDmalloc(MAX_GR_NAME+1);
     if (str == NULL) {
@@ -239,40 +241,47 @@ Java_hdf_hdflib_HDFLibrary_GRgetiminfo
                             (int32 *)&(theArgs[3]));
 
                     if (rval == FAIL) {
-                        abb = JNI_ABORT;
-                        bb = JNI_ABORT;
+                        ENVPTR->ReleaseIntArrayElements(ENVPAR argv, theArgs, JNI_ABORT);
+                        ENVPTR->ReleaseIntArrayElements(ENVPAR dim_sizes, dims, JNI_ABORT);
+                        HDfree(str);
                         CALL_ERROR_CHECK();
+                        return JNI_FALSE;
                     }
                     else {
+                        jstring rstring;
+                        jclass sjc;
+                        jobject o;
+                        jboolean bb;
+
+                        ENVPTR->ReleaseIntArrayElements(ENVPAR argv, theArgs, JNI_ABORT);
+
+                        str[MAX_GR_NAME] = '\0';
+                        /* convert it to java string */
+                        rstring = ENVPTR->NewStringUTF(ENVPAR str);
+
+                        sjc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
+                        if (sjc == NULL) {
+                            ENVPTR->ReleaseIntArrayElements(ENVPAR dim_sizes, dims, JNI_ABORT);
+                            HDfree(str);
+                            return JNI_FALSE;
+                        }
                         o = ENVPTR->GetObjectArrayElement(ENVPAR gr_name, 0);
                         if (o == NULL) {
-                            bb = JNI_ABORT;
-                            CALL_ERROR_CHECK();
-                        }
-                        else {
-                            Sjc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
-                            if (Sjc == NULL) {
-                                bb = JNI_ABORT;
-                                CALL_ERROR_CHECK();
-                            }
-                            else if (ENVPTR->IsInstanceOf(ENVPAR o, Sjc) == JNI_FALSE) {
-                                bb = JNI_ABORT;
-                                CALL_ERROR_CHECK();
-                            }
-                            else {
-                                str[MAX_GR_NAME] = '\0';
-                                rstring = ENVPTR->NewStringUTF(ENVPAR  str);
-                                if (rstring != NULL)
-                                    ENVPTR->SetObjectArrayElement(ENVPAR gr_name, 0, (jobject)rstring);
-                            }
-                            ENVPTR->DeleteLocalRef(ENVPAR o);
+                            ENVPTR->ReleaseIntArrayElements(ENVPAR dim_sizes, dims, JNI_ABORT);
+                            HDfree(str);
+                            return JNI_FALSE;
                         }
-                    }
-                    ENVPTR->ReleaseIntArrayElements(ENVPAR argv, theArgs, abb);
-
+                        bb = ENVPTR->IsInstanceOf(ENVPAR o, sjc);
+                        if (bb == JNI_TRUE)
+                            ENVPTR->SetObjectArrayElement(ENVPAR gr_name, 0, (jobject)rstring);
+                        ENVPTR->DeleteLocalRef(ENVPAR o);
+                        ENVPTR->ReleaseIntArrayElements(ENVPAR dim_sizes, dims, 0);
+                        HDfree(str);
+                        return bb;
+                   }
+                   ENVPTR->ReleaseIntArrayElements(ENVPAR argv, theArgs, JNI_ABORT);
                 } /* end else */
-                ENVPTR->ReleaseIntArrayElements(ENVPAR dim_sizes, dims, bb);
-
+                ENVPTR->ReleaseIntArrayElements(ENVPAR dim_sizes, dims, JNI_ABORT);
             } /* end else */
         } /* end else */
 
@@ -292,7 +301,6 @@ Java_hdf_hdflib_HDFLibrary_GRreadimage
     jint *strd;
     jint *edg;
     jboolean bb;
-    jboolean cbb = 0;
 
     if (data == NULL) {
         h4nullArgument(env, "GRreadimage:  data is NULL");
@@ -337,13 +345,15 @@ Java_hdf_hdflib_HDFLibrary_GRreadimage
                 ENVPTR->ReleaseIntArrayElements(ENVPAR edge, edg, JNI_ABORT);
 
                 if (rval == FAIL) {
-                    cbb = JNI_ABORT;
+                    ENVPTR->ReleaseIntArrayElements(ENVPAR start, strt, JNI_ABORT);
+                    ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR data, arr, JNI_ABORT);
                     CALL_ERROR_CHECK();
+                    return JNI_FALSE;
                 }
             } /* end else */
             ENVPTR->ReleaseIntArrayElements(ENVPAR start, strt, JNI_ABORT);
         }
-        ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR data, arr, cbb);
+        ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR data, arr, 0);
     } /* end else */
     return JNI_TRUE;
 }
@@ -381,8 +391,10 @@ Java_hdf_hdflib_HDFLibrary_GRreqlutil
     intn rval;
 
     rval = GRreqlutil((int32) gr_id, (intn)interlace_mode);
-    if (rval == FAIL)
+    if (rval == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -394,8 +406,10 @@ Java_hdf_hdflib_HDFLibrary_GRreqimageil
     intn rval;
 
     rval = GRreqimageil((int32) gr_id, (intn)interlace_mode);
-    if (rval == FAIL)
+    if (rval == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -454,6 +468,7 @@ Java_hdf_hdflib_HDFLibrary_GRgetlutinfo
             if (rval == FAIL) {
                 ENVPTR->ReleaseIntArrayElements(ENVPAR argv, theArgs, JNI_ABORT);
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
             }
             else {
                 ENVPTR->ReleaseIntArrayElements(ENVPAR argv, theArgs, 0);
@@ -487,6 +502,7 @@ Java_hdf_hdflib_HDFLibrary_GRreadlut
             if (rval == FAIL) {
                 ENVPTR->ReleaseByteArrayElements(ENVPAR pal_data, arr, JNI_ABORT);
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
             }
             else {
                 ENVPTR->ReleaseByteArrayElements(ENVPAR pal_data, arr, 0);
@@ -502,12 +518,8 @@ Java_hdf_hdflib_HDFLibrary_GRattrinfo
 {
     int32 rval;
     char *str;
-    jclass jc;
-    jstring rstring;
     jint *theArgs;
     jboolean bb;
-    jobject o;
-
 
     /* check for out of memory error ... */
     str = (char *)HDmalloc(MAX_GR_NAME+1);
@@ -535,28 +547,38 @@ Java_hdf_hdflib_HDFLibrary_GRattrinfo
 
                 if (rval == FAIL) {
                     ENVPTR->ReleaseIntArrayElements(ENVPAR argv, theArgs, JNI_ABORT);
+                    HDfree(str);
                     CALL_ERROR_CHECK();
+                    return JNI_FALSE;
                 }
                 else {
+                    jstring rstring;
+                    jclass sjc;
+                    jobject o;
+
                     ENVPTR->ReleaseIntArrayElements(ENVPAR argv, theArgs, 0);
-                    if (str != NULL) {
-                        str[MAX_GR_NAME] = '\0';
-                        rstring = ENVPTR->NewStringUTF(ENVPAR  str);
-                        o = ENVPTR->GetObjectArrayElement(ENVPAR name, 0);
-                        if (o == NULL) {
-                            CALL_ERROR_CHECK();
-                        }
-                        jc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
-                        if (jc == NULL) {
-                            CALL_ERROR_CHECK();
-                        }
-                        bb = ENVPTR->IsInstanceOf(ENVPAR o, jc);
-                        if (bb == JNI_FALSE) {
-                            CALL_ERROR_CHECK();
-                        }
-                        ENVPTR->SetObjectArrayElement(ENVPAR name, 0, (jobject)rstring);
-                        ENVPTR->DeleteLocalRef(ENVPAR o);
+
+                    str[MAX_GR_NAME] = '\0';
+                    /* convert it to java string */
+                    rstring = ENVPTR->NewStringUTF(ENVPAR str);
+
+                    sjc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
+                    if (sjc == NULL) {
+                        HDfree(str);
+                        return JNI_FALSE;
+                    }
+                    o = ENVPTR->GetObjectArrayElement(ENVPAR name, 0);
+                    if (o == NULL) {
+                        HDfree(str);
+                        return JNI_FALSE;
                     }
+                    bb = ENVPTR->IsInstanceOf(ENVPAR o, sjc);
+                    if (bb == JNI_TRUE)
+                        ENVPTR->SetObjectArrayElement(ENVPAR name, 0, (jobject)rstring);
+                    ENVPTR->DeleteLocalRef(ENVPAR o);
+
+                    HDfree(str);
+                    return bb;
                 }
             } /* end else */
         } /* end else */
@@ -586,6 +608,7 @@ Java_hdf_hdflib_HDFLibrary_GRgetattr
             if (rval == FAIL) {
                 ENVPTR->ReleaseByteArrayElements(ENVPAR values, arr, JNI_ABORT);
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
             }
             else {
                 ENVPTR->ReleaseByteArrayElements(ENVPAR values, arr, 0);
@@ -680,8 +703,10 @@ Java_hdf_hdflib_HDFLibrary_GRsetattr__JLjava_lang_String_2JILjava_lang_String_2
 
         UNPIN_JAVA_STRING_TWO(attr_name, str, values, val);
 
-        if (rval == FAIL)
+        if (rval == FAIL) {
             CALL_ERROR_CHECK();
+            return JNI_FALSE;
+        }
     }
 
     return JNI_TRUE;
@@ -711,8 +736,11 @@ Java_hdf_hdflib_HDFLibrary_GRsetattr__JLjava_lang_String_2JI_3B
 
                 ENVPTR->ReleaseByteArrayElements(ENVPAR values, arr, JNI_ABORT);
 
-                if (rval == FAIL)
+                if (rval == FAIL) {
                     CALL_ERROR_CHECK();
+                    UNPIN_JAVA_STRING(attr_name, str);
+                    return JNI_FALSE;
+                }
             } /* end else */
             UNPIN_JAVA_STRING(attr_name, str);
         }
@@ -735,8 +763,10 @@ Java_hdf_hdflib_HDFLibrary_GRsetcompress
         if (getNewCompInfo(env, c_info, &cinf)) {
             rval = GRsetcompress((int32)ri_id, (comp_coder_t)comp_type, (comp_info *)&cinf);
 
-            if (rval == FAIL)
+            if (rval == FAIL) {
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
+            }
         } /* end if */
         else {
             h4JNIFatalError(env, "GRsetcompress:  c_info not initialized");
@@ -760,8 +790,10 @@ Java_hdf_hdflib_HDFLibrary_GRgetcompress
         rval = GRgetcompress((int32)ri_id, (comp_coder_t *)&coder, (comp_info *)&cinf);
 
         if (setNewCompInfo(env, c_info, coder, &cinf)) {
-            if (rval == FAIL)
+            if (rval == FAIL) {
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
+            }
         } /* end if */
         else {
             h4JNIFatalError(env, "GRgetcompress:  c_info not created");
@@ -786,8 +818,10 @@ Java_hdf_hdflib_HDFLibrary_GRgetcompinfo
         rval = GRgetcompinfo((int32)ri_id, (comp_coder_t *)&coder, (comp_info *)&cinf);
 
         if (setNewCompInfo(env, c_info, coder, &cinf)) {
-            if (rval == FAIL)
+            if (rval == FAIL) {
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
+            }
         } /* end if */
         else {
             h4JNIFatalError(env, "GRgetcompinfo:  c_info not created");
@@ -811,8 +845,10 @@ Java_hdf_hdflib_HDFLibrary_GRsetchunk
         if (getChunkInfo(env, chunk_def, &c_def)) {
             rval = SDsetchunk ((int32)sdsid, c_def, (int32)flags);
 
-            if (rval == FAIL)
+            if (rval == FAIL) {
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
+            }
         } /* end if */
         else {
             h4JNIFatalError(env, "GRsetchunk:  chunk_def not initialized");
@@ -847,8 +883,10 @@ Java_hdf_hdflib_HDFLibrary_GRsetexternalfile
 
         UNPIN_JAVA_STRING(filename, str);
 
-        if (rval == FAIL)
+        if (rval == FAIL) {
             CALL_ERROR_CHECK();
+            return JNI_FALSE;
+        }
     }
 
     return JNI_TRUE;
@@ -910,8 +948,13 @@ Java_hdf_hdflib_HDFLibrary_GRwriteimage(JNIEnv *env, jclass cls, jlong ri_id,
                         ENVPTR->ReleaseIntArrayElements(ENVPAR stride, strd, JNI_ABORT);
                     }
 
-                    if (rval == FAIL)
+                    if (rval == FAIL) {
+                        ENVPTR->ReleaseIntArrayElements(ENVPAR edge, edg, JNI_ABORT);
+                        ENVPTR->ReleaseIntArrayElements(ENVPAR start, strt, JNI_ABORT);
+                        ENVPTR->ReleaseByteArrayElements(ENVPAR data, arr, JNI_ABORT);
                         CALL_ERROR_CHECK();
+                        return JNI_FALSE;
+                    }
 
                     ENVPTR->ReleaseIntArrayElements(ENVPAR edge, edg, JNI_ABORT);
                 } /* end else */
@@ -945,8 +988,10 @@ Java_hdf_hdflib_HDFLibrary_GRwritelut
 
             ENVPTR->ReleaseByteArrayElements(ENVPAR pal_data, arr, JNI_ABORT);
 
-            if (rval == FAIL)
+            if (rval == FAIL) {
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
+            }
         } /* end else */
     } /* end else */
 
@@ -961,7 +1006,6 @@ Java_hdf_hdflib_HDFLibrary_GRreadchunk
     jbyte *arr;
     jint *org;
     jboolean bb;
-    jboolean cbb = 0;
 
     if (dat == NULL) {
         h4nullArgument(env, "GRreadchunk:  dat is NULL");
@@ -987,11 +1031,12 @@ Java_hdf_hdflib_HDFLibrary_GRreadchunk
 
                 ENVPTR->ReleaseIntArrayElements(ENVPAR origin, org, JNI_ABORT);
                 if (rval == FAIL) {
-                    cbb = JNI_ABORT;
+                    ENVPTR->ReleaseByteArrayElements(ENVPAR dat, arr, JNI_ABORT);
                     CALL_ERROR_CHECK();
+                    return JNI_FALSE;
                 }
             } /* end else */
-            ENVPTR->ReleaseByteArrayElements(ENVPAR dat, arr, cbb);
+            ENVPTR->ReleaseByteArrayElements(ENVPAR dat, arr, 0);
         } /* end else */
     } /* end else */
     return JNI_TRUE;
@@ -1030,8 +1075,11 @@ Java_hdf_hdflib_HDFLibrary_GRwritechunk
 
                 ENVPTR->ReleaseIntArrayElements(ENVPAR origin, org, JNI_ABORT);
 
-                if (rval == FAIL)
+                if (rval == FAIL) {
+                    ENVPTR->ReleaseByteArrayElements(ENVPAR dat, arr, JNI_ABORT);
                     CALL_ERROR_CHECK();
+                    return JNI_FALSE;
+                }
             } /* end else */
             ENVPTR->ReleaseByteArrayElements(ENVPAR dat, arr, JNI_ABORT);
         } /* end else */
diff --git a/java/src/jni/hdfhxImp.c b/java/src/jni/hdfhxImp.c
index 3fe36787..898d5f63 100644
--- a/java/src/jni/hdfhxImp.c
+++ b/java/src/jni/hdfhxImp.c
@@ -8,7 +8,7 @@
  * notice, including terms governing use, modification, and redistribution,  *
  * is contained in the file, COPYING.  COPYING can be found at the root of   *
  * the source code distribution tree. You can also access it online  at      *
- * http://www.hdfgroup.org/products/licenses.html.  If you do not have       *
+ * http://support.hdfgroup.org/products/licenses.html.  If you do not have   *
  * access to the file, you may request a copy from help@hdfgroup.org.        *
  ****************************************************************************/
 /*
diff --git a/java/src/jni/hdfnativeImp.c b/java/src/jni/hdfnativeImp.c
index 657c84c3..a86f9288 100644
--- a/java/src/jni/hdfnativeImp.c
+++ b/java/src/jni/hdfnativeImp.c
@@ -8,7 +8,7 @@
  * notice, including terms governing use, modification, and redistribution,  *
  * is contained in the file, COPYING.  COPYING can be found at the root of   *
  * the source code distribution tree. You can also access it online  at      *
- * http://www.hdfgroup.org/products/licenses.html.  If you do not have       *
+ * http://support.hdfgroup.org/products/licenses.html.  If you do not have   *
  * access to the file, you may request a copy from help@hdfgroup.org.        *
  ****************************************************************************/
 /*
diff --git a/java/src/jni/hdfr24Imp.c b/java/src/jni/hdfr24Imp.c
index 460fee2f..b3f282bc 100644
--- a/java/src/jni/hdfr24Imp.c
+++ b/java/src/jni/hdfr24Imp.c
@@ -8,7 +8,7 @@
  * notice, including terms governing use, modification, and redistribution,  *
  * is contained in the file, COPYING.  COPYING can be found at the root of   *
  * the source code distribution tree. You can also access it online  at      *
- * http://www.hdfgroup.org/products/licenses.html.  If you do not have       *
+ * http://support.hdfgroup.org/products/licenses.html.  If you do not have   *
  * access to the file, you may request a copy from help@hdfgroup.org.        *
  ****************************************************************************/
 /*
@@ -43,8 +43,6 @@ Java_hdf_hdflib_HDFLibrary_DF24getdims
     jint *theArgs;
     jboolean bb;
 
-    copyMode = JNI_ABORT;
-
     if (argv == NULL) {
         h4nullArgument(env, "DF24getdims: output array argv is NULL");
     } /* end if */
@@ -52,7 +50,7 @@ Java_hdf_hdflib_HDFLibrary_DF24getdims
         h4badArgument(env, "DF24getdims: output array argv < order 3");
     } /* end else if */
     else {
-        theArgs = ENVPTR->GetIntArrayElements(ENVPAR argv,&bb);
+        theArgs = ENVPTR->GetIntArrayElements(ENVPAR argv, &bb);
 
         if (theArgs == NULL) {
             h4JNIFatalError(env, "DF24getdims: argv not pinned");
@@ -68,13 +66,12 @@ Java_hdf_hdflib_HDFLibrary_DF24getdims
                 UNPIN_JAVA_STRING(filename, hdf_file);
 
                 if (rval == FAIL) {
+                    ENVPTR->ReleaseIntArrayElements(ENVPAR argv, theArgs, JNI_ABORT);
                     CALL_ERROR_CHECK();
-                } else {
-                    copyMode = 0;
+                    return JNI_FALSE;
                 }
             }
-
-            ENVPTR->ReleaseIntArrayElements(ENVPAR argv,theArgs,copyMode);
+            ENVPTR->ReleaseIntArrayElements(ENVPAR argv, theArgs, 0);
         }/* end else */
     } /* end else */
 
@@ -91,8 +88,6 @@ Java_hdf_hdflib_HDFLibrary_DF24getimage
     jbyte *dat;
     jboolean bb;
 
-    copyMode = JNI_ABORT;
-
     if (image == NULL) {
         h4nullArgument(env, "DF24getimage: output array image is NULL");
     } /* end if */
@@ -100,7 +95,7 @@ Java_hdf_hdflib_HDFLibrary_DF24getimage
         h4badArgument(env, "DF24getimage: output array image invalid size");
     } /* end else if */
     else {
-        dat = (jbyte *)ENVPTR->GetPrimitiveArrayCritical(ENVPAR image,&bb);
+        dat = (jbyte *)ENVPTR->GetPrimitiveArrayCritical(ENVPAR image, &bb);
 
         if (dat == NULL) {
             h4JNIFatalError(env, "DF24getimage: image not pinned");
@@ -114,13 +109,12 @@ Java_hdf_hdflib_HDFLibrary_DF24getimage
                 UNPIN_JAVA_STRING(filename, hdf_file);
 
                 if (rval == FAIL) {
+                    ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR image, dat, JNI_ABORT);
                     CALL_ERROR_CHECK();
-                } else {
-                    copyMode = 0;
+                    return JNI_FALSE;
                 }
             }
-
-            ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR image,dat,copyMode);
+            ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR image, dat, 0);
         } /* end else */
     } /* end else */
 
@@ -150,6 +144,7 @@ Java_hdf_hdflib_HDFLibrary_DF24readref
 
         if (retVal == FAIL) {
             CALL_ERROR_CHECK();
+            return JNI_FALSE;
         }
     }
 
@@ -165,6 +160,7 @@ Java_hdf_hdflib_HDFLibrary_DF24restart
 
     if (retVal) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
     }
 
     return JNI_TRUE;
@@ -199,8 +195,10 @@ Java_hdf_hdflib_HDFLibrary_DF24reqil
 
     retVal = DF24reqil((intn)interlace);
 
-    if (retVal == FAIL)
+    if (retVal == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -215,8 +213,6 @@ Java_hdf_hdflib_HDFLibrary_DF24addimage
     jbyte *dat;
     jboolean bb;
 
-    copyMode = JNI_ABORT;
-
     if (image == NULL) {
         h4nullArgument(env, "DF24addimage: image is NULL");
     } /* end if */
@@ -224,7 +220,7 @@ Java_hdf_hdflib_HDFLibrary_DF24addimage
         h4badArgument(env, "DF24addimage: no image data");
     } /* end else if */
     else {
-        dat = ENVPTR->GetByteArrayElements(ENVPAR image,&bb);
+        dat = ENVPTR->GetByteArrayElements(ENVPAR image, &bb);
 
         if (dat == NULL) {
             h4JNIFatalError(env, "DF24addimage: image not pinned");
@@ -238,13 +234,12 @@ Java_hdf_hdflib_HDFLibrary_DF24addimage
                 UNPIN_JAVA_STRING(filename, f);
 
                 if (rval == FAIL) {
+                    ENVPTR->ReleaseByteArrayElements(ENVPAR image, dat, JNI_ABORT);
                     CALL_ERROR_CHECK();
-                } else {
-                    copyMode = 0;
+                    return JNI_FALSE;
                 }
             }
-
-            ENVPTR->ReleaseByteArrayElements(ENVPAR image,dat,copyMode);
+            ENVPTR->ReleaseByteArrayElements(ENVPAR image, dat, 0);
         } /* end else */
     } /* end else */
 
@@ -261,8 +256,6 @@ Java_hdf_hdflib_HDFLibrary_DF24putimage
     jbyte *dat;
     jboolean bb;
 
-    copyMode = JNI_ABORT;
-
     if (image == NULL) {
         h4nullArgument(env, "DF24putimage: image is NULL");
     } /* end if */
@@ -270,7 +263,7 @@ Java_hdf_hdflib_HDFLibrary_DF24putimage
         h4badArgument(env, "DF24putimage: no image data");
     } /* end else if */
     else {
-        dat = ENVPTR->GetByteArrayElements(ENVPAR image,&bb);
+        dat = ENVPTR->GetByteArrayElements(ENVPAR image, &bb);
 
         if (dat == NULL) {
             h4JNIFatalError(env, "DF24putimage: image not pinned");
@@ -284,13 +277,12 @@ Java_hdf_hdflib_HDFLibrary_DF24putimage
                 UNPIN_JAVA_STRING(filename, f);
 
                 if (rval == FAIL) {
+                    ENVPTR->ReleaseByteArrayElements(ENVPAR image, dat, JNI_ABORT);
                     CALL_ERROR_CHECK();
-                } else {
-                    copyMode = 0;
+                    return JNI_FALSE;
                 }
             }
-
-            ENVPTR->ReleaseByteArrayElements(ENVPAR image,dat,copyMode);
+            ENVPTR->ReleaseByteArrayElements(ENVPAR image, dat, 0);
         }
     } /* end else */
 
@@ -320,6 +312,7 @@ Java_hdf_hdflib_HDFLibrary_DF24setcompress
 
             if (rval == FAIL) {
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
             }
         }
     } /* end else */
@@ -337,6 +330,7 @@ Java_hdf_hdflib_HDFLibrary_DF24setdims
 
     if (rval == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
     }
 
     return JNI_TRUE;
@@ -350,6 +344,7 @@ Java_hdf_hdflib_HDFLibrary_DF24setil
     rval = DF24setil((intn) il);
     if (rval == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
     }
 
     return JNI_TRUE;
diff --git a/java/src/jni/hdfr8Imp.c b/java/src/jni/hdfr8Imp.c
index efe7ee59..3d3b27db 100644
--- a/java/src/jni/hdfr8Imp.c
+++ b/java/src/jni/hdfr8Imp.c
@@ -8,7 +8,7 @@
  * notice, including terms governing use, modification, and redistribution,  *
  * is contained in the file, COPYING.  COPYING can be found at the root of   *
  * the source code distribution tree. You can also access it online  at      *
- * http://www.hdfgroup.org/products/licenses.html.  If you do not have       *
+ * http://support.hdfgroup.org/products/licenses.html.  If you do not have   *
  * access to the file, you may request a copy from help@hdfgroup.org.        *
  ****************************************************************************/
 /*
@@ -44,8 +44,6 @@ Java_hdf_hdflib_HDFLibrary_DFR8getdims
     jboolean *theB;
     jboolean bb;
 
-    copyMode = JNI_ABORT;
-
     if (argv == NULL) {
         h4nullArgument(env, "DFR8getdims: output array argv is NULL");
     } /* end if */
@@ -53,7 +51,7 @@ Java_hdf_hdflib_HDFLibrary_DFR8getdims
         h4badArgument(env, "DFR8getdims: argv output array < order 2");
     } /* end else if */
     else {
-        theArgs = ENVPTR->GetIntArrayElements(ENVPAR argv,&bb);
+        theArgs = ENVPTR->GetIntArrayElements(ENVPAR argv, &bb);
 
         if (theArgs == NULL) {
             h4JNIFatalError(env, "DFR8getdims: argv not pinned");
@@ -66,7 +64,7 @@ Java_hdf_hdflib_HDFLibrary_DFR8getdims
                 h4badArgument(env, "DFR8getdims: output array isp < order 1");
             } /* end else if */
             else {
-                theB = ENVPTR->GetBooleanArrayElements(ENVPAR isp,&bb);
+                theB = ENVPTR->GetBooleanArrayElements(ENVPAR isp, &bb);
 
                 if (theB == NULL) {
                     h4JNIFatalError(env, "DFR8getdims: isp not pinned");
@@ -83,8 +81,10 @@ Java_hdf_hdflib_HDFLibrary_DFR8getdims
 
                         if (rval == FAIL) {
                             theB[0] = JNI_FALSE;
-
+                            ENVPTR->ReleaseBooleanArrayElements(ENVPAR isp, theB, JNI_ABORT);
+                            ENVPTR->ReleaseIntArrayElements(ENVPAR argv, theArgs, JNI_ABORT);
                             CALL_ERROR_CHECK();
+                            return JNI_FALSE;
                         }
                         else {
                             copyMode = 0;
@@ -98,11 +98,11 @@ Java_hdf_hdflib_HDFLibrary_DFR8getdims
                         } /* end else */
                     }
 
-                    ENVPTR->ReleaseBooleanArrayElements(ENVPAR isp,theB,copyMode);
+                    ENVPTR->ReleaseBooleanArrayElements(ENVPAR isp, theB, 0);
                 } /* end else */
             } /* end else */
 
-            ENVPTR->ReleaseIntArrayElements(ENVPAR argv,theArgs,copyMode);
+            ENVPTR->ReleaseIntArrayElements(ENVPAR argv, theArgs, 0);
         } /* end else */
     } /* end else */
 
@@ -120,13 +120,11 @@ Java_hdf_hdflib_HDFLibrary_DFR8getimage
     jbyte *p;
     jboolean bb;
 
-    copyMode = JNI_ABORT;
-
     if (image == NULL) {
         h4nullArgument(env, "DFR8getimage: output array image is NULL");
     } /* end if */
     else {
-        dat = (jbyte *)ENVPTR->GetPrimitiveArrayCritical(ENVPAR image,&bb);
+        dat = (jbyte *)ENVPTR->GetPrimitiveArrayCritical(ENVPAR image, &bb);
 
         if (dat == NULL) {
             h4JNIFatalError(env, "DFR8getimage: image not pinned");
@@ -148,16 +146,16 @@ Java_hdf_hdflib_HDFLibrary_DFR8getimage
                 UNPIN_JAVA_STRING(filename, hdf_file);
 
                 if (rval == FAIL) {
+                    ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR image, dat, JNI_ABORT);
+                    if (pallete != NULL)
+                        ENVPTR->ReleaseByteArrayElements(ENVPAR pallete, p, JNI_ABORT);
                     CALL_ERROR_CHECK();
+                    return JNI_FALSE;
                 }
-                else {
-                    copyMode = 0;
-                } /* end else */
 
-                ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR image,dat,copyMode);
-                if (pallete != NULL) {
-                    ENVPTR->ReleaseByteArrayElements(ENVPAR pallete,p,copyMode);
-                }
+                ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR image, dat, 0);
+                if (pallete != NULL)
+                    ENVPTR->ReleaseByteArrayElements(ENVPAR pallete, p, 0);
             }
         } /* end else */
     } /* end else */
@@ -188,6 +186,7 @@ Java_hdf_hdflib_HDFLibrary_DFR8readref
 
         if (retVal == FAIL) {
             CALL_ERROR_CHECK();
+            return JNI_FALSE;
         }
     }
 
@@ -203,6 +202,7 @@ Java_hdf_hdflib_HDFLibrary_DFR8restart
 
     if (retVal) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
     }
 
     return JNI_TRUE;
@@ -227,7 +227,7 @@ Java_hdf_hdflib_HDFLibrary_DFR8nimages
         }
     }
 
-    return(retVal);
+    return retVal;
 }
 
 JNIEXPORT jboolean JNICALL
@@ -243,7 +243,7 @@ Java_hdf_hdflib_HDFLibrary_DFR8addimage
         h4nullArgument(env, "DFR8addimage: image is NULL");
     } /* end if */
     else {
-        dat = ENVPTR->GetByteArrayElements(ENVPAR image,&bb);
+        dat = ENVPTR->GetByteArrayElements(ENVPAR image, &bb);
 
         if (dat == NULL) {
             h4JNIFatalError(env, "DFR8addimage: image not pinned");
@@ -258,11 +258,12 @@ Java_hdf_hdflib_HDFLibrary_DFR8addimage
                 UNPIN_JAVA_STRING(filename, f);
 
                 if (rval == FAIL) {
+                    ENVPTR->ReleaseByteArrayElements(ENVPAR image, dat, JNI_ABORT);
                     CALL_ERROR_CHECK();
+                    return JNI_FALSE;
                 }
             }
-
-            ENVPTR->ReleaseByteArrayElements(ENVPAR image,dat,JNI_ABORT);
+            ENVPTR->ReleaseByteArrayElements(ENVPAR image, dat, JNI_ABORT);
         } /* end else */
     } /* end else */
 
@@ -282,7 +283,7 @@ Java_hdf_hdflib_HDFLibrary_DFR8putimage
         h4nullArgument(env, "DFR8putimage: image is NULL");
     } /* end if */
     else {
-        dat = ENVPTR->GetByteArrayElements(ENVPAR image,&bb);
+        dat = ENVPTR->GetByteArrayElements(ENVPAR image, &bb);
 
         if (dat == NULL) {
             h4JNIFatalError(env, "DFR8putimage: image not pinned");
@@ -297,11 +298,12 @@ Java_hdf_hdflib_HDFLibrary_DFR8putimage
                 UNPIN_JAVA_STRING(filename, f);
 
                 if (rval == FAIL) {
+                    ENVPTR->ReleaseByteArrayElements(ENVPAR image, dat, JNI_ABORT);
                     CALL_ERROR_CHECK();
+                    return JNI_FALSE;
                 }
             }
-
-            ENVPTR->ReleaseByteArrayElements(ENVPAR image,dat,JNI_ABORT);
+            ENVPTR->ReleaseByteArrayElements(ENVPAR image, dat, JNI_ABORT);
         } /* end else */
     } /* end else */
 
@@ -326,8 +328,10 @@ Java_hdf_hdflib_HDFLibrary_DFR8setcompress
             /* fill in cinf depending on the value of 'type' */
             rval = DFR8setcompress((int32) type, (comp_info *)&cinf);
 
-            if (rval == FAIL)
+            if (rval == FAIL) {
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
+            }
         } /* end else */
     } /* end else */
 
@@ -361,6 +365,7 @@ Java_hdf_hdflib_HDFLibrary_DFR8getpalref
             if (rval == FAIL) {
                 ENVPTR->ReleaseShortArrayElements(ENVPAR palref,theArgs,JNI_ABORT);
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
             }
             else {
                 ENVPTR->ReleaseShortArrayElements(ENVPAR palref,theArgs,0);
@@ -394,8 +399,10 @@ Java_hdf_hdflib_HDFLibrary_DFR8setpalette
         ENVPTR->ReleaseByteArrayElements(ENVPAR palette,p,JNI_ABORT);
     }
 
-    if (rval == FAIL)
+    if (rval == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -414,8 +421,10 @@ Java_hdf_hdflib_HDFLibrary_DFR8writeref
 
         UNPIN_JAVA_STRING(filename, filePtr);
 
-        if (retVal == FAIL)
+        if (retVal == FAIL) {
             CALL_ERROR_CHECK();
+            return JNI_FALSE;
+        }
     }
 
     return JNI_TRUE;
diff --git a/java/src/jni/hdfsdsImp.c b/java/src/jni/hdfsdsImp.c
index 4537da4d..49538b91 100644
--- a/java/src/jni/hdfsdsImp.c
+++ b/java/src/jni/hdfsdsImp.c
@@ -8,7 +8,7 @@
  * notice, including terms governing use, modification, and redistribution,  *
  * is contained in the file, COPYING.  COPYING can be found at the root of   *
  * the source code distribution tree. You can also access it online  at      *
- * http://www.hdfgroup.org/products/licenses.html.  If you do not have       *
+ * http://support.hdfgroup.org/products/licenses.html.  If you do not have   *
  * access to the file, you may request a copy from help@hdfgroup.org.        *
  ****************************************************************************/
 /*
@@ -61,8 +61,10 @@ Java_hdf_hdflib_HDFLibrary_SDend
 
     rval = SDend(id);
 
-    if (rval == FAIL)
+    if (rval == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -93,6 +95,7 @@ Java_hdf_hdflib_HDFLibrary_SDfileinfo
             if (rval == FAIL) {
                 ENVPTR->ReleaseIntArrayElements(ENVPAR argv, theArgs, JNI_ABORT);
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
             }
             else {
                 ENVPTR->ReleaseIntArrayElements(ENVPAR argv, theArgs, 0);
@@ -187,47 +190,56 @@ Java_hdf_hdflib_HDFLibrary_SDgetinfo
                             &(theArgs[1]), &(theArgs[2]));
 
                     if (rval == FAIL) {
-                        abb = JNI_ABORT;
-                        bb = JNI_ABORT;
+                        ENVPTR->ReleaseIntArrayElements(ENVPAR argv, theArgs, JNI_ABORT);
+                        ENVPTR->ReleaseIntArrayElements(ENVPAR dimsizes, dims, JNI_ABORT);
+                        HDfree(cname);
                         CALL_ERROR_CHECK();
+                        return JNI_FALSE;
                     }
                     else {
+                        jstring rstring;
+                        jclass sjc;
+                        jobject o;
+                        jboolean bb;
+
                         cname[MAX_NC_NAME] = '\0';
-                        str = ENVPTR->NewStringUTF(ENVPAR  cname);
-                        if (str != NULL) {
-                            o = ENVPTR->GetObjectArrayElement(ENVPAR name, 0);
-                            if (o == NULL) {
-                                bb = JNI_ABORT;
-                                CALL_ERROR_CHECK();
-                            }
-                            else {
-                                jc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
-                                if (jc == NULL) {
-                                    bb = JNI_ABORT;
-                                    CALL_ERROR_CHECK();
-                                }
-                                else {
-                                    if (ENVPTR->IsInstanceOf(ENVPAR o, jc) == JNI_FALSE) {
-                                        bb = JNI_ABORT;
-                                        CALL_ERROR_CHECK();
-                                    }
-                                    ENVPTR->SetObjectArrayElement(ENVPAR name, 0, (jobject)str);
-                                }
-                                ENVPTR->DeleteLocalRef(ENVPAR o);
-                            }
+
+                        /* convert it to java string */
+                        rstring = ENVPTR->NewStringUTF(ENVPAR cname);
+
+                        sjc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
+                        if (sjc == NULL) {
+                            ENVPTR->ReleaseIntArrayElements(ENVPAR argv, theArgs, JNI_ABORT);
+                            ENVPTR->ReleaseIntArrayElements(ENVPAR dimsizes, dims, JNI_ABORT);
+                            HDfree(cname);
+                            return JNI_FALSE;
                         }
-                    }
-                    ENVPTR->ReleaseIntArrayElements(ENVPAR argv, theArgs, abb);
+                        o = ENVPTR->GetObjectArrayElement(ENVPAR name, 0);
+                        if (o == NULL) {
+                            ENVPTR->ReleaseIntArrayElements(ENVPAR argv, theArgs, JNI_ABORT);
+                            ENVPTR->ReleaseIntArrayElements(ENVPAR dimsizes, dims, JNI_ABORT);
+                            HDfree(cname);
+                            return JNI_FALSE;
+                        }
+                        bb = ENVPTR->IsInstanceOf(ENVPAR o, sjc);
+                        if (bb == JNI_TRUE)
+                            ENVPTR->SetObjectArrayElement(ENVPAR name, 0, (jobject)rstring);
+                        ENVPTR->DeleteLocalRef(ENVPAR o);
 
+                        ENVPTR->ReleaseIntArrayElements(ENVPAR argv, theArgs, 0);
+                        ENVPTR->ReleaseIntArrayElements(ENVPAR dimsizes, dims, 0);
+                        HDfree(cname);
+                        return bb;
+                    }
+                    ENVPTR->ReleaseIntArrayElements(ENVPAR argv, theArgs, JNI_ABORT);
                 } /* end else */
-                ENVPTR->ReleaseIntArrayElements(ENVPAR dimsizes, dims, bb);
-
+                ENVPTR->ReleaseIntArrayElements(ENVPAR dimsizes, dims, JNI_ABORT);
             } /* end else */
         } /* end else */
 
         HDfree(cname);
     }
-    return JNI_TRUE;
+    return JNI_FALSE;
 }
 
 JNIEXPORT jboolean JNICALL
@@ -240,7 +252,6 @@ Java_hdf_hdflib_HDFLibrary_SDreaddata
     int32 *cnt;
     jbyte *d;
     jboolean bb;
-    jboolean cbb = 0;
     int32 id = (int32)sdsid;
 
     if (data == NULL) {
@@ -279,13 +290,15 @@ Java_hdf_hdflib_HDFLibrary_SDreaddata
                 ENVPTR->ReleaseIntArrayElements(ENVPAR count, cnt, JNI_ABORT);
 
                 if (rval == FAIL) {
-                    cbb = JNI_ABORT;
+                    ENVPTR->ReleaseIntArrayElements(ENVPAR start, strt, JNI_ABORT);
+                    ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR data, d, JNI_ABORT);
                     CALL_ERROR_CHECK();
+                    return JNI_FALSE;
                 }
             } /* end else */
             ENVPTR->ReleaseIntArrayElements(ENVPAR start, strt, JNI_ABORT);
         }
-        ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR data, d, cbb);
+        ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR data, d, 0);
     } /* end else */
     return JNI_TRUE;
 }
@@ -312,7 +325,6 @@ Java_hdf_hdflib_HDFLibrary_SDreaddata_1short
     int32 *cnt;
     jshort *d;
     jboolean bb;
-    jboolean cbb = 0;
     int32 id = (int32)sdsid;
 
     if (data == NULL) {
@@ -351,13 +363,15 @@ Java_hdf_hdflib_HDFLibrary_SDreaddata_1short
                 ENVPTR->ReleaseIntArrayElements(ENVPAR count, cnt, JNI_ABORT);
 
                 if (rval == FAIL) {
-                    cbb = JNI_ABORT;
+                    ENVPTR->ReleaseIntArrayElements(ENVPAR start, strt, JNI_ABORT);
+                    ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR data, d, JNI_ABORT);
                     CALL_ERROR_CHECK();
+                    return JNI_FALSE;
                 }
             } /* end else */
             ENVPTR->ReleaseIntArrayElements(ENVPAR start, strt, JNI_ABORT);
         }
-        ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR data, d, cbb);
+        ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR data, d, 0);
     } /* end else */
     return JNI_TRUE;
 }
@@ -372,7 +386,6 @@ Java_hdf_hdflib_HDFLibrary_SDreaddata_1int
     int32 *cnt;
     jint *d;
     jboolean bb;
-    jboolean cbb = 0;
     int32 id = (int32)sdsid;
 
     if (data == NULL) {
@@ -411,13 +424,15 @@ Java_hdf_hdflib_HDFLibrary_SDreaddata_1int
                 ENVPTR->ReleaseIntArrayElements(ENVPAR count, cnt, JNI_ABORT);
 
                 if (rval == FAIL) {
-                    cbb = JNI_ABORT;
+                    ENVPTR->ReleaseIntArrayElements(ENVPAR start, strt, JNI_ABORT);
+                    ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR data, d, JNI_ABORT);
                     CALL_ERROR_CHECK();
+                    return JNI_FALSE;
                 }
             } /* end else */
             ENVPTR->ReleaseIntArrayElements(ENVPAR start, strt, JNI_ABORT);
         }
-        ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR data, d, cbb);
+        ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR data, d, 0);
     } /* end else */
     return JNI_TRUE;
 }
@@ -432,7 +447,6 @@ Java_hdf_hdflib_HDFLibrary_SDreaddata_1long
     int32 *cnt;
     jlong *d;
     jboolean bb;
-    jboolean cbb = 0;
     int32 id = (int32)sdsid;
 
     if (data == NULL) {
@@ -471,13 +485,15 @@ Java_hdf_hdflib_HDFLibrary_SDreaddata_1long
                 ENVPTR->ReleaseIntArrayElements(ENVPAR count, cnt, JNI_ABORT);
 
                 if (rval == FAIL) {
-                    cbb = JNI_ABORT;
+                    ENVPTR->ReleaseIntArrayElements(ENVPAR start, strt, JNI_ABORT);
+                    ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR data, d, JNI_ABORT);
                     CALL_ERROR_CHECK();
+                    return JNI_FALSE;
                 }
             } /* end else */
             ENVPTR->ReleaseIntArrayElements(ENVPAR start, strt, JNI_ABORT);
         }
-        ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR data, d, cbb);
+        ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR data, d, 0);
     } /* end else */
     return JNI_TRUE;
 }
@@ -492,7 +508,6 @@ Java_hdf_hdflib_HDFLibrary_SDreaddata_1float
     int32 *cnt;
     jfloat *d;
     jboolean bb;
-    jboolean cbb = 0;
     int32 id = (int32)sdsid;
 
     if (data == NULL) {
@@ -531,13 +546,15 @@ Java_hdf_hdflib_HDFLibrary_SDreaddata_1float
                 ENVPTR->ReleaseIntArrayElements(ENVPAR count, cnt, JNI_ABORT);
 
                 if (rval == FAIL) {
-                    cbb = JNI_ABORT;
+                    ENVPTR->ReleaseIntArrayElements(ENVPAR start, strt, JNI_ABORT);
+                    ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR data, d, JNI_ABORT);
                     CALL_ERROR_CHECK();
+                    return JNI_FALSE;
                 }
             } /* end else */
             ENVPTR->ReleaseIntArrayElements(ENVPAR start, strt, JNI_ABORT);
         }
-        ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR data, d, cbb);
+        ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR data, d, 0);
     } /* end else */
     return JNI_TRUE;
 }
@@ -552,7 +569,6 @@ Java_hdf_hdflib_HDFLibrary_SDreaddata_1double
     int32 *cnt;
     jdouble *d;
     jboolean bb;
-    jboolean cbb = 0;
     int32 id = (int32)sdsid;
 
     if (data == NULL) {
@@ -591,13 +607,15 @@ Java_hdf_hdflib_HDFLibrary_SDreaddata_1double
                 ENVPTR->ReleaseIntArrayElements(ENVPAR count, cnt, JNI_ABORT);
 
                 if (rval == FAIL) {
-                    cbb = JNI_ABORT;
+                    ENVPTR->ReleaseIntArrayElements(ENVPAR start, strt, JNI_ABORT);
+                    ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR data, d, JNI_ABORT);
                     CALL_ERROR_CHECK();
+                    return JNI_FALSE;
                 }
             } /* end else */
             ENVPTR->ReleaseIntArrayElements(ENVPAR start, strt, JNI_ABORT);
         }
-        ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR data, d, cbb);
+        ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR data, d, 0);
     } /* end else */
     return JNI_TRUE;
 }
@@ -610,8 +628,10 @@ Java_hdf_hdflib_HDFLibrary_SDendaccess
     int32 id = (int32)sdsid;
 
     rval = SDendaccess(id);
-    if (rval < 0)
+    if (rval < 0) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -624,8 +644,9 @@ Java_hdf_hdflib_HDFLibrary_SDgetdimid
     int32 id = (int32)sdsid;
 
     rval = SDgetdimid(id, (intn)index);
-    if (rval < 0)
+    if (rval < 0) {
         CALL_ERROR_CHECK();
+    }
 
     return (jlong)rval;
 }
@@ -635,11 +656,8 @@ Java_hdf_hdflib_HDFLibrary_SDdiminfo
 (JNIEnv *env, jclass clss, jlong dimid, jobjectArray dimname, jintArray argv)
 {
     intn rval;
-    jclass jc;
-    jstring rstring;
     jint *theArgs;
-    jboolean bb;
-    jobject o;
+    jboolean isCopy;
     char  str[256];  /* what is the correct constant??? */
 
     if (dimname == NULL) {
@@ -652,7 +670,7 @@ Java_hdf_hdflib_HDFLibrary_SDdiminfo
         h4badArgument(env, "SDdiminfo:  argv input array < order 3");
     } /* end else if */
     else {
-        theArgs = ENVPTR->GetIntArrayElements(ENVPAR argv, &bb);
+        theArgs = ENVPTR->GetIntArrayElements(ENVPAR argv, &isCopy);
         if (theArgs == NULL) {
             h4JNIFatalError(env, "SDdiminfo:  argv not pinned");
         } /* end if */
@@ -663,36 +681,33 @@ Java_hdf_hdflib_HDFLibrary_SDdiminfo
             if (rval == FAIL) {
                 ENVPTR->ReleaseIntArrayElements(ENVPAR argv, theArgs, JNI_ABORT);
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
             }
             else {
+                jboolean bb;
+                jclass sjc;
+                jstring rstring;
+                jobject o;
+
                 ENVPTR->ReleaseIntArrayElements(ENVPAR argv, theArgs, 0);
-                if (str != NULL) {
-                    str[255] = '\0';
-                    rstring = ENVPTR->NewStringUTF(ENVPAR  str);
-                    if (rstring != NULL) {
-                        o = ENVPTR->GetObjectArrayElement(ENVPAR dimname, 0);
-                        if (o == NULL) {
-                            CALL_ERROR_CHECK();
-                        }
-                        else {
-                            jc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
-                            if (jc == NULL) {
-                                CALL_ERROR_CHECK();
-                            }
-                            else {
-                                bb = ENVPTR->IsInstanceOf(ENVPAR o, jc);
-                                if (bb == JNI_FALSE) {
-                                    CALL_ERROR_CHECK();
-                                }
-                                else
-                                    ENVPTR->SetObjectArrayElement(ENVPAR dimname, 0, (jobject)rstring);
-                            }
-                        }
-                        ENVPTR->DeleteLocalRef(ENVPAR o);
-                    }
-                    else
-                        h4JNIFatalError(env, "SDdiminfo: can not create string");
+
+                str[255] = '\0';
+                /* convert it to java string */
+                rstring = ENVPTR->NewStringUTF(ENVPAR str);
+
+                sjc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
+                if (sjc == NULL) {
+                    return JNI_FALSE;
                 }
+                o = ENVPTR->GetObjectArrayElement(ENVPAR dimname, 0);
+                if (o == NULL) {
+                    return JNI_FALSE;
+                }
+                bb = ENVPTR->IsInstanceOf(ENVPAR o, sjc);
+                if (bb == JNI_TRUE)
+                    ENVPTR->SetObjectArrayElement(ENVPAR dimname, 0, (jobject)rstring);
+                ENVPTR->DeleteLocalRef(ENVPAR o);
+                return bb;
             }
         } /* end else */
     }
@@ -707,8 +722,9 @@ Java_hdf_hdflib_HDFLibrary_SDidtoref
     int32 id = (int32)sdsid;
 
     rval = SDidtoref(id);
-    if (rval < 0)
+    if (rval < 0) {
         CALL_ERROR_CHECK();
+    }
 
     return (jint)rval;
 }
@@ -721,8 +737,9 @@ Java_hdf_hdflib_HDFLibrary_SDreftoindex
     int32 id = (int32)sdid;
 
     rval = SDreftoindex(id, (int32)ref);
-    if (rval < 0)
+    if (rval < 0) {
         CALL_ERROR_CHECK();
+    }
 
     return (jint)rval;
 }
@@ -732,13 +749,10 @@ Java_hdf_hdflib_HDFLibrary_SDattrinfo
 (JNIEnv *env, jclass clss, jlong sdsid, jint index, jobjectArray name, jintArray argv)
 {
     intn rval;
-    jclass jc;
-    jstring rstring;
-    jint *theArgs;
-    jboolean bb;
-    jobject o;
     char  str[256];  /* what is the correct constant??? */
     int32 id = (int32)sdsid;
+    jint *theArgs;
+    jboolean isCopy;
 
     if (name == NULL) {
         h4nullArgument(env, "SDattrinfo:  name is NULL");
@@ -750,7 +764,7 @@ Java_hdf_hdflib_HDFLibrary_SDattrinfo
         h4badArgument(env, "SDattrinfo:  argv input array < order 2");
     } /* end else if */
     else {
-        theArgs = ENVPTR->GetIntArrayElements(ENVPAR argv, &bb);
+        theArgs = ENVPTR->GetIntArrayElements(ENVPAR argv, &isCopy);
         if (theArgs == NULL) {
             h4JNIFatalError(env, "SDattrinfo:  argv not pinned");
         } /* end if */
@@ -761,27 +775,33 @@ Java_hdf_hdflib_HDFLibrary_SDattrinfo
             if (rval == FAIL) {
                 ENVPTR->ReleaseIntArrayElements(ENVPAR argv, theArgs, JNI_ABORT);
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
             }
             else {
+                jboolean bb = JNI_FALSE;
+                jclass sjc;
+                jstring rstring;
+                jobject o;
+
                 ENVPTR->ReleaseIntArrayElements(ENVPAR argv, theArgs, 0);
-                if (str != NULL) {
-                    str[255] = '\0';
-                    rstring = ENVPTR->NewStringUTF(ENVPAR  str);
-                    o = ENVPTR->GetObjectArrayElement(ENVPAR name, 0);
-                    if (o == NULL) {
-                        CALL_ERROR_CHECK();
-                    }
-                    jc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
-                    if (jc == NULL) {
-                        CALL_ERROR_CHECK();
-                    }
-                    bb = ENVPTR->IsInstanceOf(ENVPAR o, jc);
-                    if (bb == JNI_FALSE) {
-                        CALL_ERROR_CHECK();
-                    }
-                    ENVPTR->SetObjectArrayElement(ENVPAR name, 0, (jobject)rstring);
-                    ENVPTR->DeleteLocalRef(ENVPAR o);
+
+                str[255] = '\0';
+                /* convert it to java string */
+                rstring = ENVPTR->NewStringUTF(ENVPAR  str);
+
+                sjc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
+                if (sjc == NULL) {
+                    return JNI_FALSE;
+                }
+                o = ENVPTR->GetObjectArrayElement(ENVPAR name, 0);
+                if (o == NULL) {
+                    return JNI_FALSE;
                 }
+                bb = ENVPTR->IsInstanceOf(ENVPAR o, sjc);
+                if (bb == JNI_TRUE)
+                    ENVPTR->SetObjectArrayElement(ENVPAR name, 0, (jobject)rstring);
+                ENVPTR->DeleteLocalRef(ENVPAR o);
+                return bb;
             }
         } /* end else */
     }
@@ -810,6 +830,7 @@ Java_hdf_hdflib_HDFLibrary_SDreadattr
             if (rval == FAIL) {
                 ENVPTR->ReleaseByteArrayElements(ENVPAR dat, arr, JNI_ABORT);
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
             }
             else {
                 ENVPTR->ReleaseByteArrayElements(ENVPAR dat, arr, 0);
@@ -847,8 +868,10 @@ Java_hdf_hdflib_HDFLibrary_SDiscoordvar
     int32 id = (int32)sdsid;
 
     rval = SDiscoordvar(id);
-    if (rval <= 0)
+    if (rval <= 0) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -861,7 +884,6 @@ Java_hdf_hdflib_HDFLibrary_SDgetcal
     jdouble *theArgs;
     jint *theNT;
     jboolean bb;
-    jboolean cbb = 0;
     int32 id = (int32)sdsid;
 
     if (nt == NULL) {
@@ -889,12 +911,14 @@ Java_hdf_hdflib_HDFLibrary_SDgetcal
                         (float64 *)&(theArgs[3]), (int32 *)&(theNT[0]));
 
                 if (rval == FAIL) {
-                    cbb = JNI_ABORT;
+                    ENVPTR->ReleaseDoubleArrayElements(ENVPAR argv, theArgs, JNI_ABORT);
+                    ENVPTR->ReleaseIntArrayElements(ENVPAR nt, theNT, JNI_ABORT);
                     CALL_ERROR_CHECK();
+                    return JNI_FALSE;
                 }
-                ENVPTR->ReleaseDoubleArrayElements(ENVPAR argv, theArgs, cbb);
+                ENVPTR->ReleaseDoubleArrayElements(ENVPAR argv, theArgs, 0);
             } /* end else */
-            ENVPTR->ReleaseIntArrayElements(ENVPAR nt, theNT, cbb);
+            ENVPTR->ReleaseIntArrayElements(ENVPAR nt, theNT, 0);
         } /* end else */
     } /* end else */
     return JNI_TRUE;
@@ -905,10 +929,7 @@ Java_hdf_hdflib_HDFLibrary_SDgetdatastrs
 (JNIEnv *env, jclass clss, jlong sdsid, jobjectArray strings, jint len)
 {
     intn rval;
-    jclass Sjc;
     jstring str;
-    jobject o;
-    jboolean bb;
     jstring label,unit,format,coordsys;
     char *labVal;
     char *unitVal;
@@ -975,10 +996,7 @@ Java_hdf_hdflib_HDFLibrary_SDgetdatastrs
 
         rval = SDgetdatastrs(id, labVal, unitVal, fmtVal, coordsysVal, (int32)len);
 
-        if (rval == FAIL) {
-            CALL_ERROR_CHECK();
-        }
-        else {
+        if (rval != FAIL) {
             if (labVal != NULL) {
                 labVal[len] = '\0';
                 str = ENVPTR->NewStringUTF(ENVPAR labVal);
@@ -1013,6 +1031,10 @@ Java_hdf_hdflib_HDFLibrary_SDgetdatastrs
         if (unitVal != NULL) HDfree(unitVal);
         if (fmtVal != NULL) HDfree(fmtVal);
         if (coordsysVal != NULL) HDfree(coordsysVal);
+        if (rval == FAIL) {
+            CALL_ERROR_CHECK();
+            return JNI_FALSE;
+        }
     } /* end else */
     return JNI_TRUE;
 }
@@ -1022,10 +1044,7 @@ Java_hdf_hdflib_HDFLibrary_SDgetdimstrs
 (JNIEnv *env, jclass clss, jlong dimid, jobjectArray strings, jint len)
 {
     intn rval;
-    jclass Sjc;
     jstring str;
-    jobject o;
-    jboolean bb;
     jstring label,unit,format,coordsys;
     char *labVal;
     char *unitVal;
@@ -1078,10 +1097,7 @@ Java_hdf_hdflib_HDFLibrary_SDgetdimstrs
 
         rval = SDgetdimstrs((int32)dimid, labVal, unitVal, fmtVal, (int32)len);
 
-        if (rval == FAIL) {
-            CALL_ERROR_CHECK();
-        }
-        else {
+        if (rval != FAIL) {
             if (labVal != NULL) {
                 labVal[len] = '\0';
                 str = ENVPTR->NewStringUTF(ENVPAR labVal);
@@ -1108,6 +1124,10 @@ Java_hdf_hdflib_HDFLibrary_SDgetdimstrs
         if (labVal != NULL) HDfree(labVal);
         if (unitVal != NULL) HDfree(unitVal);
         if (fmtVal != NULL) HDfree(fmtVal);
+        if (rval == FAIL) {
+            CALL_ERROR_CHECK();
+            return JNI_FALSE;
+        }
     } /* end else */
     return JNI_TRUE;
 }
@@ -1122,7 +1142,6 @@ Java_hdf_hdflib_HDFLibrary_SDgetdimscale
     intn rval;
     jbyte *datVal;
     jboolean bb;
-    jboolean cbb = 0;
 
     if (data == NULL) {
         h4nullArgument(env, "SDgetdimscale:  data is NULL");
@@ -1135,11 +1154,11 @@ Java_hdf_hdflib_HDFLibrary_SDgetdimscale
         else {
             rval = SDgetdimscale((int32)dimid, (char *)datVal);
             if (rval == FAIL) {
-                cbb = JNI_ABORT;
+                ENVPTR->ReleaseByteArrayElements(ENVPAR data, datVal, JNI_ABORT);
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
             }
-
-            ENVPTR->ReleaseByteArrayElements(ENVPAR data, datVal, cbb);
+            ENVPTR->ReleaseByteArrayElements(ENVPAR data, datVal, 0);
         } /* end else */
     } /* end else */
     return JNI_TRUE;
@@ -1152,7 +1171,6 @@ Java_hdf_hdflib_HDFLibrary_SDgetfillvalue
     intn rval;
     jbyte *datVal;
     jboolean bb;
-    jboolean cbb = 0;
     int32 id = (int32)sdsid;
 
     if (data == NULL) {
@@ -1166,11 +1184,11 @@ Java_hdf_hdflib_HDFLibrary_SDgetfillvalue
         else {
             rval = SDgetfillvalue(id, (char *)datVal);
             if (rval == FAIL) {
-                cbb = JNI_ABORT;
+                ENVPTR->ReleaseByteArrayElements(ENVPAR data, datVal, JNI_ABORT);
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
             }
-
-            ENVPTR->ReleaseByteArrayElements(ENVPAR data, datVal, cbb);
+            ENVPTR->ReleaseByteArrayElements(ENVPAR data, datVal, 0);
         } /* end else */
     } /* end else */
     return JNI_TRUE;
@@ -1183,7 +1201,6 @@ Java_hdf_hdflib_HDFLibrary_SDgetrange
     intn rval;
     jbyte *minp, *maxp;
     jboolean bb;
-    jboolean cbb = 0;
     int32 id = (int32)sdsid;
 
     if (max == NULL) {
@@ -1205,13 +1222,14 @@ Java_hdf_hdflib_HDFLibrary_SDgetrange
             else {
                 rval = SDgetrange(id, (void *)maxp, (void *)minp);
                 if (rval == FAIL) {
-                    cbb = JNI_ABORT;
+                    ENVPTR->ReleaseByteArrayElements(ENVPAR min, minp, JNI_ABORT);
+                    ENVPTR->ReleaseByteArrayElements(ENVPAR max, maxp, JNI_ABORT);
                     CALL_ERROR_CHECK();
+                    return JNI_FALSE;
                 }
-                ENVPTR->ReleaseByteArrayElements(ENVPAR min, minp, cbb);
+                ENVPTR->ReleaseByteArrayElements(ENVPAR min, minp, 0);
             } /* end else */
-
-            ENVPTR->ReleaseByteArrayElements(ENVPAR max, maxp, cbb);
+            ENVPTR->ReleaseByteArrayElements(ENVPAR max, maxp, 0);
         } /* end else */
     } /* end else */
     return JNI_TRUE;
@@ -1239,11 +1257,12 @@ Java_hdf_hdflib_HDFLibrary_SDcreate
             } /* end if */
             else {
                 rval = SDcreate(id, str, (int32)number_type, (int32)rank, (int32 *)dims);
-
                 ENVPTR->ReleaseIntArrayElements(ENVPAR dimsizes, dims, JNI_ABORT);
-
-                if (rval < 0)
+                if (rval < 0) {
+                    UNPIN_JAVA_STRING(name, str);
                     CALL_ERROR_CHECK();
+                    return JNI_FALSE;
+                }
             } /* end else */
             UNPIN_JAVA_STRING(name, str);
         }
@@ -1296,8 +1315,11 @@ Java_hdf_hdflib_HDFLibrary_SDsetattr
 
                 ENVPTR->ReleaseByteArrayElements(ENVPAR values, arr, JNI_ABORT);
 
-                if (rval == FAIL)
+                if (rval == FAIL) {
+                    UNPIN_JAVA_STRING(attr_name, str);
                     CALL_ERROR_CHECK();
+                    return JNI_FALSE;
+                }
             } /* end else */
             UNPIN_JAVA_STRING(attr_name, str);
         }
@@ -1316,8 +1338,10 @@ Java_hdf_hdflib_HDFLibrary_SDsetcal
     rval = SDsetcal(id, (float64)cal, (float64)cal_err,
         (float64)offset, (float64)offset_err, (int32)number_type);
 
-    if (rval == FAIL)
+    if (rval == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -1364,8 +1388,10 @@ Java_hdf_hdflib_HDFLibrary_SDsetdatastrs
     if (formstr != NULL) ENVPTR->ReleaseStringUTFChars(ENVPAR format, formstr);
     if (csstr != NULL) ENVPTR->ReleaseStringUTFChars(ENVPAR coordsys, csstr);
 
-    if (rval == FAIL)
+    if (rval == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -1382,8 +1408,10 @@ Java_hdf_hdflib_HDFLibrary_SDsetdimname
         rval = SDsetdimname((int32)dim_id, str);
 
         UNPIN_JAVA_STRING(dim_name, str);
-        if (rval == FAIL)
+        if (rval == FAIL) {
             CALL_ERROR_CHECK();
+            return JNI_FALSE;
+        }
     }
 
     return JNI_TRUE;
@@ -1411,8 +1439,10 @@ Java_hdf_hdflib_HDFLibrary_SDsetdimscale
 
             ENVPTR->ReleaseByteArrayElements(ENVPAR data, d, JNI_ABORT);
 
-            if (rval == FAIL)
+            if (rval == FAIL) {
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
+            }
         } /* end else */
     } /* end else */
     return JNI_TRUE;
@@ -1452,8 +1482,10 @@ Java_hdf_hdflib_HDFLibrary_SDsetdimstrs
     if (unstr != NULL) ENVPTR->ReleaseStringUTFChars(ENVPAR unit, unstr);
     if (formstr != NULL) ENVPTR->ReleaseStringUTFChars(ENVPAR format, formstr);
 
-    if (rval == FAIL)
+    if (rval == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -1472,8 +1504,10 @@ Java_hdf_hdflib_HDFLibrary_SDsetexternalfile
         rval = SDsetexternalfile(id, f, (int32)offset);
 
         UNPIN_JAVA_STRING(filename, f);
-        if (rval == FAIL)
+        if (rval == FAIL) {
             CALL_ERROR_CHECK();
+            return JNI_FALSE;
+        }
     }
 
     return JNI_TRUE;
@@ -1501,8 +1535,10 @@ Java_hdf_hdflib_HDFLibrary_SDsetfillvalue
 
             ENVPTR->ReleaseByteArrayElements(ENVPAR fill_val, d, JNI_ABORT);
 
-            if (rval == FAIL)
+            if (rval == FAIL) {
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
+            }
         } /* end else */
     } /* end else */
     return JNI_TRUE;
@@ -1537,7 +1573,10 @@ Java_hdf_hdflib_HDFLibrary_SDsetrange
             else {
                 rval = SDsetrange(id, maxp, minp);
                 if (rval == FAIL) {
+                    ENVPTR->ReleaseByteArrayElements(ENVPAR min, minp, JNI_ABORT);
+                    ENVPTR->ReleaseByteArrayElements(ENVPAR max, maxp, JNI_ABORT);
                     CALL_ERROR_CHECK();
+                    return JNI_FALSE;
                 }
                 ENVPTR->ReleaseByteArrayElements(ENVPAR min, minp, JNI_ABORT);
             } /* end else */
@@ -1559,7 +1598,6 @@ Java_hdf_hdflib_HDFLibrary_SDwritedata
     int32 *e;
     jbyte *d;
     jboolean bb;
-    jboolean cbb = 0;
     int32 id = (int32)sdsid;
 
     if (data == NULL) {
@@ -1598,13 +1636,15 @@ Java_hdf_hdflib_HDFLibrary_SDwritedata
                 ENVPTR->ReleaseIntArrayElements(ENVPAR edge, e, JNI_ABORT);
 
                 if (rval == FAIL) {
-                    cbb = JNI_ABORT;
+                    ENVPTR->ReleaseIntArrayElements(ENVPAR start, strt, JNI_ABORT);
+                    ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR data, d, JNI_ABORT);
                     CALL_ERROR_CHECK();
+                    return JNI_FALSE;
                 }
             } /* end else */
             ENVPTR->ReleaseIntArrayElements(ENVPAR start, strt, JNI_ABORT);
         }
-        ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR data, d, cbb);
+        ENVPTR->ReleasePrimitiveArrayCritical(ENVPAR data, d, 0);
     } /* end else */
     return JNI_TRUE;
 }
@@ -1621,8 +1661,10 @@ Java_hdf_hdflib_HDFLibrary_SDsetnbitdataset
     rval = SDsetnbitdataset(id, (intn) start_bit, (intn) bit_len,
             (intn) sign_ext, (intn) fill_one);
 
-    if (rval == FAIL)
+    if (rval == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -1644,8 +1686,10 @@ Java_hdf_hdflib_HDFLibrary_SDsetcompress
     else {
         rval = SDsetcompress(id, (comp_coder_t)type, (comp_info *)&cinf);
 
-        if (rval == FAIL)
+        if (rval == FAIL) {
             CALL_ERROR_CHECK();
+            return JNI_FALSE;
+        }
     }
     return JNI_TRUE;
 }
@@ -1667,6 +1711,7 @@ Java_hdf_hdflib_HDFLibrary_SDgetcompinfo
 
         if (rval == FAIL) {
             CALL_ERROR_CHECK();
+            return JNI_FALSE;
         }
         else {
             if (setNewCompInfo(env, cinfo, coder, &cinf) == JNI_FALSE)
@@ -1693,6 +1738,7 @@ Java_hdf_hdflib_HDFLibrary_SDgetcompress
 
         if (rval == FAIL) {
             CALL_ERROR_CHECK();
+            return JNI_FALSE;
         }
         else {
             if (setNewCompInfo(env, cinfo, coder, &cinf) == JNI_FALSE)
@@ -1711,8 +1757,10 @@ Java_hdf_hdflib_HDFLibrary_SDsetaccesstype
 
     rval = SDsetaccesstype(id, (uintn)accesstype);
 
-    if (rval == FAIL)
+    if (rval == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -1726,8 +1774,10 @@ Java_hdf_hdflib_HDFLibrary_SDsetblocksize
 
     rval = SDsetblocksize(id, (int32)block_size);
 
-    if (rval == FAIL)
+    if (rval == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -1741,8 +1791,10 @@ Java_hdf_hdflib_HDFLibrary_SDsetfillmode
 
     rval = SDsetfillmode(id, (intn)fillmode);
 
-    if (rval == FAIL)
+    if (rval == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -1756,8 +1808,10 @@ Java_hdf_hdflib_HDFLibrary_SDsetdimval_1comp
 
     rval = SDsetdimval_comp(id, (intn)comp_mode);
 
-    if (rval == FAIL)
+    if (rval == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -1775,8 +1829,10 @@ Java_hdf_hdflib_HDFLibrary_SDisdimval_1bwcomp
     else if (rval == SD_DIMVAL_BW_INCOMP) {
         return JNI_FALSE;
     }
-    else
+    else {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
     return JNI_TRUE;
 }
 
@@ -1797,8 +1853,10 @@ Java_hdf_hdflib_HDFLibrary_SDsetchunk
     else {
         rval = SDsetchunk(id, c_def, (int32)flags);
 
-        if (rval == FAIL)
+        if (rval == FAIL) {
             CALL_ERROR_CHECK();
+            return JNI_FALSE;
+        }
     }
     return JNI_TRUE;
 }
@@ -1812,7 +1870,6 @@ Java_hdf_hdflib_HDFLibrary_SDgetchunkinfo
     HDF_CHUNK_DEF cdef;
     jint *flgs;
     jboolean bb;
-    jboolean cbb = 0;
     int32 id = (int32)sdsid;
 
     if (chunk_def == NULL) {
@@ -1830,15 +1887,14 @@ Java_hdf_hdflib_HDFLibrary_SDgetchunkinfo
             rval = SDgetchunkinfo(id, &cdef, (int32 *)&(flgs[0]));
 
             if (rval == FAIL) {
-                cbb = JNI_ABORT;
+                ENVPTR->ReleaseIntArrayElements(ENVPAR cflags, (jint *)flgs, JNI_ABORT);
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
             }
-            else {
             /* convert cdef to HDFchunkinfo */
-                if (makeChunkInfo(env, chunk_def, (int32)*flgs, &cdef) == JNI_FALSE)
-                    h4raiseException(env, "SDgetchunkinfo: error creating chunk_def struct");
-            }
-            ENVPTR->ReleaseIntArrayElements(ENVPAR cflags, (jint *)flgs, cbb);
+            if (makeChunkInfo(env, chunk_def, (int32)*flgs, &cdef) == JNI_FALSE)
+                h4raiseException(env, "SDgetchunkinfo: error creating chunk_def struct");
+            ENVPTR->ReleaseIntArrayElements(ENVPAR cflags, (jint *)flgs, 0);
         }
     }
 
@@ -1853,7 +1909,6 @@ Java_hdf_hdflib_HDFLibrary_SDreadchunk
     jbyte * s;
     jint *arr;
     jboolean bb;
-    jboolean cbb = 0;
     int32 id = (int32)sdid;
 
     if (dat == NULL) {
@@ -1876,10 +1931,12 @@ Java_hdf_hdflib_HDFLibrary_SDreadchunk
                 rval = SDreadchunk(id, (int32 *)arr, s);
 
                 if (rval == FAIL) {
-                    cbb = JNI_ABORT;
+                    ENVPTR->ReleaseByteArrayElements(ENVPAR dat, s, JNI_ABORT);
+                    ENVPTR->ReleaseIntArrayElements(ENVPAR origin, arr, JNI_ABORT);
                     CALL_ERROR_CHECK();
+                    return JNI_FALSE;
                 }
-                ENVPTR->ReleaseByteArrayElements(ENVPAR dat, s, cbb);
+                ENVPTR->ReleaseByteArrayElements(ENVPAR dat, s, 0);
             }
             ENVPTR->ReleaseIntArrayElements(ENVPAR origin, arr, JNI_ABORT);
         }
@@ -1929,11 +1986,13 @@ Java_hdf_hdflib_HDFLibrary_SDwritechunk
             } /* end if */
             else {
                 rval = SDwritechunk(id, (int32 *)arr, s);
+                ENVPTR->ReleaseByteArrayElements(ENVPAR dat, s, JNI_ABORT);
 
                 if (rval == FAIL) {
+                    ENVPTR->ReleaseIntArrayElements(ENVPAR origin, arr, JNI_ABORT);
                     CALL_ERROR_CHECK();
+                    return JNI_FALSE;
                 }
-                ENVPTR->ReleaseByteArrayElements(ENVPAR dat, s, JNI_ABORT);
             }
             ENVPTR->ReleaseIntArrayElements(ENVPAR origin, arr, JNI_ABORT);
         }
@@ -1965,6 +2024,7 @@ Java_hdf_hdflib_HDFLibrary_SDcheckempty
             if (rval == FAIL) {
                 ENVPTR->ReleaseIntArrayElements(ENVPAR emptySDS, isempty, JNI_ABORT);
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
             }
             else {
                 ENVPTR->ReleaseIntArrayElements(ENVPAR emptySDS, isempty, 0);
diff --git a/java/src/jni/hdfstructsutil.c b/java/src/jni/hdfstructsutil.c
index 4782d11d..416fc98f 100644
--- a/java/src/jni/hdfstructsutil.c
+++ b/java/src/jni/hdfstructsutil.c
@@ -1,14 +1,14 @@
-/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
+/****************************************************************************
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *
- * This file is part of HDF.  The full HDF copyright notice, including       *
- * terms governing use, modification, and redistribution, is contained in    *
- * the COPYING file, which can be found at the root of the source code       *
- * distribution tree, or in https://support.hdfgroup.org/ftp/HDF/releases/.  *
- * If you do not have access to either file, you may request a copy from     *
- * help@hdfgroup.org.                                                        *
+ * This file is part of HDF Java Products. The full HDF Java copyright       *
+ * notice, including terms governing use, modification, and redistribution,  *
+ * is contained in the file, COPYING.  COPYING can be found at the root of   *
+ * the source code distribution tree. You can also access it online  at      *
+ * http://support.hdfgroup.org/products/licenses.html.  If you do not have   *
+ * access to the file, you may request a copy from help@hdfgroup.org.        *
  ****************************************************************************/
 /*
  *  This module contains code to translate between the HDF C union 'comp_info'
diff --git a/java/src/jni/hdfvdataImp.c b/java/src/jni/hdfvdataImp.c
index 7cd39f86..1487c8a4 100644
--- a/java/src/jni/hdfvdataImp.c
+++ b/java/src/jni/hdfvdataImp.c
@@ -8,7 +8,7 @@
  * notice, including terms governing use, modification, and redistribution,  *
  * is contained in the file, COPYING.  COPYING can be found at the root of   *
  * the source code distribution tree. You can also access it online  at      *
- * http://www.hdfgroup.org/products/licenses.html.  If you do not have       *
+ * http://support.hdfgroup.org/products/licenses.html.  If you do not have   *
  * access to the file, you may request a copy from help@hdfgroup.org.        *
  ****************************************************************************/
 /*
@@ -81,10 +81,6 @@ Java_hdf_hdflib_HDFLibrary_VSgetclass
 (JNIEnv *env, jclass clss, jlong vdata_id, jobjectArray hdfclass)
 {
     char *className;
-    jstring rstring;
-    jclass jc;
-    jobject o;
-    jboolean bb;
 
     if (hdfclass == NULL) {
         h4nullArgument(env, "VSgetclass: hdfclass is NULL");
@@ -103,27 +99,32 @@ Java_hdf_hdflib_HDFLibrary_VSgetclass
                 CALL_ERROR_CHECK();
             } /* end if */
             else {
+                jstring rstring;
+                jclass sjc;
+                jobject o;
+                jboolean bb;
+
                 className[VSNAMELENMAX] = '\0';
 
                 /* convert it to java string */
                 rstring = ENVPTR->NewStringUTF(ENVPAR className);
 
-                o = ENVPTR->GetObjectArrayElement(ENVPAR hdfclass,0);
-                if (o == NULL) {
+                sjc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
+                if (sjc == NULL) {
                     HDfree(className);
                     return;
                 }
-                jc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
-                if (jc == NULL) {
+                o = ENVPTR->GetObjectArrayElement(ENVPAR hdfclass, 0);
+                if (o == NULL) {
                     HDfree(className);
                     return;
                 }
-                bb = ENVPTR->IsInstanceOf(ENVPAR o,jc);
+                bb = ENVPTR->IsInstanceOf(ENVPAR o, sjc);
                 if (bb == JNI_FALSE) {
                     HDfree(className);
                     return;
                 }
-                ENVPTR->SetObjectArrayElement(ENVPAR hdfclass,0,(jobject)rstring);
+                ENVPTR->SetObjectArrayElement(ENVPAR hdfclass, 0, (jobject)rstring);
                 ENVPTR->DeleteLocalRef(ENVPAR o);
             } /* end else */
 
@@ -137,10 +138,6 @@ Java_hdf_hdflib_HDFLibrary_VSgetname
 (JNIEnv *env, jclass clss, jlong vdata_id, jobjectArray hdfname)
 {
     char nameName[VSNAMELENMAX+1];
-    jstring rstring;
-    jclass jc;
-    jobject o;
-    jboolean bb;
 
     if (hdfname == NULL) {
         h4nullArgument(env, "VSgetname: hdfname is NULL");
@@ -151,24 +148,29 @@ Java_hdf_hdflib_HDFLibrary_VSgetname
             CALL_ERROR_CHECK();
         } /* end if */
         else {
+            jstring rstring;
+            jclass sjc;
+            jobject o;
+            jboolean bb;
+
             nameName[VSNAMELENMAX]='\0';
 
             /* convert it to java string */
             rstring = ENVPTR->NewStringUTF(ENVPAR nameName);
 
-            o = ENVPTR->GetObjectArrayElement(ENVPAR hdfname,0);
-            if (o == NULL) {
+            sjc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
+            if (sjc == NULL) {
                 return;
             }
-            jc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
-            if (jc == NULL) {
+            o = ENVPTR->GetObjectArrayElement(ENVPAR hdfname, 0);
+            if (o == NULL) {
                 return;
             }
-            bb = ENVPTR->IsInstanceOf(ENVPAR o,jc);
+            bb = ENVPTR->IsInstanceOf(ENVPAR o, sjc);
             if (bb == JNI_FALSE) {
                 return;
             }
-            ENVPTR->SetObjectArrayElement(ENVPAR hdfname,0,(jobject)rstring);
+            ENVPTR->SetObjectArrayElement(ENVPAR hdfname, 0, (jobject)rstring);
             ENVPTR->DeleteLocalRef(ENVPAR o);
         } /* end else */
     } /* end else */
@@ -201,8 +203,10 @@ Java_hdf_hdflib_HDFLibrary_VSfdefine
 
         UNPIN_JAVA_STRING(fieldname, fldName);
 
-        if (retVal == FAIL)
+        if (retVal == FAIL) {
             CALL_ERROR_CHECK();
+            return JNI_FALSE;
+        }
     }
 
     return JNI_TRUE;
@@ -223,8 +227,10 @@ Java_hdf_hdflib_HDFLibrary_VSfexist
 
         UNPIN_JAVA_STRING(fieldname, fldName);
 
-        if (retVal == FAIL)
+        if (retVal == FAIL) {
             CALL_ERROR_CHECK();
+            return JNI_FALSE;
+        }
     }
 
     return JNI_TRUE;
@@ -287,11 +293,7 @@ Java_hdf_hdflib_HDFLibrary_VSgetfields
 (JNIEnv *env, jclass clss, jlong vdata_id, jobjectArray fields)
 {
     int retVal = -1;
-    jclass jc;
     char *flds;
-    jstring rstring;
-    jobject o;
-    jboolean bb;
 
     if (fields == NULL) {
         h4nullArgument(env, "VSgetfields: fields is NULL");
@@ -312,24 +314,26 @@ Java_hdf_hdflib_HDFLibrary_VSgetfields
                 CALL_ERROR_CHECK();
             } /* end if */
             else {
+                jclass sjc;
+                jstring rstring;
+                jobject o;
+                jboolean bb;
+
+                /* convert it to java string */
                 rstring = ENVPTR->NewStringUTF(ENVPAR  flds);
+
                 o = ENVPTR->GetObjectArrayElement(ENVPAR fields,0);
-                if (o == NULL) {
-                    HDfree(flds);
-                    return FAIL;
-                }
-                jc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
-                if (jc == NULL) {
-                    HDfree(flds);
-                    return FAIL;
-                }
-                bb = ENVPTR->IsInstanceOf(ENVPAR o,jc);
-                if (bb == JNI_FALSE) {
-                    HDfree(flds);
-                    return FAIL;
+                if (o != NULL) {
+                    sjc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
+                    if (sjc != NULL) {
+                        bb = ENVPTR->IsInstanceOf(ENVPAR o, sjc);
+                        if (bb == JNI_TRUE) {
+                            ENVPTR->SetObjectArrayElement(ENVPAR fields, 0, (jobject)rstring);
+                            retVal = 0;
+                        }
+                    }
+                    ENVPTR->DeleteLocalRef(ENVPAR o);
                 }
-                ENVPTR->SetObjectArrayElement(ENVPAR fields,0,(jobject)rstring);
-                ENVPTR->DeleteLocalRef(ENVPAR o);
             } /* end else */
 
             HDfree(flds);
@@ -361,12 +365,8 @@ Java_hdf_hdflib_HDFLibrary_VSinquire
     intn rval;
     char *flds;
     char *name;
-    jclass jc;
-    jstring rstring;
     jint * theIargs;
-    jboolean bb;
-    jobject o;
-
+    jboolean isCopy;
 
     if (iargs == NULL) {
         h4nullArgument(env, "VSinquire: iargs is NULL");
@@ -393,7 +393,7 @@ Java_hdf_hdflib_HDFLibrary_VSinquire
                 h4outOfMemory(env, "VSinquire");
             } /* end if */
             else {
-                theIargs = ENVPTR->GetIntArrayElements(ENVPAR iargs,&bb);
+                theIargs = ENVPTR->GetIntArrayElements(ENVPAR iargs,&isCopy);
 
                 if (theIargs == NULL) {
                     h4JNIFatalError(env, "VSinquire: iargs not pinned");
@@ -408,46 +408,55 @@ Java_hdf_hdflib_HDFLibrary_VSinquire
                     if (rval == FAIL) {
                         ENVPTR->ReleaseIntArrayElements(ENVPAR iargs,theIargs,JNI_ABORT);
                         CALL_ERROR_CHECK();
+                        HDfree(flds);
+                        HDfree(name);
+                        return JNI_FALSE;
                     } /* end if */
                     else {
-                        ENVPTR->ReleaseIntArrayElements(ENVPAR iargs,theIargs,0);
+                        jclass sjc;
+                        jobject o;
+                        jstring rstring;
+                        jboolean bb;
 
-                        jc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
-                        if (jc == NULL) {
-                            HDfree(flds);
-                            HDfree(name);
-                            return JNI_FALSE;
-                        }
-                        o = ENVPTR->GetObjectArrayElement(ENVPAR sargs,0);
-                        if (o == NULL) {
-                            HDfree(flds);
-                            HDfree(name);
-                            return JNI_FALSE;
-                        }
-                        bb = ENVPTR->IsInstanceOf(ENVPAR o,jc);
-                        if (bb == JNI_FALSE) {
-                            HDfree(flds);
-                            return JNI_FALSE;
-                        }
+                        ENVPTR->ReleaseIntArrayElements(ENVPAR iargs, theIargs, 0);
+
+                        /* convert it to java string */
                         rstring = ENVPTR->NewStringUTF(ENVPAR flds);
-                        ENVPTR->SetObjectArrayElement(ENVPAR sargs,0,(jobject)rstring);
-                        ENVPTR->DeleteLocalRef(ENVPAR o);
 
-                        o = ENVPTR->GetObjectArrayElement(ENVPAR sargs,1);
-                        if (o == NULL) {
+                        sjc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
+                        if (sjc == NULL) {
                             HDfree(flds);
                             HDfree(name);
                             return JNI_FALSE;
                         }
-                        bb = ENVPTR->IsInstanceOf(ENVPAR o,jc);
-                        if (bb == JNI_FALSE) {
+                        o = ENVPTR->GetObjectArrayElement(ENVPAR sargs, 0);
+                        if (o == NULL) {
                             HDfree(flds);
                             HDfree(name);
                             return JNI_FALSE;
                         }
-                        rstring = ENVPTR->NewStringUTF(ENVPAR name);
-                        ENVPTR->SetObjectArrayElement(ENVPAR sargs,1,(jobject)rstring);
+                        bb = ENVPTR->IsInstanceOf(ENVPAR o, sjc);
+                        if (bb == JNI_TRUE)
+                            ENVPTR->SetObjectArrayElement(ENVPAR sargs, 0, (jobject)rstring);
                         ENVPTR->DeleteLocalRef(ENVPAR o);
+                        HDfree(flds);
+
+                        if (bb == JNI_TRUE) {
+                            /* convert it to java string */
+                            rstring = ENVPTR->NewStringUTF(ENVPAR name);
+
+                            o = ENVPTR->GetObjectArrayElement(ENVPAR sargs, 1);
+                            if (o == NULL) {
+                                HDfree(name);
+                                return JNI_FALSE;
+                            }
+                            bb = ENVPTR->IsInstanceOf(ENVPAR o, sjc);
+                            if (bb == JNI_TRUE)
+                                ENVPTR->SetObjectArrayElement(ENVPAR sargs, 1, (jobject)rstring);
+                            ENVPTR->DeleteLocalRef(ENVPAR o);
+                        }
+                        HDfree(name);
+                        return bb;
                     }
                 } /* end else */
 
@@ -485,6 +494,7 @@ Java_hdf_hdflib_HDFLibrary_VSgetblockinfo
             if (rval == FAIL) {
                 ENVPTR->ReleaseIntArrayElements(ENVPAR iargs,theIargs,JNI_ABORT);
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
             }
             else {
                 ENVPTR->ReleaseIntArrayElements(ENVPAR iargs,theIargs,0);
@@ -592,8 +602,10 @@ Java_hdf_hdflib_HDFLibrary_VSsetfields
 
         UNPIN_JAVA_STRING(fields, fldPtr);
 
-        if (retVal == FAIL)
+        if (retVal == FAIL) {
             CALL_ERROR_CHECK();
+            return JNI_FALSE;
+        }
     }
 
     return JNI_TRUE;
@@ -607,8 +619,10 @@ Java_hdf_hdflib_HDFLibrary_VSsetinterlace
 
     /* set the interlace for Vdata */
     retVal = VSsetinterlace((int32)vdata_id, (int32)interlace);
-    if (retVal == FAIL)
+    if (retVal == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -642,8 +656,10 @@ Java_hdf_hdflib_HDFLibrary_VSappendable
     int32 rval;
 
     rval = VSappendable((int32) vkey, (int32) block_size);
-    if (rval == FAIL)
+    if (rval == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -743,8 +759,10 @@ Java_hdf_hdflib_HDFLibrary_VSsetexternalfile
 
         UNPIN_JAVA_STRING(filename, string);
 
-        if (rval == FAIL)
+        if (rval == FAIL) {
             CALL_ERROR_CHECK();
+            return JNI_FALSE;
+        }
     }
 
     return JNI_TRUE;
@@ -811,11 +829,8 @@ Java_hdf_hdflib_HDFLibrary_VSattrinfo
 {
     int32 retVal;
     jint *theArgs;
-    jboolean bb;
-    jclass Sjc;
-    jstring str;
-    jobject o;
     char  nam[256];  /* what is the correct constant??? */
+    jboolean isCopy;
 
     if (name == NULL) {
         h4nullArgument(env, "VSattrinfo: name is NULL");
@@ -830,7 +845,7 @@ Java_hdf_hdflib_HDFLibrary_VSattrinfo
         h4badArgument(env, "VSattrinfo: output array argv < order 3");
     } /* end else if */
     else {
-        theArgs = ENVPTR->GetIntArrayElements(ENVPAR argv,&bb);
+        theArgs = ENVPTR->GetIntArrayElements(ENVPAR argv, &isCopy);
 
         if (theArgs == NULL) {
             h4JNIFatalError(env, "VSattrinfo: argv not pinned");
@@ -844,27 +859,38 @@ Java_hdf_hdflib_HDFLibrary_VSattrinfo
             nam[255] = '\0';
 
             if (retVal == FAIL) {
-                ENVPTR->ReleaseIntArrayElements(ENVPAR argv,theArgs,JNI_ABORT);
+                ENVPTR->ReleaseIntArrayElements(ENVPAR argv, theArgs, JNI_ABORT);
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
             }
             else {
-                ENVPTR->ReleaseIntArrayElements(ENVPAR argv,theArgs,0);
+                jboolean bb = JNI_FALSE;
+                jclass Sjc;
+                jstring str;
+                jobject o;
+
+                ENVPTR->ReleaseIntArrayElements(ENVPAR argv, theArgs, 0);
 
-                str = ENVPTR->NewStringUTF(ENVPAR nam);
-                o = ENVPTR->GetObjectArrayElement(ENVPAR name,0);
-                if (o == NULL) {
-                    return JNI_FALSE;
-                }
                 Sjc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
                 if (Sjc == NULL) {
                     return JNI_FALSE;
                 }
-                bb = ENVPTR->IsInstanceOf(ENVPAR o,Sjc);
-                if (bb == JNI_FALSE) {
-                    return JNI_FALSE;
+                else {
+                    o = ENVPTR->GetObjectArrayElement(ENVPAR name, 0);
+                    if (o == NULL) {
+                        return JNI_FALSE;
+                    }
+                    else {
+                        bb = ENVPTR->IsInstanceOf(ENVPAR o, Sjc);
+                        if (bb == JNI_TRUE) {
+                            str = ENVPTR->NewStringUTF(ENVPAR nam);
+                            if (str != NULL)
+                                ENVPTR->SetObjectArrayElement(ENVPAR name, 0, (jobject)str);
+                        }
+                    }
+                    ENVPTR->DeleteLocalRef(ENVPAR o);
+                    return bb;
                 }
-                ENVPTR->SetObjectArrayElement(ENVPAR name,0,(jobject)str);
-                ENVPTR->DeleteLocalRef(ENVPAR o);
             }
         } /* end else */
     } /* end else */
@@ -878,12 +904,9 @@ Java_hdf_hdflib_HDFLibrary_VSfindex
 {
     intn rval;
     const char *str;
-    int copyMode;
     jint *arr;
     jboolean bb;
 
-    copyMode = JNI_ABORT;
-
     if (findex == NULL) {
         h4nullArgument(env, "VSfindex: findex is NULL");
     } /* end if */
@@ -903,13 +926,12 @@ Java_hdf_hdflib_HDFLibrary_VSfindex
 
                 if (rval == FAIL) {
                     CALL_ERROR_CHECK();
-                }
-                else {
-                    copyMode = 0;
+                    ENVPTR->ReleaseIntArrayElements(ENVPAR findex, arr, JNI_ABORT);
+                    return JNI_FALSE;
                 }
             } /* end if */
 
-            ENVPTR->ReleaseIntArrayElements(ENVPAR findex,arr,copyMode);
+            ENVPTR->ReleaseIntArrayElements(ENVPAR findex, arr, 0);
         } /* end else */
     } /* end else */
 
@@ -962,7 +984,7 @@ Java_hdf_hdflib_HDFLibrary_VSgetattr
         h4nullArgument(env, "VSgetattr: values is NULL");
     } /* end if */
     else {
-        arr = ENVPTR->GetByteArrayElements(ENVPAR values,&bb);
+        arr = ENVPTR->GetByteArrayElements(ENVPAR values, &bb);
 
         if (arr == NULL) {
             h4JNIFatalError(env, "VSgetattr: values not pinned");
@@ -972,11 +994,12 @@ Java_hdf_hdflib_HDFLibrary_VSgetattr
                     (int32) attr_index,  (VOIDP) arr);
 
             if (rval == FAIL) {
-                ENVPTR->ReleaseByteArrayElements(ENVPAR values,arr,JNI_ABORT);
+                ENVPTR->ReleaseByteArrayElements(ENVPAR values, arr, JNI_ABORT);
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
             }
             else {
-                ENVPTR->ReleaseByteArrayElements(ENVPAR values,arr,0);
+                ENVPTR->ReleaseByteArrayElements(ENVPAR values, arr, 0);
             }
         } /* end else */
     } /* end else */
@@ -992,8 +1015,10 @@ Java_hdf_hdflib_HDFLibrary_VSisattr
 
     rval = VSisattr((int32) id);
 
-    if (rval == FAIL)
+    if (rval == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -1027,8 +1052,10 @@ Java_hdf_hdflib_HDFLibrary_VSsetattr__JILjava_lang_String_2JILjava_lang_String_2
 
         UNPIN_JAVA_STRING_TWO(attr_name, str, values, val);
 
-        if (rval == FAIL)
+        if (rval == FAIL) {
             CALL_ERROR_CHECK();
+            return JNI_FALSE;
+        }
     }
 
     return JNI_TRUE;
@@ -1047,7 +1074,7 @@ Java_hdf_hdflib_HDFLibrary_VSsetattr__JILjava_lang_String_2JI_3B
         h4nullArgument(env, "VSsetattr: values is NULL");
     } /* end if */
     else {
-        arr = ENVPTR->GetByteArrayElements(ENVPAR values,&bb);
+        arr = ENVPTR->GetByteArrayElements(ENVPAR values, &bb);
 
         if (arr == NULL) {
             h4JNIFatalError(env, "VSsetattr: values not pinned");
@@ -1061,11 +1088,14 @@ Java_hdf_hdflib_HDFLibrary_VSsetattr__JILjava_lang_String_2JI_3B
 
                 UNPIN_JAVA_STRING(attr_name, str);
 
-                if (rval == FAIL)
+                if (rval == FAIL) {
                     CALL_ERROR_CHECK();
+                    ENVPTR->ReleaseByteArrayElements(ENVPAR values, arr, JNI_ABORT);
+                    return JNI_FALSE;
+                }
             }
 
-            ENVPTR->ReleaseByteArrayElements(ENVPAR values,arr,JNI_ABORT);
+            ENVPTR->ReleaseByteArrayElements(ENVPAR values, arr, JNI_ABORT);
         } /* end else */
     } /* end else */
 
diff --git a/java/src/jni/hdfvfImp.c b/java/src/jni/hdfvfImp.c
index b6907f35..e99d4cd2 100644
--- a/java/src/jni/hdfvfImp.c
+++ b/java/src/jni/hdfvfImp.c
@@ -8,7 +8,7 @@
  * notice, including terms governing use, modification, and redistribution,  *
  * is contained in the file, COPYING.  COPYING can be found at the root of   *
  * the source code distribution tree. You can also access it online  at      *
- * http://www.hdfgroup.org/products/licenses.html.  If you do not have       *
+ * http://support.hdfgroup.org/products/licenses.html.  If you do not have   *
  * access to the file, you may request a copy from help@hdfgroup.org.        *
  ****************************************************************************/
  /*
diff --git a/java/src/jni/hdfvgroupImp.c b/java/src/jni/hdfvgroupImp.c
index 4fe69d8c..b4cacc2f 100644
--- a/java/src/jni/hdfvgroupImp.c
+++ b/java/src/jni/hdfvgroupImp.c
@@ -8,7 +8,7 @@
  * notice, including terms governing use, modification, and redistribution,  *
  * is contained in the file, COPYING.  COPYING can be found at the root of   *
  * the source code distribution tree. You can also access it online  at      *
- * http://www.hdfgroup.org/products/licenses.html.  If you do not have       *
+ * http://support.hdfgroup.org/products/licenses.html.  If you do not have   *
  * access to the file, you may request a copy from help@hdfgroup.org.        *
  ****************************************************************************/
 /*
@@ -35,8 +35,10 @@ Java_hdf_hdflib_HDFLibrary_Vstart
 
     rval = Vstart((int32)fid);
 
-    if (rval == FAIL)
+    if (rval == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -103,10 +105,6 @@ Java_hdf_hdflib_HDFLibrary_Vgetclass
 (JNIEnv *env, jclass clss, jlong vgroup_id, jobjectArray hdfclassname)
 {
     char *className;
-    jstring rstring;
-    jclass jc;
-    jobject o;
-    jboolean bb;
 
     if (hdfclassname == NULL) {
         h4nullArgument(env, "Vgetclass: hdfclassname is NULL");
@@ -127,29 +125,34 @@ Java_hdf_hdflib_HDFLibrary_Vgetclass
                 CALL_ERROR_CHECK();
             } /* end if */
             else {
+                jstring rstring;
+                jclass sjc;
+                jobject o;
+                jboolean bb;
+
                 className[H4_MAX_NC_CLASS] = '\0';
 
                 /* convert it to java string */
                 rstring = ENVPTR->NewStringUTF(ENVPAR className);
 
                 /*  create a Java String object in the calling environment... */
-                jc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
-                if (jc == NULL) {
+                sjc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
+                if (sjc == NULL) {
                     HDfree(className);
-                    return ; /* exception is raised */
+                    return; /* exception is raised */
                 }
 
-                o = ENVPTR->GetObjectArrayElement(ENVPAR hdfclassname,0);
+                o = ENVPTR->GetObjectArrayElement(ENVPAR hdfclassname, 0);
                 if (o == NULL) {
                     HDfree(className);
-                    return ;
+                    return;
                 }
-                bb = ENVPTR->IsInstanceOf(ENVPAR o,jc);
+                bb = ENVPTR->IsInstanceOf(ENVPAR o, sjc);
                 if (bb == JNI_FALSE) {
                     HDfree(className);
-                    return ;
+                    return;
                 }
-                ENVPTR->SetObjectArrayElement(ENVPAR hdfclassname,0,(jobject)rstring);
+                ENVPTR->SetObjectArrayElement(ENVPAR hdfclassname, 0, (jobject)rstring);
                 ENVPTR->DeleteLocalRef(ENVPAR o);
             } /* end else */
 
@@ -165,10 +168,6 @@ Java_hdf_hdflib_HDFLibrary_Vgetname
 (JNIEnv *env, jclass clss, jlong vgroup_id, jobjectArray hdfname)
 {
     char *name;
-    jstring rstring;
-    jclass jc;
-    jobject o;
-    jboolean bb;
 
     if (hdfname == NULL) {
         h4nullArgument(env, "Vgetname: hdfname is NULL");
@@ -186,26 +185,32 @@ Java_hdf_hdflib_HDFLibrary_Vgetname
                 CALL_ERROR_CHECK();
             } /* end if */
             else {
+                jstring rstring;
+                jclass sjc;
+                jobject o;
+                jboolean bb;
+
                 name[H4_MAX_NC_NAME] = '\0';
 
+                /* convert it to java string */
                 rstring = ENVPTR->NewStringUTF(ENVPAR name);
 
-                jc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
-                if (jc == NULL) {
+                sjc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
+                if (sjc == NULL) {
                     HDfree(name);
-                    return ; /* exception is raised */
+                    return; /* exception is raised */
                 }
-                o = ENVPTR->GetObjectArrayElement(ENVPAR hdfname,0);
+                o = ENVPTR->GetObjectArrayElement(ENVPAR hdfname, 0);
                 if (o == NULL) {
                     HDfree(name);
-                    return ;
+                    return;
                 }
-                bb = ENVPTR->IsInstanceOf(ENVPAR o,jc);
+                bb = ENVPTR->IsInstanceOf(ENVPAR o, sjc);
                 if (bb == JNI_FALSE) {
                     HDfree(name);
-                    return ;
+                    return;
                 }
-                ENVPTR->SetObjectArrayElement(ENVPAR hdfname,0,(jobject)rstring);
+                ENVPTR->SetObjectArrayElement(ENVPAR hdfname, 0, (jobject)rstring);
                 ENVPTR->DeleteLocalRef(ENVPAR o);
             } /* end else */
 
@@ -224,8 +229,10 @@ Java_hdf_hdflib_HDFLibrary_Visvg
 
     rval = Visvg((int32)vgroup_id, vgroup_ref);
 
-    if (rval == FALSE)
+    if (rval == FALSE) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -238,8 +245,10 @@ Java_hdf_hdflib_HDFLibrary_Visvs
 
     rval = Visvs((int32)vgroup_id, vdata_ref);
 
-    if (rval == FALSE)
+    if (rval == FALSE) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -315,7 +324,7 @@ Java_hdf_hdflib_HDFLibrary_Vgettagref
         h4badArgument(env, "Vgettagref: output array tagref < order 2");
     } /* end else if */
     else {
-        theArgs = ENVPTR->GetIntArrayElements(ENVPAR tagref,&bb);
+        theArgs = ENVPTR->GetIntArrayElements(ENVPAR tagref, &bb);
 
         if (theArgs == NULL) {
             h4JNIFatalError(env, "Vgettagref: tagref not pinned");
@@ -326,11 +335,12 @@ Java_hdf_hdflib_HDFLibrary_Vgettagref
                     (int32 *)&(theArgs[1]));
 
             if (retVal == FAIL) {
-                ENVPTR->ReleaseIntArrayElements(ENVPAR tagref,theArgs,JNI_ABORT);
+                ENVPTR->ReleaseIntArrayElements(ENVPAR tagref, theArgs, JNI_ABORT);
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
             }
             else {
-                ENVPTR->ReleaseIntArrayElements(ENVPAR tagref,theArgs,0);
+                ENVPTR->ReleaseIntArrayElements(ENVPAR tagref, theArgs, 0);
             }
         } /* end else */
     } /* end else */
@@ -379,7 +389,7 @@ Java_hdf_hdflib_HDFLibrary_Vlone
         h4badArgument(env, "Vlone: output array ref_array < order 'arraysize'");
     } /* end else if */
     else {
-        arr = ENVPTR->GetIntArrayElements(ENVPAR ref_array,&bb);
+        arr = ENVPTR->GetIntArrayElements(ENVPAR ref_array, &bb);
 
         if (arr == NULL) {
             h4JNIFatalError(env, "Vlone: ref_array not pinned");
@@ -391,7 +401,7 @@ Java_hdf_hdflib_HDFLibrary_Vlone
             if (retVal == FAIL)
                 CALL_ERROR_CHECK();
 
-            ENVPTR->ReleaseIntArrayElements(ENVPAR ref_array,arr, 0);
+            ENVPTR->ReleaseIntArrayElements(ENVPAR ref_array, arr, 0);
         } /* end else */
     } /* end else */
 
@@ -431,8 +441,10 @@ Java_hdf_hdflib_HDFLibrary_Vclose_I
     intn rval;
 
     rval =  Vclose((int32) file_id);
-    if (rval == FAIL)
+    if (rval == FAIL) {
         CALL_ERROR_CHECK();
+        return JNI_FALSE;
+    }
 
     return JNI_TRUE;
 }
@@ -507,7 +519,7 @@ Java_hdf_hdflib_HDFLibrary_Vgetnext
 {
     int32 rval;
 
-    rval = Vgetnext((int32) vkey, (int32) elem_ref);
+    rval = Vgetnext((int32)vkey, (int32)elem_ref);
     if (rval == FAIL)
         CALL_ERROR_CHECK();
 
@@ -519,12 +531,9 @@ Java_hdf_hdflib_HDFLibrary_Vinquire
 (JNIEnv *env, jclass clss, jlong vgroup_id, jintArray n_entries, jobjectArray vgroup_name)
 {
     intn rval;
-    jclass jc;
-    jstring rstring;
     char *name;
-    jint * theArg;
-    jobject o;
-    jboolean bb;
+    jint *theArg;
+    jboolean isCopy;
 
     if (n_entries == NULL) {
         h4nullArgument(env, "Vinquire: n_entries is NULL");
@@ -545,7 +554,7 @@ Java_hdf_hdflib_HDFLibrary_Vinquire
             h4outOfMemory(env,  "Vinquire");
         } /* end if */
         else {
-            theArg = ENVPTR->GetIntArrayElements(ENVPAR n_entries,&bb);
+            theArg = ENVPTR->GetIntArrayElements(ENVPAR n_entries, &isCopy);
 
             if (theArg == NULL) {
                 h4JNIFatalError(env, "Vinquire: n_entries not pinned");
@@ -556,30 +565,39 @@ Java_hdf_hdflib_HDFLibrary_Vinquire
                 name[H4_MAX_NC_NAME] = '\0';
 
                 if (rval == FAIL) {
-                    ENVPTR->ReleaseIntArrayElements(ENVPAR n_entries,theArg, JNI_ABORT);
+                    ENVPTR->ReleaseIntArrayElements(ENVPAR n_entries, theArg, JNI_ABORT);
+                    HDfree(name);
                     CALL_ERROR_CHECK();
+                    return JNI_FALSE;
                 }
                 else {
-                    ENVPTR->ReleaseIntArrayElements(ENVPAR n_entries,theArg, 0);
+                    jclass sjc;
+                    jstring rstring;
+                    jobject o;
+                    jboolean bb;
+
+                    ENVPTR->ReleaseIntArrayElements(ENVPAR n_entries, theArg, 0);
+
+                    /* convert it to java string */
+                    rstring = ENVPTR->NewStringUTF(ENVPAR name);
 
-                    jc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
-                    if (jc == NULL) {
+                    sjc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
+                    if (sjc == NULL) {
                         HDfree(name);
                         return JNI_FALSE;
                     }
-                    o = ENVPTR->GetObjectArrayElement(ENVPAR vgroup_name,0);
+                    o = ENVPTR->GetObjectArrayElement(ENVPAR vgroup_name, 0);
                     if (o == NULL) {
                         HDfree(name);
                         return JNI_FALSE;
                     }
-                    bb = ENVPTR->IsInstanceOf(ENVPAR o,jc);
-                    if (bb == JNI_FALSE) {
-                        HDfree(name);
-                        return JNI_FALSE;
-                    }
-                    rstring = ENVPTR->NewStringUTF(ENVPAR name);
-                    ENVPTR->SetObjectArrayElement(ENVPAR vgroup_name,0,(jobject)rstring);
+                    bb = ENVPTR->IsInstanceOf(ENVPAR o, sjc);
+                    if (bb == JNI_TRUE)
+                        ENVPTR->SetObjectArrayElement(ENVPAR vgroup_name, 0, (jobject)rstring);
                     ENVPTR->DeleteLocalRef(ENVPAR o);
+
+                    HDfree(name);
+                    return bb;
                 } /* end else */
             } /* end else */
 
@@ -635,7 +653,7 @@ Java_hdf_hdflib_HDFLibrary_Vopen
             CALL_ERROR_CHECK();
     }
 
-    return rval;
+    return (jint)rval;
 }
 
 JNIEXPORT jboolean JNICALL
@@ -652,8 +670,10 @@ Java_hdf_hdflib_HDFLibrary_Vsetclass
 
         UNPIN_JAVA_STRING(hdfclassname, str);
 
-        if (rval == FAIL)
+        if (rval == FAIL) {
             CALL_ERROR_CHECK();
+            return JNI_FALSE;
+        }
     }
 
     return JNI_TRUE;
@@ -674,8 +694,10 @@ Java_hdf_hdflib_HDFLibrary_Vsetname
 
         UNPIN_JAVA_STRING(name, str);
 
-        if (rval == FAIL)
+        if (rval == FAIL) {
             CALL_ERROR_CHECK();
+            return JNI_FALSE;
+        }
     }
 
     return JNI_TRUE;
@@ -687,11 +709,8 @@ Java_hdf_hdflib_HDFLibrary_Vattrinfo
 {
     int32 retVal;
     jint *theArgs;
-    jboolean bb;
-    jclass Sjc;
-    jstring str;
-    jobject o;
     char  nam[256];  /* what is the correct constant??? */
+    jboolean isCopy;
 
     if (name == NULL) {
         h4nullArgument(env, "Vattrinfo: name is NULL");
@@ -706,7 +725,7 @@ Java_hdf_hdflib_HDFLibrary_Vattrinfo
         h4badArgument(env, "Vattrinfo: output array argv < order 5");
     } /* end else if */
     else {
-        theArgs = ENVPTR->GetIntArrayElements(ENVPAR argv,&bb);
+        theArgs = ENVPTR->GetIntArrayElements(ENVPAR argv,&isCopy);
 
         if (theArgs == NULL) {
             h4JNIFatalError(env, "Vattrinfo: argv not pinned");
@@ -721,25 +740,32 @@ Java_hdf_hdflib_HDFLibrary_Vattrinfo
             if (retVal == FAIL) {
                 ENVPTR->ReleaseIntArrayElements(ENVPAR argv,theArgs,JNI_ABORT);
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
             }
             else {
+                jstring rstring;
+                jclass sjc;
+                jobject o;
+                jboolean bb;
+
+                /* convert it to java string */
+                rstring = ENVPTR->NewStringUTF(ENVPAR nam);
+
                 ENVPTR->ReleaseIntArrayElements(ENVPAR argv,theArgs,0);
 
-                str = ENVPTR->NewStringUTF(ENVPAR nam);
-                o = ENVPTR->GetObjectArrayElement(ENVPAR name,0);
-                if (o == NULL) {
+                sjc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
+                if (sjc == NULL) {
                     return JNI_FALSE;
                 }
-                Sjc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
-                if (Sjc == NULL) {
-                    return JNI_FALSE;
-                }
-                bb = ENVPTR->IsInstanceOf(ENVPAR o,Sjc);
-                if (bb == JNI_FALSE) {
+                o = ENVPTR->GetObjectArrayElement(ENVPAR name, 0);
+                if (o == NULL) {
                     return JNI_FALSE;
                 }
-                ENVPTR->SetObjectArrayElement(ENVPAR name,0,(jobject)str);
+                bb = ENVPTR->IsInstanceOf(ENVPAR o, sjc);
+                if (bb == JNI_TRUE)
+                    ENVPTR->SetObjectArrayElement(ENVPAR name, 0, (jobject)rstring);
                 ENVPTR->DeleteLocalRef(ENVPAR o);
+                return bb;
             }
         } /* end else */
     } /* end else */
@@ -789,11 +815,12 @@ Java_hdf_hdflib_HDFLibrary_Vgetattr
             rval = Vgetattr2((int32) gr_id, (int32) attr_index,  (VOIDP) arr);
 
             if (rval == FAIL) {
-                ENVPTR->ReleaseByteArrayElements(ENVPAR values,arr,JNI_ABORT);
+                ENVPTR->ReleaseByteArrayElements(ENVPAR values, arr, JNI_ABORT);
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
             } /* end if */
             else {
-                ENVPTR->ReleaseByteArrayElements(ENVPAR values,arr,0);
+                ENVPTR->ReleaseByteArrayElements(ENVPAR values, arr, 0);
             } /* end else */
         } /* end else */
     } /* end else */
@@ -840,11 +867,12 @@ Java_hdf_hdflib_HDFLibrary_Vsetattr__JLjava_lang_String_2JILjava_lang_String_2
     if (str != NULL && val != NULL) {
         rval = Vsetattr((int32) gr_id, (char *)str, (int32) data_type,
                 (int32) count, (VOIDP) val);
+        UNPIN_JAVA_STRING_TWO(attr_name, str, values, val);
 
-        if (rval == FAIL)
+        if (rval == FAIL) {
             CALL_ERROR_CHECK();
-
-        UNPIN_JAVA_STRING_TWO(attr_name, str, values, val);
+            return JNI_FALSE;
+        }
     }
 
     return JNI_TRUE;
@@ -877,11 +905,14 @@ Java_hdf_hdflib_HDFLibrary_Vsetattr__JLjava_lang_String_2JI_3B
 
                 UNPIN_JAVA_STRING(attr_name, str);
 
-                if (rval == FAIL)
+                if (rval == FAIL) {
                     CALL_ERROR_CHECK();
+                    ENVPTR->ReleaseByteArrayElements(ENVPAR values, arr, JNI_ABORT);
+                    return JNI_FALSE;
+                }
             }
 
-            ENVPTR->ReleaseByteArrayElements(ENVPAR values,arr,JNI_ABORT);
+            ENVPTR->ReleaseByteArrayElements(ENVPAR values, arr, JNI_ABORT);
         } /* end else */
     } /* end else */
 
diff --git a/java/src/jni/hdfvhImp.c b/java/src/jni/hdfvhImp.c
index d8438b53..3b20d719 100644
--- a/java/src/jni/hdfvhImp.c
+++ b/java/src/jni/hdfvhImp.c
@@ -8,7 +8,7 @@
  * notice, including terms governing use, modification, and redistribution,  *
  * is contained in the file, COPYING.  COPYING can be found at the root of   *
  * the source code distribution tree. You can also access it online  at      *
- * http://www.hdfgroup.org/products/licenses.html.  If you do not have       *
+ * http://support.hdfgroup.org/products/licenses.html.  If you do not have   *
  * access to the file, you may request a copy from help@hdfgroup.org.        *
  ****************************************************************************/
 /*
diff --git a/java/src/jni/hdfvqImp.c b/java/src/jni/hdfvqImp.c
index 548070fd..e246c1fd 100644
--- a/java/src/jni/hdfvqImp.c
+++ b/java/src/jni/hdfvqImp.c
@@ -8,7 +8,7 @@
  * notice, including terms governing use, modification, and redistribution,  *
  * is contained in the file, COPYING.  COPYING can be found at the root of   *
  * the source code distribution tree. You can also access it online  at      *
- * http://www.hdfgroup.org/products/licenses.html.  If you do not have       *
+ * http://support.hdfgroup.org/products/licenses.html.  If you do not have   *
  * access to the file, you may request a copy from help@hdfgroup.org.        *
  ****************************************************************************/
 /*
diff --git a/java/src/jni/hdfvsqImp.c b/java/src/jni/hdfvsqImp.c
index 487449f9..4b58fcc5 100644
--- a/java/src/jni/hdfvsqImp.c
+++ b/java/src/jni/hdfvsqImp.c
@@ -8,7 +8,7 @@
  * notice, including terms governing use, modification, and redistribution,  *
  * is contained in the file, COPYING.  COPYING can be found at the root of   *
  * the source code distribution tree. You can also access it online  at      *
- * http://www.hdfgroup.org/products/licenses.html.  If you do not have       *
+ * http://support.hdfgroup.org/products/licenses.html.  If you do not have   *
  * access to the file, you may request a copy from help@hdfgroup.org.        *
  ****************************************************************************/
 
@@ -55,6 +55,7 @@ Java_hdf_hdflib_HDFLibrary_VSQuerycount
             if (rval == FAIL) {
                 ENVPTR->ReleaseIntArrayElements(ENVPAR n_records,theArg,JNI_ABORT);
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
             }
             else {
                 ENVPTR->ReleaseIntArrayElements(ENVPAR n_records,theArg,0);
@@ -71,10 +72,6 @@ Java_hdf_hdflib_HDFLibrary_VSQueryfields
 {
     intn rval;
     char flds[4096];
-    jstring rstring;
-    jclass jc;
-    jobject o;
-    jboolean bb;
 
     if (fields == NULL) {
         h4nullArgument(env, "VSQueryfields: fields is NULL");
@@ -88,28 +85,32 @@ Java_hdf_hdflib_HDFLibrary_VSQueryfields
 
         if (rval == FAIL) {
             CALL_ERROR_CHECK();
+            return JNI_FALSE;
         }
         else {
+            jstring rstring;
+            jclass sjc;
+            jobject o;
+            jboolean bb;
+
             /* convert it to java string */
             rstring = ENVPTR->NewStringUTF(ENVPAR flds);
 
             /*  create a Java String object in the calling environment... */
-            jc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
-            if (jc == NULL) {
+            sjc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
+            if (sjc == NULL) {
                 return JNI_FALSE; /* exception is raised */
             }
-            o = ENVPTR->GetObjectArrayElement(ENVPAR fields,0);
+            o = ENVPTR->GetObjectArrayElement(ENVPAR fields, 0);
             if (o == NULL) {
                 return JNI_FALSE;
             }
-            bb = ENVPTR->IsInstanceOf(ENVPAR o,jc);
-            if (bb == JNI_FALSE) {
-                return JNI_FALSE;
-            }
-            ENVPTR->SetObjectArrayElement(ENVPAR fields,0,(jobject)rstring);
+            bb = ENVPTR->IsInstanceOf(ENVPAR o, sjc);
+            if (bb == JNI_TRUE)
+                ENVPTR->SetObjectArrayElement(ENVPAR fields, 0, (jobject)rstring);
             ENVPTR->DeleteLocalRef(ENVPAR o);
 
-            return JNI_TRUE;
+            return bb;
         } /* end else */
     } /* end else */
 
@@ -142,6 +143,7 @@ Java_hdf_hdflib_HDFLibrary_VSQueryinterlace
             if (rval == FAIL) {
                 ENVPTR->ReleaseIntArrayElements(ENVPAR interlace,theArg,JNI_ABORT);
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
             }
             else {
                 ENVPTR->ReleaseIntArrayElements(ENVPAR interlace,theArg,0);
@@ -160,10 +162,6 @@ Java_hdf_hdflib_HDFLibrary_VSQueryname
 {
     intn rval;
     char *nm;
-    jstring rstring;
-    jclass jc;
-    jobject o;
-    jboolean bb;
 
     if (vdata_name == NULL) {
         h4nullArgument(env, "VSQueryname: vdata_name is NULL");
@@ -183,32 +181,38 @@ Java_hdf_hdflib_HDFLibrary_VSQueryname
 
             if (rval == FAIL) {
                 CALL_ERROR_CHECK();
-            } /* end if */
+                HDfree(nm);
+                return JNI_FALSE;
+            }
             else {
+                jstring rstring;
+                jclass sjc;
+                jobject o;
+                jboolean bb;
+
                 /* convert it to java string */
                 rstring = ENVPTR->NewStringUTF(ENVPAR nm);
 
                 /*  create a Java String object in the calling environment... */
-                jc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
-                if (jc == NULL) {
+                sjc = ENVPTR->FindClass(ENVPAR  "java/lang/String");
+                if (sjc == NULL) {
                     HDfree(nm);
                     return JNI_FALSE; /* exception is raised */
                 }
-                o = ENVPTR->GetObjectArrayElement(ENVPAR vdata_name,0);
+                o = ENVPTR->GetObjectArrayElement(ENVPAR vdata_name, 0);
                 if (o == NULL) {
                     HDfree(nm);
                     return JNI_FALSE;
                 }
-                bb = ENVPTR->IsInstanceOf(ENVPAR o,jc);
-                if (bb == JNI_FALSE) {
-                    free(nm);
-                    return JNI_FALSE;
-                }
-                ENVPTR->SetObjectArrayElement(ENVPAR vdata_name,0,(jobject)rstring);
+                bb = ENVPTR->IsInstanceOf(ENVPAR o, sjc);
+                if (bb == JNI_TRUE)
+                    ENVPTR->SetObjectArrayElement(ENVPAR vdata_name, 0, (jobject)rstring);
                 ENVPTR->DeleteLocalRef(ENVPAR o);
+
+                HDfree(nm);
+                return bb;
             } /* end else */
 
-            HDfree(nm);
         } /* end else */
     } /* end else */
 
@@ -256,7 +260,7 @@ Java_hdf_hdflib_HDFLibrary_VSQueryvsize
         h4badArgument(env, "VSQueryvsize: output array vdata_size < order 1");
     } /* end else if */
     else {
-        theArg = ENVPTR->GetIntArrayElements(ENVPAR vdata_size,&bb);
+        theArg = ENVPTR->GetIntArrayElements(ENVPAR vdata_size, &bb);
 
         if (theArg == NULL) {
             h4JNIFatalError(env, "VSQuerysize: vdata_size not pinned");
@@ -265,11 +269,12 @@ Java_hdf_hdflib_HDFLibrary_VSQueryvsize
             rval = VSQueryvsize((int32) vdata_id, (int32 *)&(theArg[0]));
 
             if (rval == FAIL) {
-                ENVPTR->ReleaseIntArrayElements(ENVPAR vdata_size,theArg,JNI_ABORT);
+                ENVPTR->ReleaseIntArrayElements(ENVPAR vdata_size, theArg, JNI_ABORT);
                 CALL_ERROR_CHECK();
+                return JNI_FALSE;
             }
             else {
-                ENVPTR->ReleaseIntArrayElements(ENVPAR vdata_size,theArg,0);
+                ENVPTR->ReleaseIntArrayElements(ENVPAR vdata_size, theArg, 0);
             }
         } /* end else */
     } /* end else */
diff --git a/java/test/CMakeLists.txt b/java/test/CMakeLists.txt
index 0393e161..6ae467e6 100644
--- a/java/test/CMakeLists.txt
+++ b/java/test/CMakeLists.txt
@@ -44,15 +44,9 @@ set (HDF_JAVA_TEST_FILES
 )
 
 foreach (h4_file ${HDF_JAVA_TEST_FILES})
-  set (dest "${PROJECT_BINARY_DIR}/${h4_file}")
-  #message (STATUS " Copying ${h4_file}")
-  add_custom_command (
-      TARGET     ${HDF4_JAVA_TEST_LIB_TARGET}
-      POST_BUILD
-      COMMAND    ${CMAKE_COMMAND}
-      ARGS       -E copy_if_different ${PROJECT_SOURCE_DIR}/${h4_file} ${dest}
-  )
+  HDFTEST_COPY_FILE("${PROJECT_SOURCE_DIR}/${h4_file}" "${PROJECT_BINARY_DIR}/${h4_file}" "java_test_files")
 endforeach ()
+add_custom_target(java_test_files ALL COMMENT "Copying files needed by java tests" DEPENDS ${java_test_files_list})
 
 if (WIN32)
   set (CMAKE_JAVA_INCLUDE_FLAG_SEP ";")
@@ -67,14 +61,7 @@ endforeach ()
 set (CMAKE_JAVA_CLASSPATH "${CMAKE_JAVA_CLASSPATH}${CMAKE_JAVA_INCLUDE_FLAG_SEP}${${HDF4_JAVA_TEST_LIB_TARGET}_JAR_FILE}")
 set (testfilter "OK (598 tests)")
 
-if (CMAKE_BUILD_TYPE MATCHES Debug)
-  if (WIN32)
-    set (CMD_ARGS "-Dhdf.hdflib.HDFLibrary.loadLibraryName=hdf_java_D;")
-  else()
-    set (CMD_ARGS "-Dhdf.hdflib.HDFLibrary.loadLibraryName=hdf_java_debug;")
-  endif()
-endif()
-
+set (CMD_ARGS "-Dhdf.hdflib.HDFLibrary.loadLibraryName=$<TARGET_PROPERTY:${HDF4_JAVA_JNI_LIB_TARGET},OUTPUT_NAME$<$<CONFIG:Debug>:_DEBUG>>;")
 add_test (
   NAME JUnit-interface-clearall-objects
   COMMAND    ${CMAKE_COMMAND}
diff --git a/man/hdf.1 b/man/hdf.1
index be59c30b..42759970 100644
--- a/man/hdf.1
+++ b/man/hdf.1
@@ -1,5 +1,5 @@
 .\" $Id$
-.TH HDF 1 "June 2017" "THG HDF 4.2.13"
+.TH HDF 1 "July 2017" "THG HDF 4.2.13-post0"
 .SH NAME
 hdf \- Hierarchical Data Format library
 .SH SYNOPSIS
@@ -135,7 +135,7 @@ USA
 www.hdfgroup.org
 
 .SH VERSION
-4.2.13 
+4.2.13-post0 currently under development 
 .SH LICENSE & SOURCE AVAILABILITY
 Copyright by The HDF Group.
 .sp 0
diff --git a/mfhdf/CMakeLists.txt b/mfhdf/CMakeLists.txt
index ba6a719a..36b2f3cd 100644
--- a/mfhdf/CMakeLists.txt
+++ b/mfhdf/CMakeLists.txt
@@ -8,14 +8,14 @@ if (EXISTS "${HDF4_MFHDF_SOURCE_DIR}/dumper" AND IS_DIRECTORY "${HDF4_MFHDF_SOUR
   option (HDF4_BUILD_TOOLS  "Build HDF4 Tools" OFF)
   if (HDF4_BUILD_TOOLS)
     set (NCGEN_UTILITY 0)
-    add_subdirectory (${HDF4_MFHDF_SOURCE_DIR}/dumper      ${HDF4_MFHDF_BINARY_DIR}/dumper)
-    add_subdirectory (${HDF4_MFHDF_SOURCE_DIR}/hdfimport   ${HDF4_MFHDF_BINARY_DIR}/hdfimport)
-    add_subdirectory (${HDF4_MFHDF_SOURCE_DIR}/hdiff       ${HDF4_MFHDF_BINARY_DIR}/hdiff)
-    add_subdirectory (${HDF4_MFHDF_SOURCE_DIR}/hrepack     ${HDF4_MFHDF_BINARY_DIR}/hrepack)
-    add_subdirectory (${HDF4_MFHDF_SOURCE_DIR}/ncgen       ${HDF4_MFHDF_BINARY_DIR}/ncgen)
-    add_subdirectory (${HDF4_MFHDF_SOURCE_DIR}/ncdump      ${HDF4_MFHDF_BINARY_DIR}/ncdump)
+    add_subdirectory (dumper)
+    add_subdirectory (hdfimport)
+    add_subdirectory (hdiff)
+    add_subdirectory (hrepack)
+    add_subdirectory (ncgen)
+    add_subdirectory (ncdump)
     if (BUILD_TESTING)
-      add_subdirectory (${HDF4_MFHDF_SOURCE_DIR}/nctest    ${HDF4_MFHDF_BINARY_DIR}/nctest)
+      add_subdirectory (nctest)
     endif ( )
   endif ()
 endif ()
diff --git a/mfhdf/dumper/CMakeLists.txt b/mfhdf/dumper/CMakeLists.txt
index 401bda0e..881d0c2a 100644
--- a/mfhdf/dumper/CMakeLists.txt
+++ b/mfhdf/dumper/CMakeLists.txt
@@ -27,12 +27,9 @@ if (HDF4_BUILD_XDR_LIB)
   if (WIN32)
     add_definitions (-DNO_SYS_XDR_INC)
   endif ()
-  INCLUDE_DIRECTORIES (${HDF4_MFHDF_XDR_DIR})
-  target_link_libraries (hdp ${HDF4_MF_XDR_LIB_TARGET})
 endif ()
 TARGET_C_PROPERTIES (hdp STATIC " " " ")
-target_link_libraries (hdp ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
-TARGET_NAMING (hdp STATIC)
+target_link_libraries (hdp ${HDF4_MF_LIB_TARGET})
 if (WIN32)
   set_target_properties (hdp PROPERTIES LINK_FLAGS "/STACK:10000000")
 endif ()
diff --git a/mfhdf/dumper/CMakeTests.cmake b/mfhdf/dumper/CMakeTests.cmake
index 5528036a..3ee188cf 100644
--- a/mfhdf/dumper/CMakeTests.cmake
+++ b/mfhdf/dumper/CMakeTests.cmake
@@ -129,27 +129,10 @@
       list-9.out
   )
 
-  foreach (h4_file ${HDF4_REFERENCE_TEST_FILES})
-    set (dest "${PROJECT_BINARY_DIR}/${h4_file}")
-    #message (STATUS " Copying ${HDF4_MFHDF_DUMPER_SOURCE_DIR}/testfiles/${h4_file} to ${PROJECT_BINARY_DIR}/")
-    ADD_CUSTOM_COMMAND (
-        TARGET     hdp
-        POST_BUILD
-        COMMAND    ${CMAKE_COMMAND}
-        ARGS       -E copy_if_different ${HDF4_MFHDF_DUMPER_SOURCE_DIR}/testfiles/${h4_file} ${dest}
-    )
-  endforeach ()
-
-  foreach (out_file ${HDF4_REFERENCE_FILES})
-    set (outdest "${PROJECT_BINARY_DIR}/${out_file}")
-    #message (STATUS " Translating ${out_file}")
-    ADD_CUSTOM_COMMAND (
-        TARGET     hdp
-        POST_BUILD
-        COMMAND    ${CMAKE_COMMAND}
-        ARGS       -E copy_if_different ${HDF4_MFHDF_DUMPER_SOURCE_DIR}/testfiles/${out_file} ${outdest}
-    )
+  foreach (h4_file ${HDF4_REFERENCE_TEST_FILES} ${HDF4_REFERENCE_FILES})
+    HDFTEST_COPY_FILE("${HDF4_MFHDF_DUMPER_SOURCE_DIR}/testfiles/${h4_file}" "${PROJECT_BINARY_DIR}/${h4_file}" "dumper_files")
   endforeach ()
+  add_custom_target(dumper_files ALL COMMENT "Copying files needed by dumper tests" DEPENDS ${dumper_files_list})
 
 ##############################################################################
 ##############################################################################
diff --git a/mfhdf/examples/CMakeLists.txt b/mfhdf/examples/CMakeLists.txt
index 0cdff6b3..d81c4ff8 100644
--- a/mfhdf/examples/CMakeLists.txt
+++ b/mfhdf/examples/CMakeLists.txt
@@ -25,13 +25,8 @@ set (examples
 
 foreach (example ${examples})
   add_executable (mf_${example} ${HDF4_MFHDF_EXAMPLES_SOURCE_DIR}/${example}.c)
-  TARGET_NAMING (mf_${example} STATIC)
   TARGET_C_PROPERTIES (mf_${example} STATIC " " " ")
-  if (HDF4_BUILD_XDR_LIB)
-    target_link_libraries (mf_${example} ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS} ${HDF4_MF_XDR_LIB_TARGET})
-  else ()
-    target_link_libraries (mf_${example} ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
-  endif ()
+  target_link_libraries (mf_${example} ${HDF4_MF_LIB_TARGET})
 endforeach (example ${examples})
 
 if (BUILD_TESTING)
diff --git a/mfhdf/fortran/CMakeLists.txt b/mfhdf/fortran/CMakeLists.txt
index 49a9a250..992aa0e1 100644
--- a/mfhdf/fortran/CMakeLists.txt
+++ b/mfhdf/fortran/CMakeLists.txt
@@ -41,12 +41,8 @@ set (FORTRAN_SRC_DIR ${CMAKE_CURRENT_SOURCE_DIR})
 # Add Main fortran library
 #-----------------------------------------------------------------------------
 add_library (${HDF4_MF_FCSTUB_LIB_TARGET} STATIC ${HDF4_MFHDF_LIBSRC_CSTUB_FSRCS} ${HDF4_MFHDF_LIBSRC_CSTUB_FHDRS} ${HDF4_HDF_SRC_CHDRS} ${HDF4_HDFSOURCE_DIR}/hproto_fortran.h)
-if (HDF4_BUILD_XDR_LIB)
-  INCLUDE_DIRECTORIES (${HDF4_MFHDF_XDR_DIR})
-  target_link_libraries (${HDF4_MF_FCSTUB_LIB_TARGET} ${HDF4_MF_XDR_LIB_TARGET})
-endif ()
 TARGET_C_PROPERTIES (${HDF4_MF_FCSTUB_LIB_TARGET} STATIC " " " ")
-target_link_libraries (${HDF4_MF_FCSTUB_LIB_TARGET} ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET})
+target_link_libraries (${HDF4_MF_FCSTUB_LIB_TARGET} PUBLIC ${HDF4_MF_LIB_TARGET})
 set_global_variable (HDF4_LIBRARIES_TO_EXPORT "${HDF4_LIBRARIES_TO_EXPORT};${HDF4_MF_FCSTUB_LIB_TARGET}")
 H4_SET_LIB_OPTIONS (${HDF4_MF_FCSTUB_LIB_TARGET} ${HDF4_MF_FCSTUB_LIB_NAME} STATIC)
 set_target_properties (${HDF4_MF_FCSTUB_LIB_TARGET} PROPERTIES
@@ -65,12 +61,8 @@ set (install_targets ${HDF4_MF_FCSTUB_LIB_TARGET})
 
 if (BUILD_SHARED_LIBS)
   add_library (${HDF4_MF_FCSTUB_LIBSH_TARGET} SHARED ${HDF4_MFHDF_LIBSRC_CSTUB_FSRCS} ${HDF4_MFHDF_LIBSRC_CSTUB_FHDRS} ${HDF4_HDF_SRC_CHDRS} ${HDF4_HDFSOURCE_DIR}/hproto_fortran.h)
-  if (HDF4_BUILD_XDR_LIB)
-    INCLUDE_DIRECTORIES (${HDF4_MFHDF_XDR_DIR})
-    target_link_libraries (${HDF4_MF_FCSTUB_LIBSH_TARGET} ${HDF4_MF_XDR_LIBSH_TARGET})
-  endif ()
   TARGET_C_PROPERTIES (${HDF4_MF_FCSTUB_LIBSH_TARGET} SHARED " " " ")
-  target_link_libraries (${HDF4_MF_FCSTUB_LIBSH_TARGET} ${HDF4_MF_LIBSH_TARGET} ${HDF4_SRC_LIBSH_TARGET})
+  target_link_libraries (${HDF4_MF_FCSTUB_LIBSH_TARGET} PUBLIC ${HDF4_MF_LIBSH_TARGET})
   set_global_variable (HDF4_LIBRARIES_TO_EXPORT "${HDF4_LIBRARIES_TO_EXPORT};${HDF4_MF_FCSTUB_LIBSH_TARGET}")
   H4_SET_LIB_OPTIONS (${HDF4_MF_FCSTUB_LIBSH_TARGET} ${HDF4_MF_FCSTUB_LIB_NAME} SHARED)
   set_target_properties (${HDF4_MF_FCSTUB_LIBSH_TARGET} PROPERTIES
@@ -97,7 +89,7 @@ set_source_files_properties (${HDF4_MF_FORTRAN_SRCS} PROPERTIES LANGUAGE Fortran
 add_library (${HDF4_MF_FORTRAN_LIB_TARGET} STATIC ${HDF4_MF_FORTRAN_SRCS})
 set (SHARED_LINK_FLAGS " ")
 TARGET_FORTRAN_PROPERTIES (${HDF4_MF_FORTRAN_LIB_TARGET} STATIC " " ${SHARED_LINK_FLAGS})
-target_link_libraries (${HDF4_MF_FORTRAN_LIB_TARGET} ${HDF4_MF_FCSTUB_LIB_TARGET} ${LINK_LIBS})
+target_link_libraries (${HDF4_MF_FORTRAN_LIB_TARGET} PUBLIC ${HDF4_MF_FCSTUB_LIB_TARGET})
 set_global_variable (HDF4_LIBRARIES_TO_EXPORT "${HDF4_LIBRARIES_TO_EXPORT};${HDF4_MF_FORTRAN_LIB_TARGET}")
 H4_SET_LIB_OPTIONS (${HDF4_MF_FORTRAN_LIB_TARGET} ${HDF4_MF_FORTRAN_LIB_NAME} STATIC)
 set_target_properties (${HDF4_MF_FORTRAN_LIB_TARGET} PROPERTIES
@@ -118,7 +110,7 @@ if (BUILD_SHARED_LIBS)
     set (SHARED_LINK_FLAGS "/DLL /DEF:${HDF4_MFHDF_FORTRAN_SOURCE_DIR}/mfhdf_fortrandll.def")
   endif ()
   TARGET_FORTRAN_PROPERTIES (${HDF4_MF_FORTRAN_LIBSH_TARGET} SHARED " " ${SHARED_LINK_FLAGS})
-  target_link_libraries (${HDF4_MF_FORTRAN_LIBSH_TARGET} ${HDF4_MF_FCSTUB_LIBSH_TARGET} ${LINK_SHARED_LIBS})
+  target_link_libraries (${HDF4_MF_FORTRAN_LIBSH_TARGET} PUBLIC ${HDF4_MF_FCSTUB_LIBSH_TARGET})
   set_global_variable (HDF4_LIBRARIES_TO_EXPORT "${HDF4_LIBRARIES_TO_EXPORT};${HDF4_MF_FORTRAN_LIBSH_TARGET}")
   H4_SET_LIB_OPTIONS (${HDF4_MF_FORTRAN_LIBSH_TARGET} ${HDF4_MF_FORTRAN_LIB_NAME} SHARED)
   set_target_properties (${HDF4_MF_FORTRAN_LIBSH_TARGET} PROPERTIES
diff --git a/mfhdf/fortran/CMakeTests.cmake b/mfhdf/fortran/CMakeTests.cmake
index a23b69f4..c7b1d55c 100644
--- a/mfhdf/fortran/CMakeTests.cmake
+++ b/mfhdf/fortran/CMakeTests.cmake
@@ -13,14 +13,9 @@
   if (HDF4_ENABLE_NETCDF)
     #-- Adding test for ftest
     add_executable (ftest ${HDF4_BINARY_DIR}/ftest.f ${HDF4_HDF_TESTSOURCE_DIR}/forsupff.f ${HDF4_BINARY_DIR}/netcdf.inc)
-    TARGET_NAMING (ftest STATIC)
     TARGET_FORTRAN_PROPERTIES (ftest STATIC " " " ")
     set_target_properties (ftest PROPERTIES LINKER_LANGUAGE Fortran)
-    if (HDF4_BUILD_XDR_LIB)
-      target_link_libraries (ftest ${HDF4_MF_FORTRAN_LIB_TARGET} ${HDF4_HDF_TEST_FCSTUB_LIB_TARGET} ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${HDF4_MF_XDR_LIB_TARGET} ${LINK_LIBS})
-    else ()
-      target_link_libraries (ftest ${HDF4_MF_FORTRAN_LIB_TARGET} ${HDF4_HDF_TEST_FCSTUB_LIB_TARGET} ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
-    endif ()
+    target_link_libraries (ftest ${HDF4_MF_FORTRAN_LIB_TARGET} ${HDF4_HDF_TEST_FCSTUB_LIB_TARGET})
 
     #-- Copy all the dat files from the test directory into the source directory
     set (HDF4_REFERENCE_TEST_FILES
@@ -28,51 +23,30 @@
       test_nc.nc
     )
     foreach (h4_file ${HDF4_REFERENCE_TEST_FILES})
-      set (dest "${PROJECT_BINARY_DIR}/${h4_file}")
-      #message (STATUS " Copying ${HDF4_MFHDF_FORTRAN_SOURCE_DIR}/${h4_file} to ${PROJECT_BINARY_DIR}/")
-      ADD_CUSTOM_COMMAND (
-          TARGET     ftest
-          POST_BUILD
-          COMMAND    ${CMAKE_COMMAND}
-          ARGS       -E copy_if_different ${HDF4_MFHDF_FORTRAN_SOURCE_DIR}/${h4_file} ${dest}
-      )
+      HDFTEST_COPY_FILE("${HDF4_MFHDF_FORTRAN_SOURCE_DIR}/${h4_file}" "${PROJECT_BINARY_DIR}/${h4_file}" "netcdf_files")
     endforeach ()
+    add_custom_target(netcdf_files ALL COMMENT "Copying files needed by netcdf tests" DEPENDS ${netcdf_files_list})
 
     add_test (NAME ftest COMMAND $<TARGET_FILE:ftest>)
   endif ()
 
   #-- Adding test for f_hdftest
   add_executable (f_hdftest hdftest.f)
-  TARGET_NAMING (f_hdftest STATIC)
   TARGET_FORTRAN_PROPERTIES (f_hdftest STATIC " " " ")
   set_target_properties (f_hdftest PROPERTIES LINKER_LANGUAGE Fortran)
-  if (HDF4_BUILD_XDR_LIB)
-    target_link_libraries (f_hdftest ${HDF4_MF_FORTRAN_LIB_TARGET} ${HDF4_SRC_FORTRAN_LIB_TARGET} ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${HDF4_MF_XDR_LIB_TARGET} ${LINK_LIBS})
-  else ()
-    target_link_libraries (f_hdftest ${HDF4_MF_FORTRAN_LIB_TARGET} ${HDF4_SRC_FORTRAN_LIB_TARGET} ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
-  endif ()
+  target_link_libraries (f_hdftest ${HDF4_MF_FORTRAN_LIB_TARGET} ${HDF4_SRC_FORTRAN_LIB_TARGET})
 
   #-- Adding test for f_hdftest1
   add_executable (f_hdftest1 hdftest1.f)
-  TARGET_NAMING (f_hdftest1 STATIC)
   TARGET_FORTRAN_PROPERTIES (f_hdftest1 STATIC " " " ")
   set_target_properties (f_hdftest1 PROPERTIES LINKER_LANGUAGE Fortran)
-  if (HDF4_BUILD_XDR_LIB)
-    target_link_libraries (f_hdftest1 ${HDF4_MF_FORTRAN_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${HDF4_MF_LIB_TARGET} ${HDF4_MF_XDR_LIB_TARGET} ${LINK_LIBS})
-  else ()
-    target_link_libraries (f_hdftest1 ${HDF4_MF_FORTRAN_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${HDF4_MF_LIB_TARGET} ${LINK_LIBS})
-  endif ()
+  target_link_libraries (f_hdftest1 ${HDF4_MF_FORTRAN_LIB_TARGET})
 
   #-- Adding test for f_tszip
   add_executable (f_tszip tszip.f)
-  TARGET_NAMING (f_tszip STATIC)
   TARGET_FORTRAN_PROPERTIES (f_tszip STATIC " " " ")
   set_target_properties (f_tszip PROPERTIES LINKER_LANGUAGE Fortran)
-  if (HDF4_BUILD_XDR_LIB)
-    target_link_libraries (f_tszip ${HDF4_MF_FORTRAN_LIB_TARGET} ${HDF4_SRC_FORTRAN_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${HDF4_MF_LIB_TARGET} ${HDF4_MF_XDR_LIB_TARGET} ${LINK_LIBS})
-  else ()
-    target_link_libraries (f_tszip ${HDF4_MF_FORTRAN_LIB_TARGET} ${HDF4_SRC_FORTRAN_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${HDF4_MF_LIB_TARGET} ${LINK_LIBS})
-  endif ()
+  target_link_libraries (f_tszip ${HDF4_MF_FORTRAN_LIB_TARGET} ${HDF4_SRC_FORTRAN_LIB_TARGET})
 
 ##############################################################################
 ##############################################################################
diff --git a/mfhdf/fortran/examples/CMakeLists.txt b/mfhdf/fortran/examples/CMakeLists.txt
index bc3dfe9f..324485ee 100644
--- a/mfhdf/fortran/examples/CMakeLists.txt
+++ b/mfhdf/fortran/examples/CMakeLists.txt
@@ -47,34 +47,24 @@ set (skip_examples
 
 foreach (example ${examples})
   add_executable (f_exmf_${example} ${HDF4_MFHDF_FORTRAN_EXAMPLES_SOURCE_DIR}/${example}.f)
-  TARGET_NAMING (f_exmf_${example} STATIC)
   TARGET_FORTRAN_PROPERTIES (f_exmf_${example} STATIC " " " ")
   target_include_directories (f_exmf_${example} PRIVATE ${CMAKE_Fortran_MODULE_DIRECTORY})
   set_target_properties (f_exmf_${example} PROPERTIES
       LINKER_LANGUAGE Fortran
       Fortran_MODULE_DIRECTORY ${CMAKE_Fortran_MODULE_DIRECTORY}
   )
-  if (HDF4_BUILD_XDR_LIB)
-    target_link_libraries (f_exmf_${example} ${HDF4_MF_FORTRAN_LIB_TARGET}  ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS} ${HDF4_MF_XDR_LIB_TARGET})
-  else ()
-    target_link_libraries (f_exmf_${example} ${HDF4_MF_FORTRAN_LIB_TARGET}  ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
-  endif ()
+  target_link_libraries (f_exmf_${example} ${HDF4_MF_FORTRAN_LIB_TARGET})
 endforeach ()
 
 foreach (example ${skip_examples})
   add_executable (f_exmf_${example} ${HDF4_MFHDF_FORTRAN_EXAMPLES_SOURCE_DIR}/${example}.f)
-  TARGET_NAMING (f_exmf_${example} STATIC)
   TARGET_FORTRAN_PROPERTIES (f_exmf_${example} STATIC " " " ")
   target_include_directories (f_exmf_${example} PRIVATE ${CMAKE_Fortran_MODULE_DIRECTORY})
   set_target_properties (f_exmf_${example} PROPERTIES
       LINKER_LANGUAGE Fortran
       Fortran_MODULE_DIRECTORY ${CMAKE_Fortran_MODULE_DIRECTORY}
   )
-  if (HDF4_BUILD_XDR_LIB)
-    target_link_libraries (f_exmf_${example} ${HDF4_MF_FORTRAN_LIB_TARGET}  ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS} ${HDF4_MF_XDR_LIB_TARGET})
-  else ()
-    target_link_libraries (f_exmf_${example} ${HDF4_MF_FORTRAN_LIB_TARGET}  ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
-  endif ()
+  target_link_libraries (f_exmf_${example} ${HDF4_MF_FORTRAN_LIB_TARGET})
 endforeach ()
 
 if (BUILD_TESTING)
diff --git a/mfhdf/hdfimport/CMakeLists.txt b/mfhdf/hdfimport/CMakeLists.txt
index 264d990f..1cb7d5fb 100644
--- a/mfhdf/hdfimport/CMakeLists.txt
+++ b/mfhdf/hdfimport/CMakeLists.txt
@@ -27,12 +27,7 @@ set (hdfimport_SRCS
 
 add_executable (hdfimport ${hdfimport_SRCS})
 TARGET_C_PROPERTIES (hdfimport STATIC " " " ")
-if (HDF4_BUILD_XDR_LIB)
-  target_link_libraries (hdfimport ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS} ${HDF4_MF_XDR_LIB_TARGET})
-else ()
-  target_link_libraries (hdfimport ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
-endif ()
-TARGET_NAMING (hdfimport STATIC)
+target_link_libraries (hdfimport ${HDF4_MF_LIB_TARGET})
 set_global_variable (HDF4_UTILS_TO_EXPORT "${HDF4_UTILS_TO_EXPORT};hdfimport")
 
 if (BUILD_TESTING)
diff --git a/mfhdf/hdfimport/CMakeTests.cmake b/mfhdf/hdfimport/CMakeTests.cmake
index 2784939b..b478b258 100644
--- a/mfhdf/hdfimport/CMakeTests.cmake
+++ b/mfhdf/hdfimport/CMakeTests.cmake
@@ -14,34 +14,6 @@
       SDSfloat2.hdf
       SDSfloat3.hdf
   )
-
-  foreach (h4_file ${HDF4_REFERENCE_TEST_FILES})
-      set (dest "${PROJECT_BINARY_DIR}/${h4_file}")
-      #message (STATUS " Copying ${HDF4_MFHDF_HDFIMPORT_SOURCE_DIR}/${h4_file} to ${PROJECT_BINARY_DIR}/")
-      add_custom_command (
-          TARGET     hdfimport
-          POST_BUILD
-          COMMAND    ${CMAKE_COMMAND}
-          ARGS       -E copy_if_different ${HDF4_MFHDF_HDFIMPORT_SOURCE_DIR}/${h4_file} ${dest}
-     )
-  endforeach ()
-
-  if (WIN32 AND MSVC_VERSION LESS 1900)
-    add_custom_command (
-        TARGET     hdfimport
-        POST_BUILD
-        COMMAND    ${CMAKE_COMMAND}
-        ARGS       -E copy_if_different ${HDF4_MFHDF_HDFIMPORT_SOURCE_DIR}/hdfimport-w.out2 ${PROJECT_BINARY_DIR}/hdfimport.out2
-    )
-  else ()
-    add_custom_command (
-        TARGET     hdfimport
-        POST_BUILD
-        COMMAND    ${CMAKE_COMMAND}
-        ARGS       -E copy_if_different ${HDF4_MFHDF_HDFIMPORT_SOURCE_DIR}/hdfimport.out2 ${PROJECT_BINARY_DIR}/hdfimport.out2
-    )
-  endif ()
-
   #-- Copy all the hdfls tst files from the test directory into the source directory
   set (HDF4_LS_TEST_FILES
       ctxtr2.tst
@@ -62,17 +34,22 @@
       SDSfloat3.tst
   )
 
-  foreach (ls_file ${HDF4_LS_TEST_FILES})
-      set (dest "${PROJECT_BINARY_DIR}/${ls_file}")
-      #message (STATUS " Copying ${HDF4_MFHDF_HDFIMPORT_SOURCE_DIR}/${ls_file} to ${PROJECT_BINARY_DIR}/")
-      ADD_CUSTOM_COMMAND (
-          TARGET     hdfimport
-          POST_BUILD
-          COMMAND    ${CMAKE_COMMAND}
-          ARGS       -E copy_if_different ${HDF4_MFHDF_HDFIMPORT_SOURCE_DIR}/testfiles/${ls_file} ${dest}
-     )
+  foreach (h4_file ${HDF4_REFERENCE_TEST_FILES})
+    HDFTEST_COPY_FILE("${HDF4_MFHDF_HDFIMPORT_SOURCE_DIR}/${h4_file}" "${PROJECT_BINARY_DIR}/${h4_file}" "hdfimport_files")
+  endforeach ()
+
+  foreach (h4_file ${HDF4_LS_TEST_FILES})
+    HDFTEST_COPY_FILE("${HDF4_MFHDF_HDFIMPORT_SOURCE_DIR}/testfiles/${h4_file}" "${PROJECT_BINARY_DIR}/${h4_file}" "hdfimport_files")
   endforeach ()
 
+  if (WIN32 AND MSVC_VERSION LESS 1900)
+    HDFTEST_COPY_FILE("${HDF4_MFHDF_HDFIMPORT_SOURCE_DIR}/hdfimport-w.out2" "${PROJECT_BINARY_DIR}/hdfimport.out2" "hdfimport_files")
+  else ()
+    HDFTEST_COPY_FILE("${HDF4_MFHDF_HDFIMPORT_SOURCE_DIR}/hdfimport.out2" "${PROJECT_BINARY_DIR}/hdfimport.out2" "hdfimport_files")
+  endif ()
+
+  add_custom_target(hdfimport_files ALL COMMENT "Copying files needed by hdfimport tests" DEPENDS ${hdfimport_files_list})
+
   #-- hdfimporttest
   set (hdfimporttest_SRCS
       ${HDF4_MFHDF_HDFIMPORT_SOURCE_DIR}/hdfimporttest.c
@@ -80,12 +57,7 @@
 
   add_executable (hdfimporttest ${hdfimporttest_SRCS})
   TARGET_C_PROPERTIES (hdfimporttest STATIC " " " ")
-  if (HDF4_BUILD_XDR_LIB)
-    target_link_libraries (hdfimporttest ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS} ${HDF4_MF_XDR_LIB_TARGET})
-  else ()
-    target_link_libraries (hdfimporttest ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
-  endif ()
-  TARGET_NAMING (hdfimporttest STATIC)
+  target_link_libraries (hdfimporttest ${HDF4_MF_LIB_TARGET})
 
   #-- gen_sds_floats
   set (gen_sds_floats_SRCS
@@ -94,12 +66,7 @@
 
   add_executable (gen_sds_floats ${gen_sds_floats_SRCS})
   TARGET_C_PROPERTIES (gen_sds_floats STATIC " " " ")
-  if (HDF4_BUILD_XDR_LIB)
-    target_link_libraries (gen_sds_floats ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS} ${HDF4_MF_XDR_LIB_TARGET})
-  else ()
-    target_link_libraries (gen_sds_floats ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
-  endif ()
-  TARGET_NAMING (gen_sds_floats STATIC)
+  target_link_libraries (gen_sds_floats ${HDF4_MF_LIB_TARGET})
 
 ##############################################################################
 ##############################################################################
diff --git a/mfhdf/hdiff/CMakeLists.txt b/mfhdf/hdiff/CMakeLists.txt
index 790041b7..da2deeba 100644
--- a/mfhdf/hdiff/CMakeLists.txt
+++ b/mfhdf/hdiff/CMakeLists.txt
@@ -33,12 +33,7 @@ set (hdiff_SRCS
 
 add_executable(hdiff ${hdiff_SRCS})
 TARGET_C_PROPERTIES (hdiff STATIC " " " ")
-if (HDF4_BUILD_XDR_LIB)
-  TARGET_LINK_LIBRARIES(hdiff ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS} ${HDF4_MF_XDR_LIB_TARGET})
-else ()
-  TARGET_LINK_LIBRARIES(hdiff ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
-endif ()
-TARGET_NAMING (hdiff STATIC)
+target_link_libraries(hdiff ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET})
 set_global_variable (HDF4_UTILS_TO_EXPORT "${HDF4_UTILS_TO_EXPORT};hdiff")
 
 if (BUILD_TESTING)
diff --git a/mfhdf/hdiff/CMakeTests.cmake b/mfhdf/hdiff/CMakeTests.cmake
index 8361ca7b..6778350f 100644
--- a/mfhdf/hdiff/CMakeTests.cmake
+++ b/mfhdf/hdiff/CMakeTests.cmake
@@ -16,12 +16,7 @@
 
     ADD_EXECUTABLE (hdifftst ${hdifftst_SRCS})
     TARGET_C_PROPERTIES (hdifftst STATIC " " " ")
-    if (HDF4_BUILD_XDR_LIB)
-      target_link_libraries (hdifftst ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS} ${HDF4_MF_XDR_LIB_TARGET})
-    else ()
-      target_link_libraries (hdifftst ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
-    endif ()
-    TARGET_NAMING (hdifftst ${LIB_TYPE})
+    target_link_libraries (hdifftst ${HDF4_MF_LIB_TARGET})
 
     # Remove any output file left over from previous test run
     add_test (
@@ -100,44 +95,18 @@
       hdiff_15.txt
   )
 
-  foreach (h4_file ${HDF4_REFERENCE_TEST_FILES})
-    set (dest "${PROJECT_BINARY_DIR}/testfiles/${h4_file}")
-    #MESSAGE(STATUS " Copying ${HDF4_MFHDF_HDIFF_SOURCE_DIR}/testfiles/${h4_file} to ${PROJECT_BINARY_DIR}/testfiles/")
-    ADD_CUSTOM_COMMAND (
-        TARGET     hdiff
-        POST_BUILD
-        COMMAND    ${CMAKE_COMMAND}
-        ARGS       -E copy_if_different ${HDF4_MFHDF_HDIFF_SOURCE_DIR}/testfiles/${h4_file} ${dest}
-    )
-  endforeach ()
-
-  foreach (out_file ${HDF4_REFERENCE_FILES})
-    set (outdest "${PROJECT_BINARY_DIR}/testfiles/${out_file}")
-    #message (STATUS " Translating ${out_file}")
-    ADD_CUSTOM_COMMAND (
-        TARGET     hdiff
-        POST_BUILD
-        COMMAND    ${CMAKE_COMMAND}
-        ARGS       -E copy_if_different ${HDF4_MFHDF_HDIFF_SOURCE_DIR}/testfiles/${out_file} ${outdest}
-    )
+  foreach (h4_file ${HDF4_REFERENCE_TEST_FILES} ${HDF4_REFERENCE_FILES})
+    HDFTEST_COPY_FILE("${HDF4_MFHDF_HDIFF_SOURCE_DIR}/testfiles/${h4_file}" "${PROJECT_BINARY_DIR}/testfiles/${h4_file}" "hdiff_files")
   endforeach ()
 
   if (WIN32 AND MSVC_VERSION LESS 1900)
-    ADD_CUSTOM_COMMAND (
-        TARGET     hdiff
-        POST_BUILD
-        COMMAND    ${CMAKE_COMMAND}
-        ARGS       -E copy_if_different ${HDF4_MFHDF_HDIFF_SOURCE_DIR}/testfiles/hdiff_06w.txt ${PROJECT_BINARY_DIR}/testfiles/hdiff_06.txt
-    )
+    HDFTEST_COPY_FILE("${HDF4_MFHDF_HDIFF_SOURCE_DIR}/testfiles/hdiff_06w.txt" "${PROJECT_BINARY_DIR}/testfiles/hdiff_06.txt" "hdiff_files")
   else ()
-    ADD_CUSTOM_COMMAND (
-        TARGET     hdiff
-        POST_BUILD
-        COMMAND    ${CMAKE_COMMAND}
-        ARGS       -E copy_if_different ${HDF4_MFHDF_HDIFF_SOURCE_DIR}/testfiles/hdiff_06.txt ${PROJECT_BINARY_DIR}/testfiles/hdiff_06.txt
-    )
+    HDFTEST_COPY_FILE("${HDF4_MFHDF_HDIFF_SOURCE_DIR}/testfiles/hdiff_06.txt" "${PROJECT_BINARY_DIR}/testfiles/hdiff_06.txt" "hdiff_files")
   endif ()
 
+  add_custom_target(hdiff_files ALL COMMENT "Copying files needed by hdiff tests" DEPENDS ${hdiff_files_list})
+
 ##############################################################################
 ##############################################################################
 ###           T H E   T E S T S                                            ###
diff --git a/mfhdf/hrepack/CMakeLists.txt b/mfhdf/hrepack/CMakeLists.txt
index db01a3e5..953c04bc 100644
--- a/mfhdf/hrepack/CMakeLists.txt
+++ b/mfhdf/hrepack/CMakeLists.txt
@@ -36,21 +36,11 @@ set (hrepack_SRCS
 
 add_executable (hrepack ${hrepack_SRCS})
 TARGET_C_PROPERTIES (hrepack STATIC " " " ")
-if (HDF4_BUILD_XDR_LIB)
-  target_link_libraries (hrepack ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS} ${HDF4_MF_XDR_LIB_TARGET})
-else ()
-  target_link_libraries (hrepack ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
-endif ()
-TARGET_NAMING (hrepack STATIC)
+target_link_libraries (hrepack ${HDF4_MF_LIB_TARGET})
 
 add_executable (hrepack_check ${HDF4_MFHDF_HREPACK_SOURCE_DIR}/hrepack_check.c)
 TARGET_C_PROPERTIES (hrepack_check STATIC " " " ")
-if (HDF4_BUILD_XDR_LIB)
-  target_link_libraries (hrepack_check ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS} ${HDF4_MF_XDR_LIB_TARGET})
-else ()
-  target_link_libraries (hrepack_check ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
-endif ()
-TARGET_NAMING (hrepack_check STATIC)
+target_link_libraries (hrepack_check ${HDF4_MF_LIB_TARGET})
 set_global_variable (HDF4_UTILS_TO_EXPORT "${HDF4_UTILS_TO_EXPORT};hrepack")
 
 if (BUILD_TESTING)
diff --git a/mfhdf/hrepack/CMakeTests.cmake b/mfhdf/hrepack/CMakeTests.cmake
index 56422094..79beec6e 100644
--- a/mfhdf/hrepack/CMakeTests.cmake
+++ b/mfhdf/hrepack/CMakeTests.cmake
@@ -16,25 +16,14 @@
   )
 
   foreach (h4_file ${HDF4_REPACK_TEST_FILES})
-    set (dest "${PROJECT_BINARY_DIR}/${h4_file}")
-    #message (STATUS " Copying ${HDF4_MFHDF_HREPACK_SOURCE_DIR}/${h4_file} to ${PROJECT_BINARY_DIR}/")
-    add_custom_command (
-        TARGET     hrepack_check
-        POST_BUILD
-        COMMAND    ${CMAKE_COMMAND}
-        ARGS       -E copy_if_different ${HDF4_MFHDF_HREPACK_SOURCE_DIR}/${h4_file} ${dest}
-    )
+    HDFTEST_COPY_FILE("${HDF4_MFHDF_HREPACK_SOURCE_DIR}/${h4_file}" "${PROJECT_BINARY_DIR}/${h4_file}" "hrepack_files")
   endforeach ()
+  add_custom_target(hrepack_files ALL COMMENT "Copying files needed by hrepack tests" DEPENDS ${hrepack_files_list})
 
 #-- Adding test for test_hrepack for generating testfiles
   add_executable (test_hrepack ${HDF4_MFHDF_HREPACK_SOURCE_DIR}/hrepacktst.c)
   TARGET_C_PROPERTIES (test_hrepack STATIC " " " ")
-  if (HDF4_BUILD_XDR_LIB)
-    target_link_libraries (test_hrepack ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS} ${HDF4_MF_XDR_LIB_TARGET})
-  else ()
-    target_link_libraries (test_hrepack ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
-  endif ()
-  TARGET_NAMING (test_hrepack STATIC)
+  target_link_libraries (test_hrepack ${HDF4_MF_LIB_TARGET})
 
   macro (ADD_H4_TEST testname testtype testfile)
     if ("${testtype}" STREQUAL "SKIP")
diff --git a/mfhdf/libsrc/CMakeLists.txt b/mfhdf/libsrc/CMakeLists.txt
index 45952db2..9a27c773 100644
--- a/mfhdf/libsrc/CMakeLists.txt
+++ b/mfhdf/libsrc/CMakeLists.txt
@@ -57,11 +57,11 @@ INCLUDE_DIRECTORIES (${HDF4_MFHDFSOURCE_DIR})
 
 add_library (${HDF4_MF_LIB_TARGET} STATIC ${HDF4_MFHDF_LIBSRC_CSRCS} ${HDF4_MFHDF_LIBSRC_CHDRS})
 if (HDF4_BUILD_XDR_LIB)
-  INCLUDE_DIRECTORIES (${HDF4_MFHDF_XDR_DIR})
-  target_link_libraries (${HDF4_MF_LIB_TARGET} ${HDF4_MF_XDR_LIB_TARGET})
+  target_include_directories (${HDF4_MF_LIB_TARGET} PUBLIC ${HDF4_MFHDF_XDR_DIR})
+  target_link_libraries (${HDF4_MF_LIB_TARGET} PUBLIC ${HDF4_MF_XDR_LIB_TARGET})
 endif ()
 TARGET_C_PROPERTIES (${HDF4_MF_LIB_TARGET} STATIC " " " ")
-target_link_libraries (${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET})
+target_link_libraries (${HDF4_MF_LIB_TARGET} PUBLIC ${HDF4_SRC_LIB_TARGET})
 set_global_variable (HDF4_LIBRARIES_TO_EXPORT "${HDF4_LIBRARIES_TO_EXPORT};${HDF4_MF_LIB_TARGET}")
 H4_SET_LIB_OPTIONS (${HDF4_MF_LIB_TARGET} ${HDF4_MF_LIB_NAME} STATIC)
 set_target_properties (${HDF4_MF_LIB_TARGET} PROPERTIES
@@ -80,11 +80,11 @@ set (install_targets ${HDF4_MF_LIB_TARGET})
 if (BUILD_SHARED_LIBS)
   add_library (${HDF4_MF_LIBSH_TARGET} SHARED ${HDF4_MFHDF_LIBSRC_CSRCS} ${HDF4_MFHDF_LIBSRC_CHDRS})
   if (HDF4_BUILD_XDR_LIB)
-    INCLUDE_DIRECTORIES (${HDF4_MFHDF_XDR_DIR})
-    target_link_libraries (${HDF4_MF_LIBSH_TARGET} ${HDF4_MF_XDR_LIBSH_TARGET})
+    target_include_directories (${HDF4_MF_LIBSH_TARGET} PUBLIC ${HDF4_MFHDF_XDR_DIR})
+    target_link_libraries (${HDF4_MF_LIBSH_TARGET} PUBLIC ${HDF4_MF_XDR_LIBSH_TARGET})
   endif ()
   TARGET_C_PROPERTIES (${HDF4_MF_LIBSH_TARGET} SHARED " " " ")
-  target_link_libraries (${HDF4_MF_LIBSH_TARGET} ${HDF4_SRC_LIBSH_TARGET})
+  target_link_libraries (${HDF4_MF_LIBSH_TARGET} PUBLIC ${HDF4_SRC_LIBSH_TARGET})
   set_global_variable (HDF4_LIBRARIES_TO_EXPORT "${HDF4_LIBRARIES_TO_EXPORT};${HDF4_MF_LIBSH_TARGET}")
   H4_SET_LIB_OPTIONS (${HDF4_MF_LIBSH_TARGET} ${HDF4_MF_LIB_NAME} SHARED)
   set_target_properties (${HDF4_MF_LIBSH_TARGET} PROPERTIES
diff --git a/mfhdf/ncdump/CMakeLists.txt b/mfhdf/ncdump/CMakeLists.txt
index 5426e7e6..07666006 100644
--- a/mfhdf/ncdump/CMakeLists.txt
+++ b/mfhdf/ncdump/CMakeLists.txt
@@ -26,12 +26,7 @@ set (ncdump_SRCS
 
 add_executable (ncdump ${ncdump_SRCS})
 TARGET_C_PROPERTIES (ncdump STATIC " " " ")
-if (HDF4_BUILD_XDR_LIB)
-  target_link_libraries (ncdump ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS} ${HDF4_MF_XDR_LIB_TARGET} )
-else ()
-  target_link_libraries (ncdump ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
-endif ()
-TARGET_NAMING (ncdump STATIC)
+target_link_libraries (ncdump ${HDF4_MF_LIB_TARGET})
 
 if (BUILD_TESTING)
   include (CMakeTests.cmake)
diff --git a/mfhdf/ncdump/CMakeTests.cmake b/mfhdf/ncdump/CMakeTests.cmake
index 826e3be1..c8ebe5c5 100644
--- a/mfhdf/ncdump/CMakeTests.cmake
+++ b/mfhdf/ncdump/CMakeTests.cmake
@@ -22,13 +22,8 @@ else ()
 endif ()
 set (last_test "NCDUMP-clearall-objects")
 
-#message (STATUS " Copying ${HDF4_MFHDF_NCDUMP_SOURCE_DIR}/test0.cdl to ${PROJECT_BINARY_DIR}/")
-ADD_CUSTOM_COMMAND (
-    TARGET     ncdump
-    POST_BUILD
-    COMMAND    ${CMAKE_COMMAND}
-    ARGS       -E copy_if_different ${HDF4_MFHDF_NCDUMP_SOURCE_DIR}/test0.cdl ${PROJECT_BINARY_DIR}/test0.cdl
-)
+HDFTEST_COPY_FILE("${HDF4_MFHDF_NCDUMP_SOURCE_DIR}/test0.cdl" "${PROJECT_BINARY_DIR}/test0.cdl" "ncdump_files")
+add_custom_target(ncdump_files ALL COMMENT "Copying files needed by ncdump tests" DEPENDS ${ncdump_files_list})
 
 if (NCGEN_UTILITY)
   add_test (
diff --git a/mfhdf/ncgen/CMakeLists.txt b/mfhdf/ncgen/CMakeLists.txt
index 0d12a5a7..33df9cb3 100644
--- a/mfhdf/ncgen/CMakeLists.txt
+++ b/mfhdf/ncgen/CMakeLists.txt
@@ -39,12 +39,7 @@ endif ()
 
 add_executable (ncgen ${ncgen_SRCS})
 TARGET_C_PROPERTIES (ncgen STATIC " " " ")
-if (HDF4_BUILD_XDR_LIB)
-  target_link_libraries (ncgen ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS} ${HDF4_MF_XDR_LIB_TARGET} )
-else ()
-  target_link_libraries (ncgen ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
-endif ()
-TARGET_NAMING (ncgen STATIC)
+target_link_libraries (ncgen ${HDF4_MF_LIB_TARGET})
 
 if (BUILD_TESTING)
   include (CMakeTests.cmake)
diff --git a/mfhdf/ncgen/CMakeTests.cmake b/mfhdf/ncgen/CMakeTests.cmake
index e057bc00..fa833124 100644
--- a/mfhdf/ncgen/CMakeTests.cmake
+++ b/mfhdf/ncgen/CMakeTests.cmake
@@ -32,13 +32,8 @@
   endif ()
   set (last_test "NCGEN-clearall-objects")
 
-  #message (STATUS " Copying ${HDF4_MFHDF_NCGEN_SOURCE_DIR}/test0.cdl to ${PROJECT_BINARY_DIR}/")
-  ADD_CUSTOM_COMMAND (
-      TARGET     ncgen
-      POST_BUILD
-      COMMAND    ${CMAKE_COMMAND}
-      ARGS       -E copy_if_different ${HDF4_MFHDF_NCGEN_SOURCE_DIR}/test0.cdl ${PROJECT_BINARY_DIR}/test0.cdl
-  )
+  HDFTEST_COPY_FILE("${HDF4_MFHDF_NCGEN_SOURCE_DIR}/test0.cdl" "${PROJECT_BINARY_DIR}/test0.cdl" "ncgen_files")
+  add_custom_target(ncgen_files ALL COMMENT "Copying files needed by ncgen tests" DEPENDS ${ncgen_files_list})
 
 #-- Adding test for ncgen
 add_test (
diff --git a/mfhdf/nctest/CMakeLists.txt b/mfhdf/nctest/CMakeLists.txt
index c1e6f3de..5923a308 100644
--- a/mfhdf/nctest/CMakeLists.txt
+++ b/mfhdf/nctest/CMakeLists.txt
@@ -42,28 +42,6 @@ set (nctest_SRCS
 
 add_executable (nctest ${nctest_SRCS})
 TARGET_C_PROPERTIES (nctest STATIC " " " ")
-if (HDF4_BUILD_XDR_LIB)
-  target_link_libraries (nctest ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS} ${HDF4_MF_XDR_LIB_TARGET} )
-else ()
-  target_link_libraries (nctest ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
-endif ()
-TARGET_NAMING (nctest STATIC)
-
-set (HDF4_NC_TEST_FILES
-    test_unlim.cdl
-    test_unlim.nc
-)
-
-foreach (h4_file ${HDF4_NC_TEST_FILES})
-  set (dest "${PROJECT_BINARY_DIR}/${h4_file}")
-  #message (STATUS " Copying ${HDF4_MFHDF_NCTEST_SOURCE_DIR}/${h4_file} to ${PROJECT_BINARY_DIR}/")
-  add_custom_command (
-      TARGET     nctest
-      POST_BUILD
-      COMMAND    ${CMAKE_COMMAND}
-      ARGS       -E copy_if_different ${HDF4_MFHDF_NCTEST_SOURCE_DIR}/${h4_file} ${dest}
-  )
-
-endforeach ()
+target_link_libraries (nctest ${HDF4_MF_LIB_TARGET})
 
 include (CMakeTests.cmake)
diff --git a/mfhdf/nctest/CMakeTests.cmake b/mfhdf/nctest/CMakeTests.cmake
index e7e0123a..774815df 100644
--- a/mfhdf/nctest/CMakeTests.cmake
+++ b/mfhdf/nctest/CMakeTests.cmake
@@ -5,6 +5,16 @@
 ##############################################################################
 ##############################################################################
 
+set (HDF4_NC_TEST_FILES
+    test_unlim.cdl
+    test_unlim.nc
+)
+
+foreach (h4_file ${HDF4_NC_TEST_FILES})
+  HDFTEST_COPY_FILE("${HDF4_MFHDF_NCTEST_SOURCE_DIR}/${h4_file}" "${PROJECT_BINARY_DIR}/${h4_file}" "nc_test_files")
+endforeach ()
+add_custom_target(nc_test_files ALL COMMENT "Copying files needed by nc tests" DEPENDS ${nc_test_files_list})
+
 # Remove any output file left over from previous test run
 add_test (
     NAME NC_TEST-clearall-objects
diff --git a/mfhdf/test/CMakeLists.txt b/mfhdf/test/CMakeLists.txt
index d719e4ef..6d857405 100644
--- a/mfhdf/test/CMakeLists.txt
+++ b/mfhdf/test/CMakeLists.txt
@@ -14,7 +14,6 @@ if (HDF4_BUILD_XDR_LIB)
   if (WIN32)
     add_definitions (-DNO_SYS_XDR_INC)
   endif ()
-  INCLUDE_DIRECTORIES (${HDF4_MFHDF_XDR_DIR})
 endif ()
 
 set (hdftest_SRCS
@@ -41,45 +40,25 @@ set (hdftest_SRCS
 
 #-- Adding test for hdftest
 add_executable (hdftest ${hdftest_SRCS})
-TARGET_NAMING (hdftest STATIC)
 TARGET_C_PROPERTIES (hdftest STATIC " " " ")
-if (HDF4_BUILD_XDR_LIB)
-  target_link_libraries (hdftest ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${HDF4_MF_XDR_LIB_TARGET} ${LINK_LIBS})
-else ()
-  target_link_libraries (hdftest ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
-endif ()
+target_link_libraries (hdftest ${HDF4_MF_LIB_TARGET})
 set_target_properties (hdftest PROPERTIES FOLDER test)
 if (BUILD_SHARED_LIBS)
   add_executable (hdftest-shared ${hdftest_SRCS})
-  TARGET_NAMING (hdftest-shared SHARED)
   TARGET_C_PROPERTIES (hdftest-shared SHARED " " " ")
-  if (HDF4_BUILD_XDR_LIB)
-    target_link_libraries (hdftest-shared ${HDF4_MF_LIBSH_TARGET} ${HDF4_SRC_LIBSH_TARGET} ${HDF4_MF_XDR_LIBSH_TARGET} ${LINK_SHARED_LIBS})
-  else ()
-    target_link_libraries (hdftest-shared ${HDF4_MF_LIBSH_TARGET} ${HDF4_SRC_LIBSH_TARGET} ${LINK_SHARED_LIBS})
-  endif ()
+  target_link_libraries (hdftest-shared ${HDF4_MF_LIBSH_TARGET})
   set_target_properties (hdftest-shared PROPERTIES FOLDER test)
 endif ()
 
 #-- Adding test for cdftest
 add_executable (cdftest ${HDF4_MFHDF_TEST_SOURCE_DIR}/cdftest.c)
-TARGET_NAMING (cdftest STATIC)
 TARGET_C_PROPERTIES (cdftest STATIC " " " ")
-if (HDF4_BUILD_XDR_LIB)
-  target_link_libraries (cdftest ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${HDF4_MF_XDR_LIB_TARGET} ${LINK_LIBS})
-else ()
-  target_link_libraries (cdftest ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
-endif ()
+target_link_libraries (cdftest ${HDF4_MF_LIB_TARGET})
 set_target_properties (cdftest PROPERTIES FOLDER test)
 if (BUILD_SHARED_LIBS)
   add_executable (cdftest-shared ${HDF4_MFHDF_TEST_SOURCE_DIR}/cdftest.c)
-  TARGET_NAMING (cdftest-shared SHARED)
   TARGET_C_PROPERTIES (cdftest-shared SHARED " " " ")
-  if (HDF4_BUILD_XDR_LIB)
-    target_link_libraries (cdftest-shared ${HDF4_MF_LIBSH_TARGET} ${HDF4_SRC_LIBSH_TARGET} ${HDF4_MF_XDR_LIBSH_TARGET} ${LINK_SHARED_LIBS})
-  else ()
-    target_link_libraries (cdftest-shared ${HDF4_MF_LIBSH_TARGET} ${HDF4_SRC_LIBSH_TARGET} ${LINK_SHARED_LIBS})
-  endif ()
+  target_link_libraries (cdftest-shared ${HDF4_MF_LIBSH_TARGET})
   set_target_properties (cdftest-shared PROPERTIES FOLDER test)
 endif ()
 
@@ -92,23 +71,13 @@ set (hdfnctest_SRCS
 )
 
 add_executable (hdfnctest ${hdfnctest_SRCS})
-TARGET_NAMING (hdfnctest STATIC)
 TARGET_C_PROPERTIES (hdfnctest STATIC " " " ")
-if (HDF4_BUILD_XDR_LIB)
-  target_link_libraries (hdfnctest ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${HDF4_MF_XDR_LIB_TARGET} ${LINK_LIBS})
-else ()
-  target_link_libraries (hdfnctest ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS})
-endif ()
+target_link_libraries (hdfnctest ${HDF4_MF_LIB_TARGET})
 set_target_properties (hdfnctest PROPERTIES FOLDER test)
 if (BUILD_SHARED_LIBS)
   add_executable (hdfnctest-shared ${hdfnctest_SRCS})
-  TARGET_NAMING (hdfnctest-shared SHARED)
   TARGET_C_PROPERTIES (hdfnctest-shared SHARED " " " ")
-  if (HDF4_BUILD_XDR_LIB)
-    target_link_libraries (hdfnctest-shared ${HDF4_MF_LIBSH_TARGET} ${HDF4_SRC_LIBSH_TARGET} ${HDF4_MF_XDR_LIBSH_TARGET} ${LINK_SHARED_LIBS})
-  else ()
-    target_link_libraries (hdfnctest-shared ${HDF4_MF_LIBSH_TARGET} ${HDF4_SRC_LIBSH_TARGET} ${LINK_SHARED_LIBS})
-  endif ()
+  target_link_libraries (hdfnctest-shared ${HDF4_MF_LIBSH_TARGET})
   set_target_properties (hdfnctest-shared PROPERTIES FOLDER test)
 endif ()
 
diff --git a/mfhdf/test/CMakeTests.cmake b/mfhdf/test/CMakeTests.cmake
index 97b09b66..b3b586a0 100644
--- a/mfhdf/test/CMakeTests.cmake
+++ b/mfhdf/test/CMakeTests.cmake
@@ -18,48 +18,18 @@ set (HDF4_REFERENCE_TEST_FILES
     Roy-64.nc
 )
 
-foreach (h4_file ${HDF4_REFERENCE_TEST_FILES})
-   set (dest "${PROJECT_BINARY_DIR}/TEST/${h4_file}")
-   add_custom_command (
-       TARGET     hdftest
-       POST_BUILD
-       COMMAND    ${CMAKE_COMMAND}
-       ARGS       -E copy_if_different ${HDF4_MFHDF_TEST_DIR}/${h4_file} ${dest}
-   )
-   if (BUILD_SHARED_LIBS)
-     set (dest "${PROJECT_BINARY_DIR}/TEST-shared/${h4_file}")
-     add_custom_command (
-         TARGET     hdftest-shared
-         POST_BUILD
-         COMMAND    ${CMAKE_COMMAND}
-         ARGS       -E copy_if_different ${HDF4_MFHDF_TEST_DIR}/${h4_file} ${dest}
-   )
-   endif ()
-endforeach ()
-
 #-- Copy all the dat files from the test directory into the source directory
 set (HDF4_REFERENCE2_TEST_FILES
     testout.sav
 )
 
-foreach (h4_file ${HDF4_REFERENCE2_TEST_FILES})
-   set (dest "${PROJECT_BINARY_DIR}/TEST/${h4_file}")
-   add_custom_command (
-       TARGET     cdftest
-       POST_BUILD
-       COMMAND    ${CMAKE_COMMAND}
-       ARGS       -E copy_if_different ${HDF4_MFHDF_TEST_DIR}/${h4_file} ${dest}
-   )
+foreach (h4_file ${HDF4_REFERENCE_TEST_FILES} ${HDF4_REFERENCE2_TEST_FILES})
+   HDFTEST_COPY_FILE("${HDF4_MFHDF_TEST_DIR}/${h4_file}" "${PROJECT_BINARY_DIR}/TEST/${h4_file}" "mfhdf_test_files")
    if (BUILD_SHARED_LIBS)
-     set (dest "${PROJECT_BINARY_DIR}/TEST-shared/${h4_file}")
-     add_custom_command (
-         TARGET     cdftest-shared
-         POST_BUILD
-         COMMAND    ${CMAKE_COMMAND}
-         ARGS       -E copy_if_different ${HDF4_MFHDF_TEST_DIR}/${h4_file} ${dest}
-     )
+     HDFTEST_COPY_FILE("${HDF4_MFHDF_TEST_DIR}/${h4_file}" "${PROJECT_BINARY_DIR}/TEST-shared/${h4_file}" "mfhdf_test_files")
    endif ()
 endforeach ()
+add_custom_target(mfhdf_test_files ALL COMMENT "Copying files needed by mfhdf tests" DEPENDS ${mfhdf_test_files_list})
 
 ##############################################################################
 ##############################################################################
@@ -210,25 +180,15 @@ endif ()
 #-- Adding test for xdrtest
 if (HDF4_BUILD_XDR_LIB)
   add_executable (xdrtest ${HDF4_MFHDF_XDR_DIR}/xdrtest.c)
-  TARGET_NAMING (xdrtest STATIC)
   TARGET_C_PROPERTIES (xdrtest STATIC " " " ")
-  target_link_libraries (xdrtest ${HDF4_MF_LIB_TARGET} ${HDF4_SRC_LIB_TARGET} ${LINK_LIBS} ${HDF4_MF_XDR_LIB_TARGET})
+  target_link_libraries (xdrtest ${HDF4_MF_LIB_TARGET})
 
   if (MSVC_VERSION LESS 1900)
-    add_custom_command (
-        TARGET     xdrtest
-        POST_BUILD
-        COMMAND    ${CMAKE_COMMAND}
-        ARGS       -E copy_if_different ${HDF4_MFHDF_XDR_DIR}/xdrtest.out ${PROJECT_BINARY_DIR}/TEST/xdrtest.out
-    )
+    HDFTEST_COPY_FILE("${HDF4_MFHDF_XDR_DIR}/xdrtest.out" "${PROJECT_BINARY_DIR}/TEST/xdrtest.out" "xdrtest_files")
   else ()
-    add_custom_command (
-        TARGET     xdrtest
-        POST_BUILD
-        COMMAND    ${CMAKE_COMMAND}
-        ARGS       -E copy_if_different ${HDF4_MFHDF_XDR_DIR}/xdrtest.cyg ${PROJECT_BINARY_DIR}/TEST/xdrtest.out
-    )
+    HDFTEST_COPY_FILE("${HDF4_MFHDF_XDR_DIR}/xdrtest.cyg" "${PROJECT_BINARY_DIR}/TEST/xdrtest.out" "xdrtest_files")
   endif ()
+  add_custom_target(xdrtest_files ALL COMMENT "Copying files needed by xdrtest tests" DEPENDS ${xdrtest_files_list})
 
   if (HDF4_ENABLE_USING_MEMCHECKER)
     add_test (NAME MFHDF_TEST-xdrtest COMMAND $<TARGET_FILE:xdrtest>)
diff --git a/mfhdf/xdr/CMakeLists.txt b/mfhdf/xdr/CMakeLists.txt
index f332a81a..1222db0c 100644
--- a/mfhdf/xdr/CMakeLists.txt
+++ b/mfhdf/xdr/CMakeLists.txt
@@ -18,7 +18,7 @@ INCLUDE_DIRECTORIES (${HDF4_MFHDF_XDR_DIR})
 
 add_library (${HDF4_MF_XDR_LIB_TARGET} STATIC ${HDF4_MFHDF_XDR_SRCS} ${HDF4_MFHDF_XDR_HDRS})
 if (MSVC OR MINGW)
-  target_link_libraries (${HDF4_MF_XDR_LIB_TARGET} "ws2_32.lib")
+  target_link_libraries (${HDF4_MF_XDR_LIB_TARGET} PUBLIC "ws2_32.lib")
 endif ()
 TARGET_C_PROPERTIES (${HDF4_MF_XDR_LIB_TARGET} STATIC " " " ")
 set_global_variable (HDF4_LIBRARIES_TO_EXPORT "${HDF4_LIBRARIES_TO_EXPORT};${HDF4_MF_XDR_LIB_TARGET}")
@@ -36,7 +36,7 @@ set (install_targets ${HDF4_MF_XDR_LIB_TARGET})
 if (BUILD_SHARED_LIBS)
   add_library (${HDF4_MF_XDR_LIBSH_TARGET} SHARED ${HDF4_MFHDF_XDR_SRCS} ${HDF4_MFHDF_XDR_HDRS})
   if (MSVC OR MINGW)
-    target_link_libraries (${HDF4_MF_XDR_LIBSH_TARGET} "ws2_32.lib")
+    target_link_libraries (${HDF4_MF_XDR_LIBSH_TARGET} PUBLIC "ws2_32.lib")
   endif ()
   TARGET_C_PROPERTIES (${HDF4_MF_XDR_LIBSH_TARGET} SHARED " " " ")
   set_global_variable (HDF4_LIBRARIES_TO_EXPORT "${HDF4_LIBRARIES_TO_EXPORT};${HDF4_MF_XDR_LIBSH_TARGET}")
diff --git a/release_notes/HISTORY.txt b/release_notes/HISTORY.txt
index 4b9c9bfc..fb9eef53 100644
--- a/release_notes/HISTORY.txt
+++ b/release_notes/HISTORY.txt
@@ -16,6 +16,7 @@
 
 List of the HDF4 releases
 
+4.2.13         June 2017
 4.2.12         June	 2016  /* delayed dues to 1.10 and 1.8.17 releases */
 4.2.11         February	 2015
 4.2.10         February	 2014
@@ -45,6 +46,244 @@ List of the HDF4 releases
 
 ==========================================================================    
 
+%%%4.2.13%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+HDF version 4.2.13 released on 2017-06-24
+====================================================
+
+INTRODUCTION
+
+This document describes the differences between HDF 4.2.12 and HDF 4.2.13.
+It is written for people who are familiar with previous releases of HDF
+and wish to migrate to HDF 4.2.13.
+
+The HDF 4.2.13 documentation can be found on the The HDF Group's website
+at:
+    https://www.hdfgroup.org/release4/doc/
+
+First-time HDF users are encouraged to read the HDF FAQ, which can be
+reached from the HDF product home page:
+
+    https://support.hdfgroup.org/products/hdf4/
+
+CONTENTS
+
+- New features and changes
+  -- Configuration
+- Support for new platforms and compilers
+- Bugs fixed since HDF 4.2.12
+  -- Configuration
+  -- Library
+  -- Utilities
+- Documentation
+- Platforms tested
+- Known problems
+
+
+New features and changes
+========================
+   Configuration
+   =============
+    - CMake
+      CMake minimum version is 3.2.2
+
+
+Support for new platforms and compilers
+=======================================
+    - Support for macOS Sierra 10.12.5 was added (LK - 2017/06/23, HDFFR-1558)
+
+
+Bugs fixed since HDF 4.2.12
+=========================
+   Library
+   =========
+    - Several memory leaks occurred in an SD API internal function.  These leaks
+      are now removed.
+      (BMR - 2017/06/23, HDFFR-1534)
+    - Memory leaks occurred because memory returned by HDstrdup were not freed.
+      This is now fixed.
+      (BMR - 2017/06/23, HDFFR-1536)
+
+
+
+Documentation
+=============
+    - Minor improvements were made to the User's Guide, Reference Manual, and
+      Specification and Developer’s Guide.
+      (BMR - 2017/06/23)
+
+
+Platforms tested
+================
+This version has been tested in the following platforms:
+
+(Format:
+   uname -s, uname -r
+   uname -v, uname -p, uname -m)
+
+
+
+   Linux 2.6.32-573.22.1.el6.x86_64  gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-16)
+   #1 SMP, x86_64                    GNU Fortran (GCC) 4.4.7 20120313 (Red Hat 4.4.7-16)
+   (mayll/platypus)                  icc (ICC) 15.0.3.187 Build 20150407
+                                     ifort (IFORT) 15.0.3.187 Build 20150407
+                                     pgcc and pgf90 15.7-0 64-bit target on x86-64 Linux -tp nehalem
+
+   Linux, 3.10.0-327.10.1.el7.x86_64 gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-4)
+   #1 SMP x86_64, GNU/Linux          GNU Fortran (GCC) 4.8.5 20150623 (Red Hat 4.8.5-4)
+   (kituo/moohan)                    icc (ICC) 15.0.3.187 Build 20150407
+                                     ifort (IFORT) 15.0.3.187 Build 20150407
+
+   Linux, 2.6.32-573.18.1.el6.ppc64  (1) GNU Fortran (GCC) 4.4.7 20120313 (Red Hat 4.4.7-11)
+   #1 SMP, ppc64 (ostrich)           (2) IBM XL Fortran for Linux, V15.1 (64-bit mode)
+
+   SunOS 5.11 (32- and 64-bit)       Sun C 5.12 SunOS_sparc 2011/11/16
+   11.1, sparc, sun4v (emu)          Sun Fortran 95 8.6 SunOS_sparc 2011/11/16
+
+    Windows 7                     Visual Studio 2012 w/ Intel Fortran 15 (cmake)
+                                  Visual Studio 2013 w/ Intel Fortran 15 (cmake)
+                                  Visual Studio 2015 w/ Intel Fortran 16 (cmake)
+
+    Windows 7 x64                 Visual Studio 2012 w/ Intel Fortran 15 (cmake)
+                                  Visual Studio 2013 w/ Intel Fortran 15 (cmake)
+                                  Visual Studio 2015 w/ Intel Fortran 16 (cmake)
+                                  Visual Studio 2015 w/ Intel C, Fortran 2017 (cmake)
+
+    Windows 10                    Visual Studio 2015 w/ Intel Fortran 16 (cmake)
+                                  Cygwin(CYGWIN_NT-6.1 2.8.0(0.309/5/3)
+                                      gcc and gfortran compilers (GCC 5.4.0)
+                                      (cmake and autotools)
+
+    Windows 10 x64                Visual Studio 2015 w/ Intel Fortran 16 (cmake)
+
+
+   Mac OS X 10.9.5, Darwin, 13.4.0   Apple clang version 6.0 from Xcode 6.2
+   x86_64                            gfortran GNU Fortran (GCC) 4.9.2
+   (wren,quail)                      Intel icc and ifort Version 15.0.3
+
+   Mac OS X 10.10.5, Darwin, 14.5.0  Apple clang version 6.1 from Xcode 7.0
+   x86_64                            gfortran GNU Fortran (GCC) 4.9.2
+   (osx1010dev)                      Intel icc and ifort version 15.0.3
+
+   Mac OS X 10.11.5, Darwin, 15.6.0  Apple clang version 7.3 from Xcode 7.3
+   x86_64                            gfortran GNU Fortran (GCC) 5.2.0
+   (osx1010dev)                      Intel icc and ifort version 15.0.3
+
+   macOS Sierra 10.12.5, Darwin,     Apple clang version 8.1.0 from Xcode 8.3
+   16.6.0, x86_64                    gfortran GNU Fortran (GCC) 7.1.0
+   (kite)                            Intel icc and ifort version 17.0.2
+                                  
+   Debian 8.6.0 3.16.0-4-amd64
+   #1 SMP Debian 3.16.43-2, x86_64 GNU/Linux
+                                     gcc (Debian 4.9.2-10) 4.9.2
+                                     GNU Fortran (Debian 4.9.2-10) 4.9.2
+                                     (cmake and autotools)
+
+   Fedora24 4.7.2-201.fc24.x86_64
+   #1 SMP x86_64  GNU/Linux          gcc (GCC) 6.1.1 20160621 (Red Hat 6.1.1-3)
+                                     GNU Fortran (GCC) 6.1.1 20160621 (Red Hat 6.1.1-3)
+                                     (cmake and autotools)
+
+   SUSE Server 12 SP1 3.12.49-1
+   #1 SMP x86_64 GNU/Linux           gcc (SUSE Linux) 4.8.5
+                                     GNU Fortran (SUSE Linux) 4.8.5
+                                     (cmake and autotools)
+
+   Ubuntu 14.04 4.4.0-81-generic
+   #104-Ubuntu SMP x86_64 GNU/Linux  gcc (Ubuntu 5.4.0-6ubuntu16.04.4) 5.4.0
+                                     GNU Fortran (Ubuntu 5.4.0-6ubuntu16.04.4) 5.4.0
+                                     (cmake and autotools)
+
+
+Known problems
+==============
+o  Several Fortran examples print "^@" when displaying strings (for example,
+   names of the attributes). This happens because Fortran application
+   doesn't know the length of the strings passed from the C library.
+   EIP - 2015-01-11, HDFFR-1477
+
+o  CMake fails to set the full path to the install location on Windows:
+    The configuration file for examples, HDF4_Examples.cmake, must be updated
+    with the correct value by editing the file or using the INSTALLDIR option..
+   ADB - 2014/02/03
+
+o  CMake "make install" fails installing the tools:
+    Use CPack to create an install package.
+   ADB - 2014/02/03
+
+o  CMake does not install these man pages:
+    hdf.1, ncdump.1, ncgen.1
+   AKC/BMR - 2014/02/02
+
+o  For Mac OS X 10.7 Lion, 10.8 Mountain Lion, 10.9 Mavericks, 10.10 Yosemite,
+   and 10.11 El Capitan, when compiling with -O2, some xdr functions might cause
+   memory corruption.  This happened for GCC, Intel and Clang compilers.
+   Currently, -O0 level optimization is used to avoid this problem.
+   (HDFFR-1318,1327,1358,1425) EIP - 2013/02/05, BMR - 2016/06/24
+
+o  On IBM PowerPC 64, hdftest fails when gcc 4.4.6 is used with -O3 optimization
+   level.
+
+o  When building in AIX systems, if CC is xlc with -qlanglvl=ansi, configure
+   will fail when checking for the jpeglib.h header due to the duplicated
+   macro definition of HAVE_STDLIB_H.  This is because some newer builds
+   of the jpeg library have HAVE_STDLIB_H defined in the jconfig.h header file.
+   Without the -qlanglvl=ansi, some older xlc versions (e.g., V7.0) still
+   fail, but newer xlc versions (e.g., V9.0) pass.  AKC - 2010/02/17
+
+o  When building on Linux/UNIX platforms, the szip shared library files must
+   be in the system library path.  This can be done by adding a link to
+   the libsz.* files in the /usr/lib folder or by adding the library
+   location to the LD_LIBRARY_PATH environment variable.
+      Ex. export LD_LIBRARY_PATH=path_to_szip_lib:$LD_LIBRARY_PATH
+   Optionally, one can use the static szip library files by adding '-static'
+   to the CFLAGS environment variable.
+
+o  Existing data written by an HDF4 Library prior to HDF 4.2r2:
+   When a one-dimensional SDS and a dimension scale have
+   the same name, subsequent accesses to the dimension scale or to the
+   SDS might produce undesired results because the libraries could not
+   distinguish between the two objects.  In the case of writing, data
+   might even be corrupted.  For example, SDS data might be written to a
+   dimension variable or vice versa. (bugzilla #624)
+
+   HDF4 Library Releases 4.2r2 and later make a distinction between an SDS
+   and a dimension variable.  However, as with older versions, these recent
+   versions are unable to detect such conflicts in files created by earlier
+   releases.  It is therefore STRONGLY recommended to check for such name
+   duplication before working with data created with a pre-4.2r2 library.
+
+   The functions SDgetnumvars_byname and SDnametoindices are provided
+   to help detect such name conflicts and select the correct object to
+   access, respectively; see the HDF Reference Manual entries for
+   further details.
+   FB - 2009/01/26
+   BMR - revised 2011/06/24
+
+o  N-bit compression is not supported with Fortran APIs.
+
+o  Using both fill-value and compression on SD datasets does not work.
+
+o  When using PGI compilers, make sure that the JPEG library is also compiled
+   with a PGI C compiler; linking with a JPEG library built with gcc causes
+   JPEG library tests to fail.  To bypass the problem:
+
+       x Set LIBS flag to $PGI_JPEG_INSTALL_DIR/lib/libjpeg.a
+         where $PGI_JPEG_INSTALL_DIR points to the installation directory
+         for the PGI-compiled JPEG library:
+
+         setenv LIBS $PGI_JPEG_INSTALL_DIR/lib/libjpeg.a
+
+       x Use the --with-jpeg=$PGI_JPEG_INSTALL_DIR configure flag to
+         configure with the PGI-compiled JPEG library:
+
+         ./configure --with-jpeg=$PGI_JPEG_INSTALL_DIR --with-zlib....
+
+o  In order for the API SDgetdatasize to get the correct compressed size
+   of the data, the dataset needs to be closed (SDendaccess) or read
+   (SDreaddata) after being written and before SDgetdatasize is called.
+   BMR - 2008/11/22
+
+
 %%%4.2.12%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 HDF version 4.2.12 released on 2016-06-29
 ====================================================
diff --git a/release_notes/INSTALL_CMake.txt b/release_notes/INSTALL_CMake.txt
index a9a88fed..f0c17594 100644
--- a/release_notes/INSTALL_CMake.txt
+++ b/release_notes/INSTALL_CMake.txt
@@ -25,7 +25,7 @@ Obtaining HDF4 source code
    2. Obtain compressed (*.tar or *.zip) HDF4 source from
         https://www.hdfgroup.org/ftp/HDF/HDF_Current/src/
       and put it in "myhdfstuff".
-      Do not uncompress.
+      Uncompress the file. There should be a hdf-4.2."X" folder.
 
 CMake version
    1. We suggest you obtain the latest CMake from the Kitware web site.
@@ -49,6 +49,9 @@ HDF Group recommends using the ctest script mode to build HDF4.
 The following files referenced below are available at the HDF web site:
     https://www.hdfgroup.org/release4/cmakebuild.html
 
+Single compressed file with all the files needed, including source:
+    hdf-4.2.X-CMake.zip or hdf-4.2.X-CMake.tar.gz
+
 CMake build script:
     CTestScript.cmake
 
@@ -58,10 +61,8 @@ External compression szip and zlib libraries:
     ZLib.tar.gz
 
 Platform configuration files:
-    HDF4Windows64CMake.cmake
-    HDF4Windows32CMake.cmake
-    HDF4LinuxCMake.cmake
-    HDF4MacCMake.cmake
+    HDF4config.cmake
+-----------------------------------------------
 
 To build HDF4 with the SZIP, ZLIB and JPEG external libraries you will need to:
 
@@ -70,20 +71,35 @@ To build HDF4 with the SZIP, ZLIB and JPEG external libraries you will need to:
    2. Download the SZip.tar.gz, ZLib.tar.gz, and JPEG.tar.gz to "myhdfstuff".
       Do not uncompress the files.
 
-  3. Download the CTestScript.cmake file to "myhdfstuff".
+   3. Download the CTestScript.cmake file to "myhdfstuff".
       CTestScript.cmake file should not be modified.
 
-   4. Download a platform configuration file to "myhdfstuff".
-      Do not modify the file unless you want to change default build
-      environment.
+   4. Download the platform configuration file to, HDF4config.cmake,
+      to "myhdfstuff" Do not modify the file unless you want to change
+      default build environment.
 
    5. From the "myhdfstuff" directory execute the CTest Script with the
       following options:
 
-         ctest -S <configuration file> -C Release -VV -O hdf4.log
+      On 32-bit Windows with Visual Studio 2012, execute:
+         ctest -S HDF4config.cmake,BUILD_GENERATOR=VS2012 -C Release -VV -O hdf4.log
+      On 64-bit Windows with Visual Studio 2012, execute:
+         ctest -S HDF4config.cmake,BUILD_GENERATOR=VS201264 -C Release -VV -O hdf4.log
+      On 32-bit Windows with Visual Studio 2013, execute:
+         ctest -S HDF4config.cmake,BUILD_GENERATOR=VS2013 -C Release -VV -O hdf4.log
+      On 64-bit Windows with Visual Studio 2013, execute:
+         ctest -S HDF4config.cmake,BUILD_GENERATOR=VS201364 -C Release -VV -O hdf4.log
+      On Linux and Mac, execute:
+         ctest -S HDF4config.cmake,BUILD_GENERATOR=Unix -C Release -VV -O hdf4.log
 
       The command above will configure, build, test, and create an install
-      package in the myhdfstuff/hdf-4.2/build folder.
+      package in the myhdfstuff folder. It will have the format:
+          HDF5-4.2.NN-<platform>.<zip or tar.gz>
+
+          On Unix, <platform> will be "Linux". A similar .sh file will also be created.
+          On Windows, <platform> will be "win64" or "win32". If you have an
+          installer on your system, you will also see a similar file that ends
+          in either .exe (NSIS) or .msi (WiX).
 
       The -S option uses the script version of ctest.
 
@@ -112,7 +128,7 @@ To build HDF4 with the SZIP, ZLIB and JPEG external libraries you will need to:
 
       On Linux, change to the install destination directory
       (create it if doesn't exist) and execute:
-                <path-to>/myhdfstuff/hdf-4.2/build/HDF-4.2."X"-Linux.sh
+                <path-to>/myhdfstuff/HDF-4.2."X"-Linux.sh
       After accepting the license, the script will prompt:
         By default the HDF4 will be installed in:
         "<current directory>/HDF-4.2."X"-Linux"
@@ -128,7 +144,7 @@ To build HDF4 with the SZIP, ZLIB and JPEG external libraries you will need to:
          ------lib
          ------share
 
-      On Mac you will find HDF-4.2."X"-Darwin.dmg in the build folder. Click
+      On Mac you will find HDF-4.2."X"-Darwin.dmg in the myhdfstuff folder. Click
       on the dmg file to proceed with installation. After accepting the license,
       there will be a folder with the following structure:
          HDF_Group
@@ -140,7 +156,7 @@ To build HDF4 with the SZIP, ZLIB and JPEG external libraries you will need to:
          ------share
 
       By default the installation will create the bin, include, lib and cmake
-      folders in the <install destination directory>/HDF_Group/HDF/4.2.
+      folders in the <install destination directory>/HDF_Group/HDF/4.2."X"
 
 
 ========================================================================
@@ -163,10 +179,10 @@ Notes: This short set of instructions is written for users who want to
       5. Configure the C library, tools and tests with one of the following commands:
 
          On Windows 32 bit
-           cmake -G "Visual Studio 11" -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_TESTING:BOOL=ON -DHDF4_BUILD_TOOLS:BOOL=ON ..\hdf-4.2."X"
+           cmake -G "Visual Studio 12 2013" -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_TESTING:BOOL=ON -DHDF4_BUILD_TOOLS:BOOL=ON ..\hdf-4.2."X"
 
          On Windows 64 bit
-           cmake -G "Visual Studio 11 Win64" -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_TESTING:BOOL=ON -DHDF4_BUILD_TOOLS:BOOL=ON ..\hdf-4.2."X"
+           cmake -G "Visual Studio 12 2013 Win64" -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_TESTING:BOOL=ON -DHDF4_BUILD_TOOLS:BOOL=ON ..\hdf-4.2."X"
 
          On Linux and Mac
            cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_TESTING:BOOL=ON -DHDF4_BUILD_TOOLS:BOOL=ON ../hdf-4.2."X"
@@ -246,13 +262,13 @@ IV. Further considerations
          where "some_location" is the full path to the extlibs folder.
          Note that you can use either JPEG 6b or 8b.
 
-      B. Use source packages from an SVN server by adding the following CMake
+      B. Use source packages from an GIT server by adding the following CMake
          options:
-            HDF4_ALLOW_EXTERNAL_SUPPORT:STRING="SVN"
-            JPEG_SVN_URL:STRING="https://some_location/jpeg/trunk"
-            ZLIB_SVN_URL:STRING="https://some_location/zlib/trunk"
-            SZIP_SVN_URL:STRING="https://some_location/szip/trunk"
-         where "some_location" is the URL to the SVN repository. Also set
+            HDF4_ALLOW_EXTERNAL_SUPPORT:STRING="GIT"
+            JPEG_GIT_URL:STRING="https://some_location/jpeg"
+            ZLIB_GIT_URL:STRING="https://some_location/zlib"
+            SZIP_GIT_URL:STRING="https://some_location/szip"
+         where "some_location" is the URL to the GIT repository. Also set
          CMAKE_BUILD_TYPE to the configuration type.
 
       C. Use source packages from a compressed file by adding the following
@@ -266,15 +282,6 @@ IV. Further considerations
          file and ext is the type of compression file. Also set CMAKE_BUILD_TYPE
          to the configuration type during configuration
 
-      D. Use source packages from a compressed file by adding the following
-         CMake options:
-            HDF4_ALLOW_EXTERNAL_SUPPORT:STRING="GIT"
-            JPEG_GIT_URL:STRING="https://some_location/jpeg/master"
-            ZLIB_GIT_URL:STRING="https://some_location/zlib/master"
-            SZIP_GIT_URL:STRING="https://some_location/szip/master"
-         where "some_location" is the URL to the GIT repository. Also set
-         CMAKE_BUILD_TYPE to the configuration type.
-
    3. If you are building on Apple Darwin platforms, you should add the
       following options:
           Compiler choice - use xcode by setting the ENV variables of CC and CXX
@@ -285,7 +292,7 @@ IV. Further considerations
             CTEST_USE_LAUNCHERS:BOOL=ON
             CMAKE_BUILD_WITH_INSTALL_RPATH:BOOL=OFF
 
-   4. Windows developers should install NSIS to create an install image with CPack.
+   4. Windows developers should install NSIS or WiX to create an install image with CPack.
       Visual Studio Express users will not be able to package HDF4 into
       an install image executable.
 
@@ -293,7 +300,7 @@ IV. Further considerations
       the settings for the developers' environment. Then the only options needed
       on the command line are those options that are different. Example using HDF
       default cache file:
-           cmake -C ../config/cmake/cacheinit.cmake -G "Visual Studio 11" \
+           cmake -C ../config/cmake/cacheinit.cmake -G "Visual Studio 12 2013" \
                -DHDF4_ENABLE_SZIP_SUPPORT:BOOL=OFF -DHDF4_ENABLE_EXAMPLES:BOOL=OFF \
                -DCMAKE_BUILD_TYPE:STRING=Release ..
 
@@ -373,12 +380,12 @@ These five steps are described in detail below.
             * MinGW Makefiles
             * NMake Makefiles
             * Unix Makefiles
-            * Visual Studio 12
-            * Visual Studio 12 Win64
-            * Visual Studio 11
-            * Visual Studio 11 Win64
-            * Visual Studio 10
-            * Visual Studio 10 Win64
+            * Visual Studio 11 2012
+            * Visual Studio 11 2012 Win64
+            * Visual Studio 12 2013
+            * Visual Studio 12 2013 Win64
+            * Visual Studio 14 2015
+            * Visual Studio 14 2015 Win64
 
         <options> is:
             * SZIP_INCLUDE_DIR:PATH=<path to szip includes directory>
@@ -402,8 +409,6 @@ These five steps are described in detail below.
             set (HDF4_BUILD_UTILS ON CACHE BOOL "Build HDF4 Library Utilities" FORCE)
             set (HDF4_ENABLE_NETCDF ON CACHE BOOL "Build HDF4 versions of NetCDF-3 APIS" FORCE)
             set (HDF4_BUILD_XDR_LIB OFF CACHE BOOL "Build HDF4 XDR Library" FORCE)
-            set (HDF4_ENABLE_PARALLEL OFF CACHE BOOL "Enable parallel build (requires MPI)" FORCE)
-            set (MPIEXEC_MAX_NUMPROCS "3" CACHE STRING "Minimum number of processes for HDF parallel tests" FORCE)
             set (HDF4_ENABLE_JPEG_LIB_SUPPORT ON CACHE BOOL "Enable Jpeg library" FORCE)
             set (HDF4_ENABLE_Z_LIB_SUPPORT ON CACHE BOOL "Enable Zlib Filters" FORCE)
             set (HDF4_ENABLE_SZIP_SUPPORT ON CACHE BOOL "Use SZip Filter" FORCE)
@@ -412,11 +417,14 @@ These five steps are described in detail below.
             set (HDF4_DISABLE_COMPILER_WARNINGS OFF CACHE BOOL "Disable compiler warnings" FORCE)
             set (HDF4_PACKAGE_EXTLIBS OFF CACHE BOOL "(WINDOWS)CPACK - include external libraries" FORCE)
             set (HDF4_NO_PACKAGES OFF CACHE BOOL "CPACK - Disable packaging" FORCE)
-            set (HDF4_ALLOW_EXTERNAL_SUPPORT "NO" CACHE STRING "Allow External Library Building (NO GIT SVN TGZ)" FORCE)
-            set_property (CACHE HDF4_ALLOW_EXTERNAL_SUPPORT PROPERTY STRINGS NO GIT SVN TGZ)
+            set (HDF4_ALLOW_EXTERNAL_SUPPORT "NO" CACHE STRING "Allow External Library Building (NO GIT TGZ)" FORCE)
+            set_property (CACHE HDF4_ALLOW_EXTERNAL_SUPPORT PROPERTY STRINGS NO GIT TGZ)
             set (ZLIB_TGZ_NAME "ZLib.tar.gz" CACHE STRING "Use ZLib from compressed file" FORCE)
             set (SZIP_TGZ_NAME "SZip.tar.gz" CACHE STRING "Use SZip from compressed file" FORCE)
             set (JPEG_TGZ_NAME "JPEG8b.tar.gz" CACHE STRING "Use JPEG from compressed file" FORCE)
+            set (ZLIB_PACKAGE_NAME "zlib" CACHE STRING "Name of ZLIB package" FORCE)
+            set (SZIP_PACKAGE_NAME "szip" CACHE STRING "Name of SZIP package" FORCE)
+            set (JPEG_PACKAGE_NAME "jpeg" CACHE STRING "Name of JPEG package" FORCE)
 
    2. Configure the cache settings
 
@@ -440,7 +448,7 @@ These five steps are described in detail below.
 
       2.2  Preferred command line example on Windows in c:\MyHDFstuff\hdf4\build directory:
 
-               cmake -C ../config/cmake/cacheinit.cmake -G "Visual Studio 11" \
+               cmake -C ../config/cmake/cacheinit.cmake -G "Visual Studio 12 2013" \
                -DHDF4_ENABLE_SZIP_SUPPORT:BOOL=OFF -DHDF4_ENABLE_Z_LIB_SUPPORT:BOOL=OFF \
                -DCMAKE_BUILD_TYPE:STRING=Release ..
 
@@ -468,17 +476,17 @@ These five steps are described in detail below.
            file in your build directory. Be sure to select either Debug or
            Release and build the solution.
 
-      3.2.1  The external libraries (zlib, Szip, and jpeg) can be configured
+      3.2.1  The external libraries (zlib, szip, and jpeg) can be configured
            to allow building the libraries by downloading from an SVN repository.
            The option is 'HDF4_ALLOW_EXTERNAL_SUPPORT'; by adding the following
            configuration option:
-               -DHDF4_ALLOW_EXTERNAL_SUPPORT:STRING="SVN"
+               -DHDF4_ALLOW_EXTERNAL_SUPPORT:STRING="GIT"
 
-           The options to control the SVN URL (config/cmake/cacheinit.cmake file) are:
-               JPEG_SVN_URL:STRING="https://svn.hdfgroup.org/jpeg8b/trunk"
-               ZLIB_SVN_URL:STRING="https://svn.hdfgroup.org/zlib/trunk"
-               SZIP_SVN_URL:STRING="https://svn.hdfgroup.org/szip/trunk"
-           These should be changed to your location. Also define CMAKE_BUILD_TYPE
+           The options to control the GIT URL (config/cmake/cacheinit.cmake file) are:
+               JPEG_GIT_URL:STRING="https://${git_url}/jpeg8b"
+               ZLIB_GIT_URL:STRING="https://${git_url}/zlib"
+               SZIP_GIT_URL:STRING="https://${git_url}/szip"
+           ${git_url} should be changed to your location. Also define CMAKE_BUILD_TYPE
            to be the configuration type.
 
       3.2.2  Or the external libraries (zlib, Szip, and jpeg) can be configured
@@ -498,19 +506,6 @@ These five steps are described in detail below.
             file such as .bz2, .tar, .tar.gz, .tgz, or .zip. Also define
             CMAKE_BUILD_TYPE to be the configuration type.
 
-      3.2.3  The external libraries (zlib, Szip, and jpeg) can be configured
-           to allow building the libraries by downloading from an GIT repository.
-           The option is 'HDF4_ALLOW_EXTERNAL_SUPPORT'; by adding the following
-           configuration option:
-               -DHDF4_ALLOW_EXTERNAL_SUPPORT:STRING="GIT"
-
-           The options to control the GIT URL are:
-               JPEG_GIT_URL:STRING="https://git.hdfgroup.org/jpeg8b/master"
-               ZLIB_GIT_URL:STRING="https://git.hdfgroup.org/zlib/master"
-               SZIP_GIT_URL:STRING="https://git.hdfgroup.org/szip/master"
-           These should be changed to your location. Also define CMAKE_BUILD_TYPE
-           to be the configuration type.
-
    4. Test HDF4
 
       To test the build, navigate to your build directory and execute:
@@ -523,7 +518,7 @@ These five steps are described in detail below.
 
    5. Packaging HDF4 (create an install image)
 
-      To package the build into a simple installer using the NullSoft installer NSIS
+      To package the build into a simple installer using WiX toolset or the NullSoft installer NSIS
       on Windows, or into compressed files (.tar.gz, .sh, .zip), use the CPack tool.
 
       To package the build, navigate to your build directory and execute;
@@ -531,8 +526,9 @@ These five steps are described in detail below.
               cpack -C {Debug | Release} CPackConfig.cmake
 
       NOTE: See note 8 of this document for NSIS information.
-            Also, if you are using a Visual Studio Express version or do not
-            want to enable the packaging components, set HDF4_NO_PACKAGES
+            See note 9 of this document for WiX information.
+            Also, if you are using a Visual Studio Express version or
+            want to disable the packaging components, set HDF4_NO_PACKAGES
             to ON (on the command line add -DHDF4_NO_PACKAGES:BOOL=ON)
 
    6. The files that support building HDF4 with CMake are all the files in the
@@ -554,6 +550,9 @@ These five steps are described in detail below.
       "output directory", which is where the program will be installed. These
       options are case-sensitive, so be sure to type them in upper case.
 
+   9. WiX Toolset
+      WiX--the Windows Installer XML toolset--lets developers create installers for
+      Windows Installer, the Windows installation engine. See http://wixtoolset.org.
 
 
 ========================================================================
@@ -562,7 +561,7 @@ VI. CMake Option Defaults for HDF4
 
 In the options listed below, there are three columns of information:
 Option Name, Option Description, and Option Default.
-The config/cmake/cacheinit.cmake file overrides the following values.
+The config/cmake/cacheinit.cmake file can override the following values.
 
 ---------------- General Build Options ---------------------
 BUILD_SHARED_LIBS  "Build Shared Libraries"    OFF
@@ -581,7 +580,6 @@ HDF4_DISABLE_COMPILER_WARNINGS "Disable compiler warnings"
 HDF4_ENABLE_COVERAGE           "Enable code coverage for Libraries and Programs"              OFF
 HDF4_ENABLE_DEPRECATED_SYMBOLS "Enable deprecated public API symbols"                         ON
 HDF4_ENABLE_LARGE_FILE         "Enable support for large (64-bit) files on Linux."            ON
-HDF4_ENABLE_PARALLEL           "Enable parallel build (requires MPI)"                         OFF
 HDF4_NO_PACKAGES               "Do not include CPack Packaging"                               OFF
 HDF4_PACKAGE_EXTLIBS           "CPACK - include external libraries"                           OFF
 HDF4_USE_FOLDERS               "Enable folder grouping of projects in IDEs."                  OFF
@@ -620,94 +618,305 @@ build and test process.
 VIII. Options for Platform Configuration Files
 ========================================================================
 
-Below is the HDF4LinuxCmake.cmake ctest script with extra comments.
-The example is for a linux machine, but the same scripts can be used on
-a Windows machine by adjusting the CTEST_CMAKE_GENERATOR option in the
-platform configuration script.
-
-
-############################################################################
-# Product specific script, HDF4LinuxCmake.cmake, that uses the
-# CTestScript.cmake file. Usage:
-# "ctest -S HDF4LinuxCmake.cmake -C Release -O hdf4shared.log"
-############################################################################
-cmake_minimum_required(VERSION 3.2.2 FATAL_ERROR)
-
-# this is the location of the source hardcoded to hdf-4.2.11
-set(CTEST_SOURCE_NAME hdf-4.2.11)
-# this is the location of the source with ctest parameter hdf4src
-# "ctest -S HDF4LinuxCmake.cmake,hdf4src -C Release -O hdf4static.log"
-#set(CTEST_SOURCE_NAME ${CTEST_SCRIPT_ARG})
+Below is the HDF4config.cmake and HDF5options.cmake ctest scripts.
+Execute:
+       ctest -S HDF4config.cmake,BUILD_GENERATOR=xxx -C Release -VV -O hdf5.log
+The same scripts can be used on Linux, Mac OSX or a Windows machine by
+adding an option (${CTEST_SCRIPT_ARG}) to the platform configuration script.
 
-# this is the location of the build directory
-set(CTEST_BINARY_NAME ${CTEST_SOURCE_NAME}/build)
 
-# this is the directory the script is executed from
-set(CTEST_DASHBOARD_ROOT "${CTEST_SCRIPT_DIRECTORY}")
-
-# this is the full path of the source directory
-set(CTEST_SOURCE_DIRECTORY "${CTEST_DASHBOARD_ROOT}/${CTEST_SOURCE_NAME}")
-
-# this is the  full path of the build directory
-set(CTEST_BINARY_DIRECTORY "${CTEST_DASHBOARD_ROOT}/${CTEST_BINARY_NAME}")
+#############################################################################################
+### ${CTEST_SCRIPT_ARG} is of the form OPTION=VALUE                                       ###
+### BUILD_GENERATOR required [Unix, VS2017, VS201764, VS2015, VS201564, VS2013, VS201364] ###
+### ctest -S HDF4config.cmake,BUILD_GENERATOR=VS201764 -C Release -VV -O hdf4.log         ###
+#############################################################################################
 
+cmake_minimum_required (VERSION 3.2.2 FATAL_ERROR)
+############################################################################
+# Usage:
+#     ctest -S HDF4config.cmake,OPTION=VALUE -C Release -VV -O test.log
+# where valid options for OPTION are:
+#     BUILD_GENERATOR - The cmake build generator:
+#            Unix      * Unix Makefiles
+#            VS2017    * Visual Studio 15 2017
+#            VS201764  * Visual Studio 15 2017 Win64
+#            VS2015    * Visual Studio 14 2015
+#            VS201564  * Visual Studio 14 2015 Win64
+#            VS2013    * Visual Studio 12 2013
+#            VS201364  * Visual Studio 12 2013 Win64
+#
+#     INSTALLDIR  -  root folder where hdf4 is installed
+#     CTEST_CONFIGURATION_TYPE  - Release, Debug, etc
+#     CTEST_SOURCE_NAME  -  source folder
+#     STATIC_ONLY  -  Build/use static libraries
+#     FORTRAN_LIBRARIES -  Build/use fortran libraries
+#     JAVA_LIBRARIES -  Build/use java libraries
+#     NO_MAC_FORTRAN  - Yes to be SHARED on a Mac
+##############################################################################
+
+set (CTEST_SOURCE_VERSION "4.2.13")
+set (CTEST_SOURCE_VERSEXT "")
+
+##############################################################################
+# handle input parameters to script.
+#BUILD_GENERATOR - which CMake generator to use, required
+#INSTALLDIR - HDF-4.2.13 root folder
+#CTEST_CONFIGURATION_TYPE - Release, Debug, RelWithDebInfo
+#CTEST_SOURCE_NAME - name of source folder; HDF-4.2.13
+#STATIC_ONLY - Default is YES
+#FORTRAN_LIBRARIES - Default is NO
+#JAVA_LIBRARIES - Default is NO
+#NO_MAC_FORTRAN - set to TRUE to allow shared libs on a Mac
+if (DEFINED CTEST_SCRIPT_ARG)
+    # transform ctest script arguments of the form
+    # script.ctest,var1=value1,var2=value2
+    # to variables with the respective names set to the respective values
+    string (REPLACE "," ";" script_args "${CTEST_SCRIPT_ARG}")
+    foreach (current_var ${script_args})
+        if ("${current_var}" MATCHES "^([^=]+)=(.+)$")
+            set ("${CMAKE_MATCH_1}" "${CMAKE_MATCH_2}")
+        endif ()
+    endforeach ()
+endif ()
+
+# build generator must be defined
+if (NOT DEFINED BUILD_GENERATOR)
+  message (FATAL_ERROR "BUILD_GENERATOR must be defined - Unix, VS2017, or VS201764, VS2015, VS201564, VS2013, VS201364")
+endif ()
 
 ###################################################################
 ### Following Line is one of [Release, RelWithDebInfo, Debug] #####
-set(CTEST_CONFIGURATION_TYPE "Release")
+set (CTEST_CONFIGURATION_TYPE "$ENV{CMAKE_CONFIG_TYPE}")
 ###################################################################
 
+if (NOT DEFINED INSTALLDIR)
+  if (WIN32)
+    set (INSTALLDIR "C:/Program Files/HDF_Group/HDF/${CTEST_SOURCE_VERSION}")
+  else ()
+    set (INSTALLDIR "${CTEST_SCRIPT_DIRECTORY}/HDF_Group/HDF/${CTEST_SOURCE_VERSION}")
+  endif ()
+endif ()
+if (NOT DEFINED CTEST_CONFIGURATION_TYPE)
+  set (CTEST_CONFIGURATION_TYPE "Release")
+endif ()
+if (NOT DEFINED CTEST_SOURCE_NAME)
+  set (CTEST_SOURCE_NAME "hdf-${CTEST_SOURCE_VERSION}${CTEST_SOURCE_VERSEXT}")
+endif ()
+if (NOT DEFINED STATIC_ONLY)
+  set (STATICONLYLIBRARIES "YES")
+else ()
+  set (STATICONLYLIBRARIES "NO")
+endif ()
+if (NOT DEFINED FORTRAN_LIBRARIES)
+  set (FORTRANLIBRARIES "NO")
+else ()
+  set(FORTRANLIBRARIES "YES")
+endif ()
+if (NOT DEFINED JAVA_LIBRARIES)
+  set (JAVALIBRARIES "NO")
+else ()
+  set (JAVALIBRARIES "YES")
+endif ()
+
+set (CTEST_BINARY_NAME "build")
+set (CTEST_DASHBOARD_ROOT "${CTEST_SCRIPT_DIRECTORY}")
+if (WIN32)
+  set (CTEST_SOURCE_DIRECTORY "${CTEST_DASHBOARD_ROOT}\\${CTEST_SOURCE_NAME}")
+  set (CTEST_BINARY_DIRECTORY "${CTEST_DASHBOARD_ROOT}\\${CTEST_BINARY_NAME}")
+else ()
+  set (CTEST_SOURCE_DIRECTORY "${CTEST_DASHBOARD_ROOT}/${CTEST_SOURCE_NAME}")
+  set (CTEST_BINARY_DIRECTORY "${CTEST_DASHBOARD_ROOT}/${CTEST_BINARY_NAME}")
+endif ()
+
 ###################################################################
 #########       Following describes compiler           ############
-# this is for linux
-set(CTEST_CMAKE_GENERATOR "Unix Makefiles")
-# this is for windows 32 bit
-#set(CTEST_CMAKE_GENERATOR "Visual Studio 11")
-# this is for windows 64 bit
-#set(CTEST_CMAKE_GENERATOR "Visual Studio 11 Win64")
-# Visual Studio 2013 is 12, Visual Studio 2012 is 11,  Visual Studio 2010 is 10
+if (WIN32)
+  set (SITE_OS_NAME "Windows")
+  set (SITE_OS_VERSION "WIN7")
+  if (${BUILD_GENERATOR} STREQUAL "VS201764")
+    set (CTEST_CMAKE_GENERATOR "Visual Studio 15 2017 Win64")
+    set (SITE_OS_BITS "64")
+    set (SITE_COMPILER_NAME "vs2017")
+    set (SITE_COMPILER_VERSION "15")
+  elseif (${BUILD_GENERATOR} STREQUAL "VS2017")
+    set (CTEST_CMAKE_GENERATOR "Visual Studio 15 2017")
+    set (SITE_OS_BITS "32")
+    set (SITE_COMPILER_NAME "vs2017")
+    set (SITE_COMPILER_VERSION "15")
+  elseif (${BUILD_GENERATOR} STREQUAL "VS201564")
+    set (CTEST_CMAKE_GENERATOR "Visual Studio 14 2015 Win64")
+    set (SITE_OS_BITS "64")
+    set (SITE_COMPILER_NAME "vs2015")
+    set (SITE_COMPILER_VERSION "14")
+  elseif (${BUILD_GENERATOR} STREQUAL "VS2015")
+    set (CTEST_CMAKE_GENERATOR "Visual Studio 14 2015")
+    set (SITE_OS_BITS "32")
+    set (SITE_COMPILER_NAME "vs2015")
+    set (SITE_COMPILER_VERSION "14")
+  elseif (${BUILD_GENERATOR} STREQUAL "VS201364")
+    set (CTEST_CMAKE_GENERATOR "Visual Studio 12 2013 Win64")
+    set (SITE_OS_BITS "64")
+    set (SITE_COMPILER_NAME "vs2013")
+    set (SITE_COMPILER_VERSION "12")
+  elseif (${BUILD_GENERATOR} STREQUAL "VS2013")
+    set (CTEST_CMAKE_GENERATOR "Visual Studio 12 2013")
+    set (SITE_OS_BITS "32")
+    set (SITE_COMPILER_NAME "vs2013")
+    set (SITE_COMPILER_VERSION "12")
+  elseif (${BUILD_GENERATOR} STREQUAL "VS201264")
+    set (CTEST_CMAKE_GENERATOR "Visual Studio 11 2012 Win64")
+    set (SITE_OS_BITS "64")
+    set (SITE_COMPILER_NAME "vs2012")
+    set (SITE_COMPILER_VERSION "11")
+  elseif (${BUILD_GENERATOR} STREQUAL "VS2012")
+    set (CTEST_CMAKE_GENERATOR "Visual Studio 11 2012")
+    set (SITE_OS_BITS "32")
+    set (SITE_COMPILER_NAME "vs2012")
+    set (SITE_COMPILER_VERSION "11")
+  else ()
+    message (FATAL_ERROR "Invalid BUILD_GENERATOR must be - Unix, VS2017, or VS201764, VS2015, VS201564, VS2013, VS201364")
+  endif ()
+##  Set the following to unique id your computer  ##
+  set (CTEST_SITE "WIN7${BUILD_GENERATOR}.XXXX")
+else ()
+  set (CTEST_CMAKE_GENERATOR "Unix Makefiles")
+##  Set the following to unique id your computer  ##
+  if (APPLE)
+    set (CTEST_SITE "MAC.XXXX")
+  else ()
+    set (CTEST_SITE "LINUX.XXXX")
+  endif ()
+  if (APPLE)
+    execute_process (COMMAND xcrun --find cc OUTPUT_VARIABLE XCODE_CC OUTPUT_STRIP_TRAILING_WHITESPACE)
+    execute_process (COMMAND xcrun --find c++ OUTPUT_VARIABLE XCODE_CXX OUTPUT_STRIP_TRAILING_WHITESPACE)
+    set (ENV{CC} "${XCODE_CC}")
+    set (ENV{CXX} "${XCODE_CXX}")
+    set (CTEST_USE_LAUNCHERS        1)
+    set (RR_WARNINGS_COMMON "-Wno-format-nonliteral -Wno-cast-align -Wno-unused -Wno-unused-variable -Wno-unused-function -Wno-self-assign -Wno-unused-parameter -Wno-sign-compare")
+    set (RR_WARNINGS_C "${RR_WARNINGS_COMMON} -Wno-deprecated-declarations -Wno-uninitialized")
+    set (RR_WARNINGS_CXX "${RR_WARNINGS_COMMON} -Woverloaded-virtual -Wshadow -Wwrite-strings -Wc++11-compat")
+    set (RR_FLAGS_COMMON "-g -O0 -fstack-protector-all -D_FORTIFY_SOURCE=2")
+    set (RR_FLAGS_C "${RR_FLAGS_COMMON}")
+    set (RR_FLAGS_CXX "${RR_FLAGS_COMMON}")
+    set (ENV{CFLAGS} "${RR_WARNINGS_C} ${RR_FLAGS_C}")
+    set (ENV{CXXFLAGS} "${RR_WARNINGS_CXX} ${RR_FLAGS_CXX}")
+  endif ()
+endif ()
 ###################################################################
 
 ###################################################################
 #########       Following is for submission to CDash   ############
 ###################################################################
-set(MODEL "Experimental")
-#########       Following describes computer           ############
-##  Set the following to unique id your computer  ##
-set(CTEST_SITE "LINUX.XXXX")
-##    following is optional to describe build     ##
-set(SITE_BUILDNAME_SUFFIX "SHARED")
-
-#########   Following controls CDash submission          ##########
-#set(LOCAL_SUBMIT "TRUE")
-#########   Following controls test process              ##########
-#set(LOCAL_SKIP_TEST "TRUE")
-#set(LOCAL_MEMCHECK_TEST "TRUE")
-#set(LOCAL_COVERAGE_TEST "TRUE")
-#########   Following controls cpack command             ##########
-#set(LOCAL_NO_PACKAGE "TRUE")
-#########   Following controls source update             ##########
-#set(LOCAL_UPDATE "TRUE")
-#########   Following controls source repository         ##########
-#set(REPOSITORY_URL "https://svn.hdfgroup.org/hdf4/trunk")
-#comment to use a uncompressed source folder
-set(CTEST_USE_TAR_SOURCE "hdf-4.2.13")
+set (MODEL "Experimental")
 ###################################################################
 
 ###################################################################
-####  Change default configuration of options in config/cmake/cacheinit.cmake file ###
-####  format: set(ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DXXX:YY=ZZZZ")
+#####       Following controls CDash submission               #####
+#set (LOCAL_SUBMIT "TRUE")
+#####       Following controls test process                   #####
+#set (LOCAL_SKIP_TEST "TRUE")
+#set (LOCAL_MEMCHECK_TEST "TRUE")
+#set (LOCAL_COVERAGE_TEST "TRUE")
+#####       Following controls cpack command                  #####
+#set (LOCAL_NO_PACKAGE "TRUE")
+#####       Following controls source update                  #####
+#set (LOCAL_UPDATE "TRUE")
+set (REPOSITORY_URL "https://git@bitbucket.hdfgroup.org/scm/hdffv/hdf5.git")
+set (REPOSITORY_BRANCH "develop")
+
+#uncomment to use a compressed source file: *.tar on linux or mac *.zip on windows
+#set(CTEST_USE_TAR_SOURCE "${CTEST_SOURCE_VERSION}")
+###################################################################
 
-### uncomment/comment and change the following lines for configuration options
+###################################################################
+if (${STATICONLYLIBRARIES})
+  set (ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DBUILD_SHARED_LIBS:BOOL=OFF")
+  #########       Following describes computer           ############
+  ## following is optional to describe build                       ##
+  set (SITE_BUILDNAME_SUFFIX "STATIC")
+endif ()
+###################################################################
+####      fortran       ####
+if (${FORTRANLIBRARIES})
+  set (ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DHDF4_BUILD_FORTRAN:BOOL=ON")
+else ()
+  set (ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DHDF4_BUILD_FORTRAN:BOOL=OFF")
+endif ()
+####      java       ####
+if (${JAVALIBRARIES})
+  set (ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DHDF4_BUILD_JAVA:BOOL=ON")
+else ()
+  set (ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DHDF4_BUILD_JAVA:BOOL=OFF")
+endif ()
 
-### uncomment the following line to build static libraries
-#set(ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DBUILD_SHARED_LIBS:BOOL=OFF")
+### change install prefix
+set (ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DCMAKE_INSTALL_PREFIX:PATH=${INSTALLDIR}")
+set (ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DCTEST_CONFIGURATION_TYPE:STRING=$ENV{CMAKE_CONFIG_TYPE}")
+
+###################################################################
 
+if (WIN32)
+  set (BINFILEBASE "HDF-${CTEST_SOURCE_VERSION}${CTEST_SOURCE_VERSEXT}-win${SITE_OS_BITS}")
+  include (${CTEST_SCRIPT_DIRECTORY}\\HDFoptions.cmake)
+  include (${CTEST_SCRIPT_DIRECTORY}\\CTestScript.cmake)
+  if (EXISTS "${CTEST_BINARY_DIRECTORY}\\${BINFILEBASE}.exe")
+    file (COPY "${CTEST_BINARY_DIRECTORY}\\${BINFILEBASE}.exe" DESTINATION ${CTEST_SCRIPT_DIRECTORY})
+  endif ()
+  if (EXISTS "${CTEST_BINARY_DIRECTORY}\\${BINFILEBASE}.msi")
+    file (COPY "${CTEST_BINARY_DIRECTORY}\\${BINFILEBASE}.msi" DESTINATION  ${CTEST_SCRIPT_DIRECTORY})
+  endif ()
+  if (EXISTS "${CTEST_BINARY_DIRECTORY}\\${BINFILEBASE}.zip")
+    file (COPY "${CTEST_BINARY_DIRECTORY}\\${BINFILEBASE}.zip" DESTINATION  ${CTEST_SCRIPT_DIRECTORY})
+  endif ()
+else ()
+  set (BINFILEBASE "HDF5-${CTEST_SOURCE_VERSION}${CTEST_SOURCE_VERSEXT}")
+  include (${CTEST_SCRIPT_DIRECTORY}/HDFoptions.cmake)
+  include (${CTEST_SCRIPT_DIRECTORY}/CTestScript.cmake)
+  if (APPLE)
+    if (EXISTS "${CTEST_BINARY_DIRECTORY}/${BINFILEBASE}-Darwin.dmg")
+      file (COPY "${CTEST_BINARY_DIRECTORY}/${BINFILEBASE}-Darwin.dmg" DESTINATION ${CTEST_SCRIPT_DIRECTORY})
+    endif ()
+    if (EXISTS "${CTEST_BINARY_DIRECTORY}/${BINFILEBASE}-Darwin.tar.gz")
+      file (COPY "${CTEST_BINARY_DIRECTORY}/${BINFILEBASE}-Darwin.tar.gz" DESTINATION  ${CTEST_SCRIPT_DIRECTORY})
+    endif ()
+    if (EXISTS "${CTEST_BINARY_DIRECTORY}/${BINFILEBASE}-Darwin.sh")
+      file (COPY "${CTEST_BINARY_DIRECTORY}/${BINFILEBASE}-Darwin.sh" DESTINATION ${CTEST_SCRIPT_DIRECTORY})
+    endif ()
+  else ()
+    if (CYGWIN)
+      if (EXISTS "${CTEST_BINARY_DIRECTORY}/${BINFILEBASE}-CYGWIN.sh")
+        file (COPY "${CTEST_BINARY_DIRECTORY}/${BINFILEBASE}-CYGWIN.sh" DESTINATION ${CTEST_SCRIPT_DIRECTORY})
+      endif ()
+      if (EXISTS "${CTEST_BINARY_DIRECTORY}/${BINFILEBASE}-CYGWIN.tar.gz")
+        file (COPY "${CTEST_BINARY_DIRECTORY}/${BINFILEBASE}-CYGWIN.tar.gz" DESTINATION  ${CTEST_SCRIPT_DIRECTORY})
+      endif ()
+    else ()
+      if (EXISTS "${CTEST_BINARY_DIRECTORY}/${BINFILEBASE}-Linux.sh")
+        file (COPY "${CTEST_BINARY_DIRECTORY}/${BINFILEBASE}-Linux.sh" DESTINATION ${CTEST_SCRIPT_DIRECTORY})
+      endif ()
+      if (EXISTS "${CTEST_BINARY_DIRECTORY}/${BINFILEBASE}-Linux.tar.gz")
+        file (COPY "${CTEST_BINARY_DIRECTORY}/${BINFILEBASE}-Linux.tar.gz" DESTINATION  ${CTEST_SCRIPT_DIRECTORY})
+      endif ()
+    endif ()
+  endif ()
+endif ()
+
+HDFoptions.cmake:
+#############################################################################################
+####  Change default configuration of options in config/cmake/cacheinit.cmake file        ###
+####  format: set(ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DXXX:YY=ZZZZ")                 ###
+#############################################################################################
+
+### uncomment/comment and change the following lines for other configuration options
+
+#############################################################################################
+####      alternate toolsets       ####
+#set(CMAKE_GENERATOR_TOOLSET "Intel C++ Compiler 17.0")
+
+#############################################################################################
 ####      ext libraries       ####
 ### ext libs from tgz
 set(ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DHDF4_ALLOW_EXTERNAL_SUPPORT:STRING=TGZ -DTGZPATH:PATH=${CTEST_SCRIPT_DIRECTORY}")
-### ext libs from svn
-#set(ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DHDF4_ALLOW_EXTERNAL_SUPPORT:STRING=SVN")
 ### ext libs from git
 #set(ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DHDF4_ALLOW_EXTERNAL_SUPPORT:STRING=GIT")
 ### ext libs on system
@@ -715,33 +924,20 @@ set(ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DHDF4_ALLOW_EXTERNAL_SUPPORT:STRING
 #set(ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DZLIB_LIBRARY:FILEPATH=some_location/lib/zlib.lib -DZLIB_INCLUDE_DIR:PATH=some_location/include")
 #set(ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DSZIP_LIBRARY:FILEPATH=some_location/lib/szlib.lib -DSZIP_INCLUDE_DIR:PATH=some_location/include")
 
-####      fortran       ####
-### enable Fortran 2003
-#set(ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DHDF4_ENABLE_F2003:BOOL=ON")
-### disable Fortran
-#set(ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DHDF4_BUILD_FORTRAN:BOOL=OFF")
-
-### Create install package with external libraries (szip, zlib)
-set(ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DHDF4_PACKAGE_EXTLIBS:BOOL=ON")
+#############################################################################################
+### disable test program builds
 
 ### disable test program builds
 #set(ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DBUILD_TESTING:BOOL=OFF")
 
+#############################################################################################
 ### disable packaging
-#set(ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DHDF4_NO_PACKAGES:BOOL=ON")
-
-### disable building examples
-#set(ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DHDF4_BUILD_EXAMPLES:BOOL=OFF")
-
-### disable building tests
-#set(ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DBUILD_TESTING:BOOL=OFF")
 
-### change install prefix
-#set(ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DCMAKE_INSTALL_PREFIX:PATH=install")
-###################################################################
-
-include(${CTEST_SCRIPT_DIRECTORY}/CTestScript.cmake)
+#set(ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DHDF4_NO_PACKAGES:BOOL=ON")
+### Create install package with external libraries (szip, zlib)
+set(ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DHDF4_PACKAGE_EXTLIBS:BOOL=ON")
 
+#############################################################################################
 
 ========================================================================
 For further assistance, send email to help@hdfgroup.org
diff --git a/release_notes/RELEASE.txt b/release_notes/RELEASE.txt
index 1d7d6011..66c4680e 100644
--- a/release_notes/RELEASE.txt
+++ b/release_notes/RELEASE.txt
@@ -1,11 +1,11 @@
-HDF version 4.2.13 released on 2017-06-24
+HDF version 4.2.13-post0 currently under development
 ====================================================
 
 INTRODUCTION
 
-This document describes the differences between HDF 4.2.12 and HDF 4.2.13.
+This document describes the differences between HDF 4.2.13 and HDF 4.2.13-post0.
 It is written for people who are familiar with previous releases of HDF
-and wish to migrate to HDF 4.2.13.
+and wish to migrate to HDF 4.2.13-post0.
 
 The HDF 4.2.13 documentation can be found on the The HDF Group's website
 at:
@@ -21,7 +21,7 @@ CONTENTS
 - New features and changes
   -- Configuration
 - Support for new platforms and compilers
-- Bugs fixed since HDF 4.2.12
+- Bugs fixed since HDF 4.2.13
   -- Configuration
   -- Library
   -- Utilities
@@ -32,35 +32,51 @@ CONTENTS
 
 New features and changes
 ========================
-   Configuration
-   =============
     - CMake
-      CMake minimum version is 3.2.2
+
+      Refactor use of CMAKE_BUILD_TYPE for new variable, which understands
+      the type of generator in use.
+
+      Added new configuration macros to use new HDF_BUILD_TYPE variable. This
+      variable is set correctly for the type of generator being used for the build.
+      Changes follow from hdf5.
+
+      (ADB - 2018/01/08, HDFFV-10385, HDFFV-10296)
+
 
 
 Support for new platforms and compilers
 =======================================
-    - Support for macOS Sierra 10.12.5 was added (LK - 2017/06/23, HDFFR-1558)
 
 
-Bugs fixed since HDF 4.2.12
-=========================
-   Library
-   =========
-    - Several memory leaks occurred in an SD API internal function.  These leaks
-      are now removed.
-      (BMR - 2017/06/23, HDFFR-1534)
-    - Memory leaks occurred because memory returned by HDstrdup were not freed.
-      This is now fixed.
-      (BMR - 2017/06/23, HDFFR-1536)
+Bugs fixed since HDF 4.2.13
+===========================
+    - CMake
+
+      Update CMake commands configuration.
+
+      A number of improvements were made to the CMake commands. Most
+      changes simplify usage or eliminate unused constructs. Also,
+      some changes support better cross-platform support. Changes
+      follow from hdf5.
+
+      (ADB - 2018/02/01, HDFFV-10398)
+
+    - CMake
+
+      Correct usage of CMAKE_BUILD_TYPE variable.
 
+      The use of the CMAKE_BUILD_TYPE is incorrect for multi-config
+      generators (Visual Studio and XCode) and is optional for single
+      config generators. Created a new macro to check
+        GLOBAL PROPERTY -> GENERATOR_IS_MULTI_CONFIG
+      Created two new HDF variable, HDF_BUILD_TYPE and HDF_CFG_BUILD_TYPE.
+      Defaults for these variables is "Release". Changes
+      follow from hdf5.
 
 
 Documentation
 =============
-    - Minor improvements were made to the User's Guide, Reference Manual, and
-      Specification and Developer’s Guide.
-      (BMR - 2017/06/23)
 
 
 Platforms tested
@@ -122,7 +138,7 @@ This version has been tested in the following platforms:
    macOS Sierra 10.12.5, Darwin,     Apple clang version 8.1.0 from Xcode 8.3
    16.6.0, x86_64                    gfortran GNU Fortran (GCC) 7.1.0
    (kite)                            Intel icc and ifort version 17.0.2
-                                  
+
    Debian 8.6.0 3.16.0-4-amd64
    #1 SMP Debian 3.16.43-2, x86_64 GNU/Linux
                                      gcc (Debian 4.9.2-10) 4.9.2
@@ -154,7 +170,8 @@ o  Several Fortran examples print "^@" when displaying strings (for example,
 
 o  CMake fails to set the full path to the install location on Windows:
     The configuration file for examples, HDF4_Examples.cmake, must be updated
-    with the correct value by editing the file or using the INSTALLDIR option..
+    with the correct value by editing the file or using the INSTALLDIR option.
+    This issue is because of spaces in the path.
    ADB - 2014/02/03
 
 o  CMake "make install" fails installing the tools:
diff --git a/release_notes/USING_CMake_Examples.txt b/release_notes/USING_CMake_Examples.txt
index 2a38cd06..dfba01b7 100644
--- a/release_notes/USING_CMake_Examples.txt
+++ b/release_notes/USING_CMake_Examples.txt
@@ -25,7 +25,7 @@ I. Preconditions
       of 3.2.2.
 
    2. You have installed the HDF4 library built with CMake by executing
-      the HDF Install Utility (the *.exe or *.msi file in the binary package for
+      the HDF Install Utility (the *.msi file in the binary package for
       Windows or the *.sh on Linux). If you are using a Windows platform,
       you can obtain a pre-built Windows binary from The HDF Group's website
       at www.hdfgroup.org.
@@ -58,7 +58,7 @@ Default installation process:
            with the CTEST_CONFIGURATION_TYPE script option. Note that this must
            be the same as the value used with the -C command line option.
        The default build configuration is defined to build and use static libraries.
-           Shared libraries can be used with the STATICLIBRARIES script option set to "NO".
+           Shared libraries can be used with the STATIC_ONLY script option set to "NO".
        Other options can be changed by editing the HDF4_Examples_options.cmake file.
 
        If the defaults are okay, execute from this directory:
diff --git a/release_notes/USING_HDF4_CMake.txt b/release_notes/USING_HDF4_CMake.txt
index ac5d200d..572b47f4 100644
--- a/release_notes/USING_HDF4_CMake.txt
+++ b/release_notes/USING_HDF4_CMake.txt
@@ -27,7 +27,7 @@ Notes: This short instruction is written for users who want to quickly
 
          3. See the appendix at the bottom of this file for an example
             of using a ctest script for building and testing. See
-            CMake.txt for more information.
+            INSTALL_CMake.txt for more information.
 
 
 
@@ -40,14 +40,14 @@ I. Preconditions
       of 3.2.2.
 
    2. You have installed the HDF4 library built with CMake, by executing
-      the HDF Install Utility (the *.exe file in the binary package for
+      the HDF Install Utility (the *.msi file in the binary package for
       Windows). If you are using a Windows platform, you can obtain a
       pre-built Windows binary from The HDF Group's website at
       www.hdfgroup.org.
 
    3. Set the environment variable HDF4_DIR to the installed location of
       the config files for HDF4. On Windows:
-            HDF4_DIR=C:/Program Files/HDF_Group/HDF/4.2.x/cmake/hdf4
+            HDF4_DIR=C:/Program Files/HDF_Group/HDF/4.2.x/cmake/hdf
 
       (Note there are no quote characters used on Windows and all platforms
       use forward slashes)
@@ -65,6 +65,7 @@ II. Building HDF4 Applications with CMake
 ========================================================================
 
 Go through these steps to build HDF4 applications with CMake.
+   (The application must support building with CMake.)
 
    1. Run CMake
    2. Configure the cache settings
@@ -98,22 +99,22 @@ These steps are described in more detail below.
             * MinGW Makefiles
             * NMake Makefiles
             * Unix Makefiles
-            * Visual Studio 12
-            * Visual Studio 12 Win64
-            * Visual Studio 11
-            * Visual Studio 11 Win64
-            * Visual Studio 10
-            * Visual Studio 10 Win64
+            * Visual Studio 12 2013
+            * Visual Studio 12 2013 Win64
+            * Visual Studio 14 2015
+            * Visual Studio 14 2015 Win64
+            * Visual Studio 15 2017
+            * Visual Studio 15 2017 Win64
 
         <options> is:
             * BUILD_TESTING:BOOL=ON
-            * USE_SHARED_LIBS:BOOL=[ON | OFF]
+            * BUILD_SHARED_LIBS:BOOL=[ON | OFF]
 
    2. Configure the cache settings
 
       2.1  Visual CMake users, click the Configure button. If this is the first time you are
            running cmake-gui in this directory, you will be prompted for the
-           generator you wish to use (for example on Windows, Visual Studio 10).
+           generator you wish to use (for example on Windows, Visual Studio 12 2013).
            CMake will read in the CMakeLists.txt files from the source directory and
            display options for the HDF4 project. After the first configure you
            can adjust the cache settings and/or specify locations of other programs.
@@ -131,7 +132,7 @@ These steps are described in more detail below.
 
       2.2  Alternative command line example on Windows in c:\MyHDFstuff\hdf4\build directory:
 
-           cmake -G "Visual Studio 11" -DBUILD_TESTING:BOOL=ON -DUSE_SHARED_LIBS:BOOL=ON ..
+           cmake -G "Visual Studio 12 2013" -DBUILD_TESTING:BOOL=ON ..
 
    3. Build HDF4 applications
 
@@ -188,15 +189,15 @@ string(TOLOWER ${LIB_TYPE} SEARCH_TYPE)
 find_package (HDF4 NAMES hdf4 COMPONENTS C ${SEARCH_TYPE})
 # find_package (HDF4) # Find non-cmake built HDF4
 INCLUDE_DIRECTORIES (${HDF4_INCLUDE_DIR})
+set (LINK_LIBS ${LINK_LIBS} ${HDF4_C_${LIB_TYPE}_LIBRARY})
 
 set (example hdf_example)
 
 add_executable (${example} ${PROJECT_SOURCE_DIR}/${example}.c)
-TARGET_NAMING (${example} ${LIB_TYPE})
 TARGET_C_PROPERTIES (${example} ${LIB_TYPE} " " " ")
-target_link_libraries (${example} ${HDF4_C_${LIB_TYPE}_LIBRARY})
+target_link_libraries (${example} ${LINK_LIBS})
 
-ENABLE_TESTING ()
+enable_testing ()
 include (CTest)
 
 add_test (NAME test_example COMMAND ${example})
@@ -208,66 +209,212 @@ add_test (NAME test_example COMMAND ${example})
 IV. APPENDIX
 ========================================================================
 
-Below is an example of the ctest script used by The HDF Group. See the
-Appendix in the INSTALL_CMake.txt file for the CTestScript.cmake file used
-by this script. Adjust the values as necessary. Note that the source folder
-is entered on the command line and the build folder is created as a sub-folder.
-Windows should adjust the forward slash to double backslashes, except for
-the HDF_DIR environment variable.
+Below is an example of a ctest script that can be used to build the examples.
+Adjust the values as necessary. Note that the defaults can be entered on the
+command line and the build folder is created as a sub-folder. Windows should
+adjust the forward slash to double backslashes, except for the HDF_DIR
+environment variable.
 
 NOTE: these files are available at the HDF web site:
     https://www.hdfgroup.org/release4/cmakebuild.html
 
-    CTestScript.cmake
-
-    HDF4ExamplesWindowsbinaryCMake.cmake
-
+    HDF4_Examples.cmake
 
+Also available at the HDF web site is a CMake application framework template.
+You can quickly add files to the framework and execute the script to compile
+your application with an installed HDF4 binary.
 
 ========================================================================
 ctest
 ========================================================================
 
-############################################################################
-# Product specific script, HDF4Example.cmake, that uses the
-# CTestScript.cmake file (see Appendix in the CMake.txt). Usage:
-# "ctest -S HDF4Example.cmake,hdf4Examples -C Release -O hdf4EX.log"
-# where hdf4Examples is the source folder relative to the location of these scripts
-############################################################################
-
-cmake_minimum_required(VERSION 3.1 FATAL_ERROR)
-
-set(CTEST_DASHBOARD_ROOT ${CTEST_SCRIPT_DIRECTORY})
-set(CTEST_SOURCE_NAME ${CTEST_SCRIPT_ARG})
-set(CTEST_BINARY_NAME ${CTEST_SOURCE_NAME}/build)
-set(CTEST_SOURCE_DIRECTORY "${CTEST_DASHBOARD_ROOT}/${CTEST_SOURCE_NAME}")
-set(CTEST_BINARY_DIRECTORY "${CTEST_DASHBOARD_ROOT}/${CTEST_BINARY_NAME}")
-set(CTEST_CONFIGURATION_TYPE "Release")
-set(MODEL "Experimental")
-
-# build generator name, see cmake generator list
-set(CTEST_CMAKE_GENERATOR "Unix Makefiles")
-
-# machine description, can be removed on linux
-set(CTEST_SITE "machine.domain")
-set(SITE_OS_NAME "os name")
-set(SITE_OS_VERSION "os version")
-set(SITE_OS_BITS "os size")
-set(SITE_COMPILER_NAME "compiler name")
-set(SITE_COMPILER_VERSION "compiler version")
-
-# needed for source updates, change as required
-set(REPOSITORY_URL "https://svn.hdfgroup.org/hdf4-examples/trunk")
-
-set(ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DCMAKE_INSTALL_PREFIX:PATH=/usr/local/hdf4Examples-4.2")
-
-# location of the installed hdf4 (cmake configuration folder)
-set(ENV{HDF4_DIR} "/usr/share/cmake")
-
-include(${CTEST_SCRIPT_DIRECTORY}/CTestScript.cmake)
+cmake_minimum_required(VERSION 3.2.2 FATAL_ERROR)
+###############################################################################################################
+# This script will build and run the examples from a folder
+# Execute from a command line:
+#     ctest -S HDF4_Examples.cmake,OPTION=VALUE -C Release -V -O test.log
+###############################################################################################################
+
+set (CTEST_CMAKE_GENERATOR "@CMAKE_GENERATOR@")
+set (CTEST_DASHBOARD_ROOT ${CTEST_SCRIPT_DIRECTORY})
+
+# handle input parameters to script.
+#INSTALLDIR - HDF4 root folder
+#CTEST_CONFIGURATION_TYPE - Release, Debug, RelWithDebInfo
+#CTEST_SOURCE_NAME - name of source folder; HDF4Examples
+#STATIC_ONLY - Default is YES
+#FORTRAN_LIBRARIES - Default is NO
+#JAVA_LIBRARIES - Default is NO
+##NO_MAC_FORTRAN - set to TRUE to allow shared libs on a Mac)
+if (DEFINED CTEST_SCRIPT_ARG)
+    # transform ctest script arguments of the form
+    # script.ctest,var1=value1,var2=value2
+    # to variables with the respective names set to the respective values
+    string (REPLACE "," ";" script_args "${CTEST_SCRIPT_ARG}")
+    foreach (current_var ${script_args})
+        if ("${current_var}" MATCHES "^([^=]+)=(.+)$")
+            set("${CMAKE_MATCH_1}" "${CMAKE_MATCH_2}")
+        endif ()
+    endforeach ()
+endif ()
+if (NOT DEFINED INSTALLDIR)
+    set (INSTALLDIR "@CMAKE_INSTALL_PREFIX@")
+endif ()
+if (NOT DEFINED CTEST_CONFIGURATION_TYPE)
+    set (CTEST_CONFIGURATION_TYPE "Release")
+endif ()
+if (NOT DEFINED CTEST_SOURCE_NAME)
+    set (CTEST_SOURCE_NAME "HDF4Examples")
+endif ()
+if (NOT DEFINED STATIC_ONLY)
+    set (STATICONLYLIBRARIES "YES")
+else ()
+    set (STATICONLYLIBRARIES "NO")
+endif ()
+if (NOT DEFINED FORTRAN_LIBRARIES)
+    set (FORTRANLIBRARIES "NO")
+else ()
+    set (FORTRANLIBRARIES "YES")
+endif ()
+if (NOT DEFINED JAVA_LIBRARIES)
+    set (JAVALIBRARIES "NO")
+else ()
+    set (JAVALIBRARIES "YES")
+endif ()
+
+#TAR_SOURCE - name of tarfile
+#if (NOT DEFINED TAR_SOURCE)
+#  set (CTEST_USE_TAR_SOURCE "HDF5Examples-1.10.1-Source")
+#endif ()
+
+###############################################################################################################
+#     Adjust the following SET Commands as needed
+###############################################################################################################
+if (WIN32)
+  if (${STATICONLYLIBRARIES})
+    set (BUILD_OPTIONS "${BUILD_OPTIONS} -DBUILD_SHARED_LIBS:BOOL=OFF")
+  endif ()
+  set (ENV{HDF5_DIR} "${INSTALLDIR}/cmake")
+  set (CTEST_BINARY_NAME ${CTEST_SOURCE_NAME}\\build)
+  set (CTEST_SOURCE_DIRECTORY "${CTEST_DASHBOARD_ROOT}\\${CTEST_SOURCE_NAME}")
+  set (CTEST_BINARY_DIRECTORY "${CTEST_DASHBOARD_ROOT}\\${CTEST_BINARY_NAME}")
+else (WIN32)
+  if (${STATICONLYLIBRARIES})
+    set (BUILD_OPTIONS "${BUILD_OPTIONS} -DBUILD_SHARED_LIBS:BOOL=OFF -DCMAKE_ANSI_CFLAGS:STRING=-fPIC")
+  endif ()
+  set (ENV{HDF4_DIR} "${INSTALLDIR}/share/cmake")
+  set (ENV{LD_LIBRARY_PATH} "${INSTALLDIR}/lib")
+  set (CTEST_BINARY_NAME ${CTEST_SOURCE_NAME}/build)
+  set (CTEST_SOURCE_DIRECTORY "${CTEST_DASHBOARD_ROOT}/${CTEST_SOURCE_NAME}")
+  set (CTEST_BINARY_DIRECTORY "${CTEST_DASHBOARD_ROOT}/${CTEST_BINARY_NAME}")
+endif(WIN32)
+if (${FORTRANLIBRARIES})
+  set (BUILD_OPTIONS "${BUILD_OPTIONS} -DHDF_BUILD_FORTRAN:BOOL=ON")
+else ()
+  set (BUILD_OPTIONS "${BUILD_OPTIONS} -DHDF_BUILD_FORTRAN:BOOL=OFF")
+endif ()
+if (${JAVALIBRARIES})
+  set (BUILD_OPTIONS "${BUILD_OPTIONS} -DHDF_BUILD_JAVA:BOOL=ON")
+else ()
+  set (BUILD_OPTIONS "${BUILD_OPTIONS} -DHDF_BUILD_JAVA:BOOL=OFF")
+endif ()
+set (BUILD_OPTIONS "${BUILD_OPTIONS} -DHDF4_PACKAGE_NAME:STRING=@HDF4_PACKAGE@@HDF_PACKAGE_EXT@")
+
+###############################################################################################################
+# For any comments please contact cdashhelp@hdfgroup.org
+#
+###############################################################################################################
+
+#-----------------------------------------------------------------------------
+# MAC machines need special option
+#-----------------------------------------------------------------------------
+if (APPLE)
+  # Compiler choice
+  execute_process (COMMAND xcrun --find cc OUTPUT_VARIABLE XCODE_CC OUTPUT_STRIP_TRAILING_WHITESPACE)
+  execute_process (COMMAND xcrun --find c++ OUTPUT_VARIABLE XCODE_CXX OUTPUT_STRIP_TRAILING_WHITESPACE)
+  set (ENV{CC} "${XCODE_CC}")
+  set (ENV{CXX} "${XCODE_CXX}")
+  if (NOT NO_MAC_FORTRAN)
+    # Shared fortran is not supported, build static
+    set (BUILD_OPTIONS "${BUILD_OPTIONS} -DBUILD_SHARED_LIBS:BOOL=OFF -DCMAKE_ANSI_CFLAGS:STRING=-fPIC")
+  else ()
+    set (BUILD_OPTIONS "${BUILD_OPTIONS} -DHDF_BUILD_FORTRAN:BOOL=OFF")
+  endif ()
+  set (BUILD_OPTIONS "${BUILD_OPTIONS} -DCTEST_USE_LAUNCHERS:BOOL=ON -DCMAKE_BUILD_WITH_INSTALL_RPATH:BOOL=OFF")
+endif ()
+
+#-----------------------------------------------------------------------------
+set (CTEST_CMAKE_COMMAND "\"${CMAKE_COMMAND}\"")
+## --------------------------
+if (CTEST_USE_TAR_SOURCE)
+  ## Uncompress source if tar or zip file provided
+  ## --------------------------
+  if (WIN32)
+    message (STATUS "extracting... [${CMAKE_EXECUTABLE_NAME} -E tar -xvf ${CTEST_USE_TAR_SOURCE}.zip]")
+    execute_process (COMMAND ${CMAKE_EXECUTABLE_NAME} -E tar -xvf ${CTEST_DASHBOARD_ROOT}\\${CTEST_USE_TAR_SOURCE}.zip RESULT_VARIABLE rv)
+  else ()
+    message (STATUS "extracting... [${CMAKE_EXECUTABLE_NAME} -E tar -xvf ${CTEST_USE_TAR_SOURCE}.tar]")
+    execute_process (COMMAND ${CMAKE_EXECUTABLE_NAME} -E tar -xvf ${CTEST_DASHBOARD_ROOT}/${CTEST_USE_TAR_SOURCE}.tar RESULT_VARIABLE rv)
+  endif ()
+
+  if (NOT rv EQUAL 0)
+    message (STATUS "extracting... [error-(${rv}) clean up]")
+    file (REMOVE_RECURSE "${CTEST_SOURCE_DIRECTORY}")
+    message (FATAL_ERROR "error: extract of ${CTEST_SOURCE_NAME} failed")
+  endif ()
+endif ()
+
+#-----------------------------------------------------------------------------
+## Clear the build directory
+## --------------------------
+set (CTEST_START_WITH_EMPTY_BINARY_DIRECTORY TRUE)
+if (EXISTS "${CTEST_BINARY_DIRECTORY}" AND IS_DIRECTORY "${CTEST_BINARY_DIRECTORY}")
+  ctest_empty_binary_directory (${CTEST_BINARY_DIRECTORY})
+else ()
+  file (MAKE_DIRECTORY "${CTEST_BINARY_DIRECTORY}")
+endif ()
+
+# Use multiple CPU cores to build
+include (ProcessorCount)
+ProcessorCount (N)
+if (NOT N EQUAL 0)
+  if (NOT WIN32)
+    set (CTEST_BUILD_FLAGS -j${N})
+  endif ()
+  set (ctest_test_args ${ctest_test_args} PARALLEL_LEVEL ${N})
+endif ()
+set (CTEST_CONFIGURE_COMMAND
+    "${CTEST_CMAKE_COMMAND} -C \"${CTEST_SOURCE_DIRECTORY}/config/cmake/cacheinit.cmake\" -DCMAKE_BUILD_TYPE:STRING=${CTEST_CONFIGURATION_TYPE} ${BUILD_OPTIONS} \"-G${CTEST_CMAKE_GENERATOR}\" \"${CTEST_SOURCE_DIRECTORY}\""
+)
+
+#-----------------------------------------------------------------------------
+## -- set output to english
+set ($ENV{LC_MESSAGES}  "en_EN")
+
+#-----------------------------------------------------------------------------
+configure_file (${CTEST_SOURCE_DIRECTORY}/config/cmake/CTestCustom.cmake ${CTEST_BINARY_DIRECTORY}/CTestCustom.cmake)
+ctest_read_custom_files ("${CTEST_BINARY_DIRECTORY}")
+## NORMAL process
+## --------------------------
+ctest_start (Experimental)
+ctest_configure (BUILD "${CTEST_BINARY_DIRECTORY}")
+if (LOCAL_SUBMIT)
+  ctest_submit (PARTS Configure Notes)
+endif ()
+ctest_build (BUILD "${CTEST_BINARY_DIRECTORY}" APPEND)
+if (LOCAL_SUBMIT)
+  ctest_submit (PARTS Build)
+endif ()
+ctest_test (BUILD "${CTEST_BINARY_DIRECTORY}" APPEND ${ctest_test_args} RETURN_VALUE res)
+if (LOCAL_SUBMIT)
+  ctest_submit (PARTS Test)
+endif ()
+if (res GREATER 0)
+  message (FATAL_ERROR "tests FAILED")
+endif ()
+#-----------------------------------------------------------------------------
+##############################################################################################################
 
-message("DONE")
-#################################################################################
 
 
 
diff --git a/release_notes/USING_HDF4_VS.txt b/release_notes/USING_HDF4_VS.txt
index 7b68ed53..19dc75f9 100644
--- a/release_notes/USING_HDF4_VS.txt
+++ b/release_notes/USING_HDF4_VS.txt
@@ -50,11 +50,11 @@ Using Visual Studio 2008 with HDF4 Libraries built with Visual Studio 2008
           and select "x64".
 
       2.2 Find the box "Show directories for", choose "Include files", add the 
-          header path (i.e. c:\Program Files\HDF_Group\HDF4\1.8.x\include)
+          header path (i.e. c:\Program Files\HDF_Group\HDF\4.2.x\include)
           to the included directories.
 
       2.3 Find the box "Show directories for", choose "Library files", add the
-          library path (i.e. c:\Program Files\HDF_Group\HDF4\1.8.x\lib)
+          library path (i.e. c:\Program Files\HDF_Group\HDF\4.2.x\lib)
           to the library directories.
           
       2.4 If using Fortran libraries, you will also need to setup the path
